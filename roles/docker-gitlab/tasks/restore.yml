---
# file: roles/docker-gitlab/tasks/restore.yaml

# *****************************************************************************
# Get data from tape

- name: find files
  find:
    path: '{{ gitlab_docker_restore_dir }}'
    file_type: any
    follow: true
  register: gitlab_backup

- name: data from tape
  bacula:
    command: restore
    storage: '{{ bacula_storage }}'
    fileset: '{{ bacula_fileset }}'
    dest: '{{ bacula_dest }}'
    path_to_restore: '{{ gitlab_docker_backup_dir }}'
  when: gitlab_backup.matched == 0

- name: find gitlab config backups
  find:
    path: '{{ gitlab_docker_restore_dir }}'
    pattern: 'etc-gitlab-*.tgz'
    file_type: any
    follow: true
  register: gitlab_config

- name: find gitlab data backups
  find:
    path: '{{ gitlab_docker_restore_dir }}'
    pattern: '*_gitlab_backup.tar'
    file_type: any
    follow: true
  register: gitlab_data

# - name: File permissions
#   file:
#     path: '{{ gitlab_docker_restore_dir }}/{{ item }}'
#     state: touch
#     owner: root
#     group: root
#     mode: 'u=rwx,g=rwx,o='
#   with_items: '{{ gitlab_backup.file_list | default([]) }}'

# *****************************************************************************
# restore the gitlab backup

- name: Copy backup files to container
  copy:
    remote_src: yes
    src: '{{ item.path }}'
    dest: '{{ gitlab_docker_backup_dir }}/'
    owner: root
    group: root
    mode: 'u=rwx,g=rwx,o=rwx'
  loop: 
  - '{{ gitlab_config.files | first }}'
  - '{{ gitlab_data.files | first }}'

- name: Extract gitlab configuration and SSH keys
  command: >
    docker exec -t {{ gitlab_container_name }}
    /bin/sh -c 'tar vxf {{ gitlab_backup_mountpoint }}/etc-gitlab-*.tgz -C /'

- name: Stop gitlab services
  command: >
    docker exec -t {{ gitlab_container_name }} gitlab-ctl stop {{ item }}
  loop:
    - unicorn
    - sidekiq

- name: gitlab restore script
  command: >
    docker exec -t {{ gitlab_container_name }} gitlab-rake gitlab:backup:restore force=yes

- name: Gitlab reconfigure
  command: >
    docker exec -t {{ gitlab_container_name }} gitlab-ctl reconfigure

- name: Start gitlab services
  command: >
    docker exec -t {{ gitlab_container_name }} gitlab-ctl start

- name: Wait for gitlab to be fully running
  docker_health:
    name: '{{ gitlab_container_name }}'
  register: gitlab_health
  retries: 60
  delay: 5
  until: gitlab_health.Health.Status == 'healthy'

# *****************************************************************************
# cleanup

- name: Remove files
  file:
    path: '{{ gitlab_docker_restore_dir }}'
    state: absent

- name: State file
  shell: 'date --rfc-3339=seconds > {{ gitlab_config_dir }}/restore.date.txt'
  when: st_gitlab_restore.stat.exists == False
