#!/bin/bash

# Ansible transports arguments to modules in a file. The
# path to the arguments file is in $1, and the file
# contains the module's arguments like this:
#
#       image_name=novatechweb/ldap image_tag=current data_volume_container_name=ldap_DV
#
# Arguments:
#    image_name
#    image_tag
#    data_volume_container_name

eval $(sed -e "s/\s?\([^=]+\)\s?=\s?\(\x22\([^\x22]+\)\x22|\x27\([^\x27]+\)\x27|\(\S+\)\)\s?/\1='\2'/p" $1)

if [[ -z "${image_name}" ]]; then
    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs image_name= argument\"}"
    exit 1
fi

if [[ -z "${image_tag}" ]]; then
    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs image_tag= argument\"}"
    exit 1
fi

if [[ -z "${data_volume_container_name}" ]]; then
    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs data_volume_container_name= argument\"}"
    exit 1
fi

# *****************************************************************************
# Check if data_volume_container_name exists

docker inspect ${data_volume_container_name} &> /dev/null
result="${?}"

if [[ ${result} == "0" ]]; then
    printf "{\"failed\": false, \"changed\": false, \"msg\": \"DataVolume container name already exists: ${data_volume_container_name}\"}"
    exit 0
fi

# *****************************************************************************
# create the container for the Data Volume

error_msg=$(docker 2>&1 run --name ${data_volume_container_name} --entrypoint /bin/true ${image_name}:${image_tag})
result="${?}"

if [[ ${result} != "0" ]]; then
    printf "{\"failed\": true, \"changed\": false, \"msg\": \"${error_msg}\"}"
    exit 1
fi

printf "{\"failed\": false, \"changed\": true, \"msg\": \"Created container ${data_volume_container_name} for the Data Volume\"}"
exit 0
