Bottom: 1b3bbf27baf79b518aa2f5e60ade2a65176f2fec
Top:    e3d18cc9f5cfa448defb56898a909076fcad960e
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-08-07 14:30:38 -0500

Refresh of use-docker-named-volumes

---
diff --git a/ansible-playbook/library/docker_datavolume b/ansible-playbook/library/docker_datavolume
deleted file mode 100644
index f79916f1..00000000
--- a/ansible-playbook/library/docker_datavolume
+++ /dev/null
@@ -1,54 +0,0 @@
-#!/bin/bash
-
-# Ansible transports arguments to modules in a file. The
-# path to the arguments file is in $1, and the file
-# contains the module's arguments like this:
-#
-#       image_name=novatechweb/ldap image_tag=current data_volume_container_name=ldap_DV
-#
-# Arguments:
-#    image_name
-#    image_tag
-#    data_volume_container_name
-
-eval $(sed -e "s/\s?\([^=]+\)\s?=\s?\(\x22\([^\x22]+\)\x22|\x27\([^\x27]+\)\x27|\(\S+\)\)\s?/\1='\2'/p" $1)
-
-if [[ -z "${image_name}" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs image_name= argument\"}"
-    exit 1
-fi
-
-if [[ -z "${image_tag}" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs image_tag= argument\"}"
-    exit 1
-fi
-
-if [[ -z "${data_volume_container_name}" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs data_volume_container_name= argument\"}"
-    exit 1
-fi
-
-# *****************************************************************************
-# Check if data_volume_container_name exists
-
-docker inspect ${data_volume_container_name} &> /dev/null
-result="${?}"
-
-if [[ ${result} == "0" ]]; then
-    printf "{\"failed\": false, \"changed\": false, \"msg\": \"DataVolume container name already exists: ${data_volume_container_name}\"}"
-    exit 0
-fi
-
-# *****************************************************************************
-# create the container for the Data Volume
-
-error_msg=$(docker 2>&1 run --name ${data_volume_container_name} --entrypoint /bin/true ${image_name}:${image_tag})
-result="${?}"
-
-if [[ ${result} != "0" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"${error_msg}\"}"
-    exit 1
-fi
-
-printf "{\"failed\": false, \"changed\": true, \"msg\": \"Created container ${data_volume_container_name} for the Data Volume\"}"
-exit 0
diff --git a/docker/docker-mantisbt/mantisbt.sh b/docker/docker-mantisbt/mantisbt.sh
index 7c584d4d..44dc2c31 100755
--- a/docker/docker-mantisbt/mantisbt.sh
+++ b/docker/docker-mantisbt/mantisbt.sh
@@ -56,8 +56,8 @@ done
 # make certian the containers exist
 docker inspect ${MANTISBT_CONTAINER_NAME} > /dev/null
 docker inspect ${MANTISBT_DB_CONTAINER_NAME} > /dev/null
-docker inspect ${MANTISBT_DV_NAME} > /dev/null
-docker inspect ${MANTISBT_DB_DV_NAME} > /dev/null
+docker volume inspect ${MANTISBT_DV_NAME} > /dev/null
+docker volume inspect ${MANTISBT_DB_DV_NAME} > /dev/null
 
 get_db_user_and_password() {
     db_user="$(docker 2>&1 exec ${MANTISBT_CONTAINER_NAME} grep -e '^$g_db_username' config_inc.php|sed 's|^.* = \"\(.*\)\";$|\1|' || true)"
diff --git a/docker/docker-mediawiki/mediawiki.sh b/docker/docker-mediawiki/mediawiki.sh
index d52bd317..be0f4f07 100755
--- a/docker/docker-mediawiki/mediawiki.sh
+++ b/docker/docker-mediawiki/mediawiki.sh
@@ -53,8 +53,8 @@ done
 # make certian the containers exist
 docker inspect ${WIKI_CONTAINER_NAME} > /dev/null
 docker inspect ${WIKI_DB_CONTAINER_NAME} > /dev/null
-docker inspect ${WIKI_DV_NAME} > /dev/null
-docker inspect ${WIKI_DB_DV_NAME} > /dev/null
+docker volume inspect ${WIKI_DV_NAME} > /dev/null
+docker volume inspect ${WIKI_DB_DV_NAME} > /dev/null
 
 get_db_user_and_password() {
     db_user="$(docker 2>&1 exec ${WIKI_CONTAINER_NAME} grep -e '^$wgDBuser' LocalSettings.php|sed 's|^.* = \"\(.*\)\";$|\1|' || true)"
diff --git a/roles/docker-exim4/defaults/main.yml b/roles/docker-exim4/defaults/main.yml
index 8a1f2ef2..087ad336 100644
--- a/roles/docker-exim4/defaults/main.yml
+++ b/roles/docker-exim4/defaults/main.yml
@@ -23,6 +23,9 @@ exim4_image_name: '{{ docker_registry_username }}/exim4'
 # the name of the container being started
 exim4_container_name: '{{ docker_name_prefix }}exim4'
 
+# the name of the config-volume used by the container
+exim4_cv_name: '{{ docker_name_prefix }}exim4_CV'
+
 # the name of the data-volume used by the container
 exim4_dv_name: '{{ docker_name_prefix }}exim4_DV'
 
diff --git a/roles/docker-exim4/tasks/main.yml b/roles/docker-exim4/tasks/main.yml
index b8d72960..aed4ecf5 100644
--- a/roles/docker-exim4/tasks/main.yml
+++ b/roles/docker-exim4/tasks/main.yml
@@ -92,10 +92,12 @@
 # Create the data volumes
 
 - name: data-volume container
-  docker_datavolume:
-    image_name: '{{ exim4_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ exim4_dv_name }}'
+  docker_volume:
+    name: '{{ exim4_cv_name }}'
+
+- name: data-volume container
+  docker_volume:
+    name: '{{ exim4_dv_name }}'
 
 # *****************************************************************************
 # Start the data container running
@@ -109,6 +111,7 @@
     restart_policy: '{{ docker_restart_policy }}'
     state: started
     volumes:
+      - '{{ exim4_cv_name }}:/etc/exim4:z'
       - '{{ exim4_dv_name }}:/var/spool/exim4:z'
       - '{{ openssl_dv_name }}:/etc/ssl/private:z'
 
diff --git a/roles/docker-gitlab/tasks/main.yml b/roles/docker-gitlab/tasks/main.yml
index 25e84a62..70bf4e2d 100644
--- a/roles/docker-gitlab/tasks/main.yml
+++ b/roles/docker-gitlab/tasks/main.yml
@@ -97,16 +97,12 @@
 # Create the data volumes
 
 - name: data-volume container (gitlab)
-  docker_datavolume:
-    image_name: '{{ gitlab_dv_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ gitlab_dv_name }}'
+  docker_volume:
+    name: '{{ gitlab_dv_name }}'
 
 - name: data-volume container (postgres)
-  docker_datavolume:
-    image_name: '{{ gitlab_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ gitlab_db_dv_name }}'
+  docker_volume:
+    name: '{{ gitlab_db_dv_name }}'
 
 - name: stop prev container (postgres)
   docker_container:
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index 8b7ad07f..7c808bbf 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -85,76 +85,77 @@
     image_tag: '{{ docker_image_tag }}'
     dockerfile_dir: '{{ docker_projects_dir }}/docker-mantisbt'
 
-- name: Checkout db repo
-  git:
-    repo: '{{ mantisbt_db_image_repo }}'
-    version: master
-    dest: '{{ docker_projects_dir }}/docker-mysql-data'
+# *****************************************************************************
+# Create the data volumes
 
-- name: build data-container image
-  docker_build:
-    image_name: '{{ mantisbt_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    dockerfile_dir: '{{ docker_projects_dir }}/docker-mysql-data'
+- name: data-volume container (mantisbt)
+  docker_volume:
+    name: '{{ mantisbt_dv_name }}'
+
+- name: config-volume container (mysql)
+  docker_volume:
+    name: '{{ mantisbt_db_cv_name }}'
+
+- name: data-volume container (mysql)
+  docker_volume:
+    name: '{{ mantisbt_db_dv_name }}'
 
 # *****************************************************************************
-# copy the MySQL config to the restore directory
+# Configure the database
+
+- name: make temporary directory for config
+  tempfile:
+    state: directory
+  register: config_tempdir
 
-- name: copy mysql config
+- name: upload mysql config
   copy:
     src: '{{ item }}'
-    dest: '{{ host_mantisbt_docker_restore_dir }}/{{ item }}'
-    setype: svirt_sandbox_file_t
+    dest: '{{ config_tempdir.path }}/{{ item }}'
   with_items:
   - largefile.cnf
   - character-set.cnf
 
-# *****************************************************************************
-# Create the data volumes
-
-- name: data-volume container (mantisbt)
-  docker_datavolume:
-    image_name: '{{ mantisbt_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ mantisbt_dv_name }}'
-
-- name: data-volume container (mysql)
-  docker_datavolume:
-    image_name: '{{ mantisbt_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ mantisbt_db_dv_name }}'
-
-- name: stop prev container (mysql)
-  docker_container:
-    image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-    name: '{{ mantisbt_db_container_name }}'
-    state: stopped
-
-- name: initial populate (mysql - import config)
-  command: 'docker run --rm --volumes-from {{ mantisbt_db_dv_name }} -v {{ host_mantisbt_docker_restore_dir }}:/tmp/conf.d {{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-
-- name: initial populate (mysql - database)
-  docker_db_init:
-    image_name: '{{ mantisbt_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    container_name: '{{ mantisbt_db_dv_name }}_init_db'
-    data_volume_container_name: '{{ mantisbt_db_dv_name }}'
-    database_name: bugtracker
-    database_user: '{{ mantisbt_db_user }}'
-    database_password: '{{ mantisbt_db_password | quote }}'
-    database_root_password: '{{ mantisbt_db_root_password | quote }}'
+- name: copy mysql config to volume
+  command: >
+    docker run --rm
+    -v '{{ config_tempdir.path }}:/from'
+    -v '{{ mantisbt_db_cv_name }}:/to'
+    alpine /bin/ash -c 'cp -v /from/* /to'
 
 # *****************************************************************************
-# Start the data container running
+# Start the database
 
 - name: start container (mysql)
   docker_container:
     detach: true
-    image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
+    image: '{{ mantisbt_db_image_name }}'
     name: '{{ mantisbt_db_container_name }}'
     restart_policy: '{{ docker_restart_policy }}'
-    volumes_from:
-      - '{{ mantisbt_db_dv_name }}'
+    volumes:
+      - '{{ mantisbt_db_cv_name }}:/etc/mysql/conf.d:z'
+      - '{{ mantisbt_db_dv_name }}:/var/lib/mysql:z'
+    env:
+      MYSQL_DATABASE: '{{ mantisbt_database_name }}'
+      MYSQL_ROOT_PASSWORD: '{{ mantisbt_db_root_password }}'
+      MYSQL_USER: '{{ mantisbt_db_user }}'
+      MYSQL_PASSWORD: '{{ mantisbt_db_password }}'
+
+- name: wait for initialization to complete
+  shell: >
+      printf 'SHOW GLOBAL STATUS\n' | docker exec -i
+      '{{ mantisbt_db_container_name }}'
+      mysql --host=localhost
+      --user={{ mantisbt_db_user | quote }}
+      --password={{ mantisbt_db_password | quote }}
+      '{{ mantisbt_database_name }}'
+  register: db_status
+  retries: 20
+  delay: 3
+  until: "db_status.rc == 0"
+
+# *****************************************************************************
+# Start the data container running
 
 - name: start container (mantisbt)
   docker_container:
@@ -173,9 +174,9 @@
     name: '{{ mantisbt_container_name }}'
     ports: '{{ container_port_map.mantisbt.port_args }}'
     restart_policy: '{{ docker_restart_policy }}'
-    volumes_from:
-      - '{{ openssl_dv_name }}'
-      - '{{ mantisbt_dv_name }}'
+    volumes:
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ mantisbt_dv_name }}:/var/www/html:z'
 
 # *****************************************************************************
 # remove the MySQL config in the restore directory
diff --git a/roles/docker-mediawiki/defaults/main.yml b/roles/docker-mediawiki/defaults/main.yml
index a95335ca..2a86d85e 100644
--- a/roles/docker-mediawiki/defaults/main.yml
+++ b/roles/docker-mediawiki/defaults/main.yml
@@ -24,7 +24,7 @@ wiki_image_repo: https://github.com/novatechweb/docker-mediawiki.git
 
 # the name of the image being duilt and used for the container
 wiki_image_name: '{{ docker_registry_username }}/wiki'
-wiki_db_image_name: '{{ repository_images.mysql.image }}'
+wiki_db_image_name: 'mysql:5'
 
 # the name of the container being started
 wiki_container_name: '{{ docker_name_prefix }}wiki'
@@ -45,3 +45,7 @@ wiki_docker_restore_dir: '{{ bacula_dest }}{{ wiki_docker_backup_dir }}'
 # files restored from tape
 wiki_static_backup_file: '/mediawiki.tar'
 wiki_database_backup_file: '/wikidb.sql'
+
+
+# the name of the sql database used by mediawiki
+wiki_database_name: wikidb
diff --git a/roles/docker-mediawiki/tasks/main.yml b/roles/docker-mediawiki/tasks/main.yml
index f54c515c..0789dfcf 100644
--- a/roles/docker-mediawiki/tasks/main.yml
+++ b/roles/docker-mediawiki/tasks/main.yml
@@ -87,44 +87,46 @@
 # Create the data volumes
 
 - name: data-volume container (mediwiki)
-  docker_datavolume:
-    image_name: '{{ wiki_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ wiki_dv_name }}'
+  docker_volume:
+    name: '{{ wiki_dv_name }}'
 
 - name: data-volume container (mysql)
-  docker_datavolume:
-    image_name: '{{ wiki_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ wiki_db_dv_name }}'
-
-- name: stop prev container (mysql)
-  docker_container:
-    image: '{{ wiki_db_image_name }}'
-    name: '{{ wiki_db_container_name }}'
-    state: stopped
-
-- name: initial populate (mysql)
-  docker_db_init:
-    image_name: '{{ wiki_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    container_name: '{{ wiki_db_dv_name }}_init_db'
-    data_volume_container_name: '{{ wiki_db_dv_name }}'
-    database_name: wikidb
-    database_user: '{{ wiki_db_user }}'
-    database_password: '{{ wiki_db_password | quote }}'
-    database_root_password: '{{ wiki_db_root_password | quote }}'
+  docker_volume:
+    name: '{{ wiki_db_dv_name }}'
 
 # *****************************************************************************
-# Start the data container running
+# Start the database
 
 - name: start container (mysql)
   docker_container:
     detach: true
-    image: '{{ wiki_db_image_name }}:{{ docker_image_tag }}'
+    env:
+      MYSQL_DATABASE: '{{ wiki_database_name }}'
+      MYSQL_ROOT_PASSWORD: '{{ wiki_db_root_password }}'
+      MYSQL_USER: '{{ wiki_db_user }}'
+      MYSQL_PASSWORD: '{{ wiki_db_password }}'
+    image: '{{ wiki_db_image_name }}'
     name: '{{ wiki_db_container_name }}'
     restart_policy: '{{ docker_restart_policy }}'
-    volumes_from: '{{ wiki_db_dv_name }}'
+    state: started
+    volumes:
+      - '{{ wiki_db_dv_name }}:/var/lib/mysql:z'
+
+- name: wait for mysql initialization to complete
+  shell: >
+      printf 'SHOW GLOBAL STATUS\n' | docker exec -i 
+      '{{ wiki_db_container_name }}'
+      mysql --host=localhost
+      --user={{ wiki_db_user | quote }}
+      --password={{ wiki_db_password | quote }}
+      '{{ wiki_database_name }}'
+  register: db_status
+  retries: 20
+  delay: 3
+  until: "db_status.rc == 0"
+
+# *****************************************************************************
+# Start the data container running
 
 - name: start container (mediwiki)
   docker_container:
@@ -143,9 +145,9 @@
     ports: '{{ container_port_map.wiki.port_args }}'
     restart_policy: '{{ docker_restart_policy }}'
     state: started
-    volumes_from:
-      - '{{ openssl_dv_name }}'
-      - '{{ wiki_dv_name }}'
+    volumes:
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ wiki_dv_name }}/var/www/html:z'
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-mediawiki/templates/config.sh.j2 b/roles/docker-mediawiki/templates/config.sh.j2
index 28f6a40f..4e6831e3 100644
--- a/roles/docker-mediawiki/templates/config.sh.j2
+++ b/roles/docker-mediawiki/templates/config.sh.j2
@@ -10,5 +10,5 @@
   HOST_WIKI_BACKUP_DIR='{{ wiki_docker_backup_dir }}'
   STATIC_BACKUP_FILE='{{ wiki_static_backup_file }}'
   DATABASE_BACKUP_FILE='{{ wiki_database_backup_file }}'
-  WIKI_DB_DB_NAME='wikidb'
+  WIKI_DB_DB_NAME='{{ wiki_database_name }}'
 }
diff --git a/roles/docker-openldap/defaults/main.yml b/roles/docker-openldap/defaults/main.yml
index dd0484f2..1a00928d 100644
--- a/roles/docker-openldap/defaults/main.yml
+++ b/roles/docker-openldap/defaults/main.yml
@@ -34,6 +34,7 @@ openldap_image_name: '{{ docker_registry_username }}/ldap'
 openldap_container_name: '{{ docker_name_prefix }}ldap'
 
 # the name of the data-volume used by the container
+openldap_cv_name: '{{ docker_name_prefix }}openldap_CV'
 openldap_dv_name: '{{ docker_name_prefix }}openldap_DV'
 
 # restore directories to temporarly store data being restored into docker containers
diff --git a/roles/docker-openldap/tasks/main.yml b/roles/docker-openldap/tasks/main.yml
index 590fc18e..836e2b7e 100644
--- a/roles/docker-openldap/tasks/main.yml
+++ b/roles/docker-openldap/tasks/main.yml
@@ -76,11 +76,13 @@
 # *****************************************************************************
 # Create the data volumes
 
-- name: data-volume container
-  docker_datavolume:
-    image_name: '{{ openldap_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ openldap_dv_name }}'
+- name: config volume
+  docker_volume:
+    name: '{{ openldap_cv_name }}'
+
+- name: data volume
+  docker_volume:
+    name: '{{ openldap_dv_name }}'
 
 # *****************************************************************************
 # Populate the ldap data-volume with default data
@@ -92,7 +94,8 @@
     image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
     name: openldap_populate
     volumes:
-      - '{{ openldap_dv_name }}'
+      - '{{ openldap_cv_name }}:/etc/ldap:z'
+      - '{{ openldap_dv_name }}:/var/lib/ldap:z'
   when: st_openldap_restore.stat.exists == False
 
 - name: initial populate
@@ -113,9 +116,10 @@
     name: '{{ openldap_container_name }}'
     ports: '{{ container_port_map.ldap.port_args }}'
     restart_policy: '{{ docker_restart_policy }}'
-    volumes_from:
-      - '{{ openssl_dv_name }}'
-      - '{{ openldap_dv_name }}'
+    volumes:
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ openldap_cv_name }}:/etc/ldap:z'
+      - '{{ openldap_dv_name }}:/var/lib/ldap:z'
 
 - name: start container (phpldapadmin)
   docker_container:
diff --git a/roles/docker-openldap/tasks/restore.yml b/roles/docker-openldap/tasks/restore.yml
index e95d2a03..10564ec4 100644
--- a/roles/docker-openldap/tasks/restore.yml
+++ b/roles/docker-openldap/tasks/restore.yml
@@ -43,9 +43,10 @@
     detach: false
     image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
     volumes:
+    - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+    - '{{ openldap_cv_name }}:/etc/ldap:z'
+    - '{{ openldap_dv_name }}:/var/lib/ldap:z'
     - '{{ openldap_docker_restore_dir }}:/tmp/import_export:z'
-    volumes_from:
-    - '{{ openssl_dv_name }}'
   with_items: '{{ openldap_backup_files }}'
 
 - name: restart container (ldap)
diff --git a/roles/docker-openssl/tasks/main.yml b/roles/docker-openssl/tasks/main.yml
index ee28f99e..e69424dc 100644
--- a/roles/docker-openssl/tasks/main.yml
+++ b/roles/docker-openssl/tasks/main.yml
@@ -69,11 +69,9 @@
 # *****************************************************************************
 # Create the data volumes
 
-- name: data-volume container
-  docker_datavolume:
-    image_name: '{{ openssl_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ openssl_dv_name }}'
+- name: certificates volume
+  docker_volume:
+    name: '{{ openssl_dv_name }}'
 
 # *****************************************************************************
 # Populate the openssl data-volume with default data
diff --git a/roles/docker-openssl/templates/before_backup.j2 b/roles/docker-openssl/templates/before_backup.j2
index 160ff326..75fb3aca 100644
--- a/roles/docker-openssl/templates/before_backup.j2
+++ b/roles/docker-openssl/templates/before_backup.j2
@@ -5,7 +5,8 @@
 docker run --rm -v {{ docker_backup_dir }}:/tmp/import_export:z {{ repository_images.debian.image }}:{{ repository_images.debian.tag }} bash -c "rm -rf /tmp/import_export/openssl"
 mkdir -p -m u=rwx,g=rwx,o= {{ openssl_docker_backup_dir }}
 docker run --rm \
-    --volumes-from {{ openssl_dv_name }} \
+    --volume {{ openssl_dv_name }}:/etc/ssl/private:z \
     {{ openssl_image_name }}:{{ docker_image_tag }} backup > \
         {{ openssl_docker_backup_dir }}{{ openssl_backup_file }}
+
 {% endif %}
diff --git a/roles/docker-svn/tasks/main.yml b/roles/docker-svn/tasks/main.yml
index 1ee9bb27..9367164c 100644
--- a/roles/docker-svn/tasks/main.yml
+++ b/roles/docker-svn/tasks/main.yml
@@ -69,10 +69,8 @@
 # Create the data volumes
 
 - name: data-volume container
-  docker_datavolume:
-    image_name: '{{ svn_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    data_volume_container_name: '{{ svn_dv_name }}'
+  docker_volume:
+    name: '{{ svn_dv_name }}'
 
 # *****************************************************************************
 # Start the data container running
@@ -90,9 +88,9 @@
     name: '{{ svn_container_name }}'
     ports: '{{ container_port_map.svn.port_args }}'
     restart_policy: '{{ docker_restart_policy }}'
-    volumes_from:
-      - '{{ openssl_dv_name }}'
-      - '{{ svn_dv_name }}'
+    volumes:
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ svn_dv_name }}:/var/lib/svn:z'
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-svn/tasks/restore.yml b/roles/docker-svn/tasks/restore.yml
index 2f173895..b9e86afc 100644
--- a/roles/docker-svn/tasks/restore.yml
+++ b/roles/docker-svn/tasks/restore.yml
@@ -41,9 +41,8 @@
     detach: False
     image: '{{ svn_image_name }}:{{ docker_image_tag }}'
     name: 'svn_restore'
-    volumes_from:
-      - '{{ svn_dv_name }}'
     volumes:
+      - '{{ svn_dv_name }}:/var/lib/svn:z'
       - '{{ svn_docker_restore_dir }}:/tmp/import_export:z'
   when: not((svn_repos is undefined) or (svn_repos is none) or (svn_repos|trim == '')) or svn_repo_backup.file_list != []
