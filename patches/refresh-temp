Bottom: 17401ea33fbfbd10ac0984b0ed96956c0a4440bd
Top:    12eaf7e62666596fb810f1df24e081fff9a10d41
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-08-09 15:31:41 -0500

Refresh of update-ntel-builds-for-new

---
diff --git a/ansible-playbook/buildbot.yml b/ansible-playbook/buildbot.yml
index b9ac17fb..6a76f489 100644
--- a/ansible-playbook/buildbot.yml
+++ b/ansible-playbook/buildbot.yml
@@ -19,9 +19,14 @@
   become_user: root
   become_method: sudo
   tags:
-  - buildbot
-  - buildbot-worker
+    - buildbot
+    - buildbot-worker
   vars:
-    buildbot_master: "{{ hostvars.buildbot_master.ip_addr }}"
-  roles:
-  - role: buildbot-worker-ntel
+    buildbot_master: "{{ hostvars['buildbot-master'].ip_addr }}"
+    known_hosts: "{{gitlab_keys.stdout}}"
+  tasks:
+  - name: Scan Gitlab ssh keys
+    command: ssh-keyscan {{gitlab_hostname}}
+    register: gitlab_keys
+  - import_role: 
+      name: buildbot-worker-ntel
diff --git a/docker/buildbot-master/buildbot/openembedded.py b/docker/buildbot-master/buildbot/openembedded.py
index 5d2ba3d4..7e3643f2 100755
--- a/docker/buildbot-master/buildbot/openembedded.py
+++ b/docker/buildbot-master/buildbot/openembedded.py
@@ -143,12 +143,6 @@ def ComputeBuildProperties(props):
     newprops['archive'] = archive = util.Interpolate(
         "%(kw:d)s/%(prop:machine)s.%(kw:t)s.tar.gz", d=dest, t=ts)
 
-    newprops['pkcs11_pin'] = pin = props.getProperty('release_pin')
-    if pin == '':
-        newprops['sign.conf'] = 'test.conf'
-    else:
-        newprops['sign.conf'] = 'release.conf'
-
     bbflags = props.getProperty('bbflags', DEFAULT_BBFLAGS)
     cache = props.getProperty('cache', True)
     if not cache:
@@ -162,8 +156,6 @@ auto_conf = [
     'MACHINE                = "%(prop:machine)s"',
     '%(prop:multiconfig:+'
     'BBMULTICONFIG          = "%(prop:multiconfig)s")s',
-    'TMPDIR_append          = "-${MACHINE}"',
-    'DEPLOY_DIR_append      = "-${MACHINE}"',
     '',
     '# Directories for cached downloads and state',
     'DL_DIR                 = "/cache/downloads"',
@@ -176,61 +168,12 @@ auto_conf = [
     'unset PRSERV_HOST',
     '',
     '# Release signing configuration',
+    '%(prop:release_pin:+'
+    'PKCS11_PIN             = "%(prop:release_pin)s")s',
     'include %(prop:release_pin:#?|release.conf|test.conf)s',
     '',
 ]
 
-multi_conf = [
-    '# multiconfig for %(kw:machine)s',
-    'MACHINE = "%(kw:machine)s"',
-]
-
-test_conf = [
-    '# Uncomment to build with test keys',
-    'UBOOT_SIGN_ENABLE = "1"',
-    'UBOOT_SIGN_KEYNAME = "u-boot-test"',
-    'UBOOT_SIGN_IMAGE_KEYNAME = "u-boot-image-test"',
-    'UBOOT_SIGN_KEYDIR = "${TOPDIR}/keys"',
-    'UBOOT_MKIMAGE_DTCOPTS = "-I dts -O dtb -p 2000"',
-    '',
-    '# Uncomment to build with test keys',
-    'SWUPDATE_SIGNING = "1"',
-    'SWUPDATE_PRIVATE_KEY = "${TOPDIR}/keys/swupdate-test.pem"',
-]
-
-release_conf = [
-    'PKCS11_TOKEN = "model=PSI-E2%%3aPL220;manufacturer=SafeNet%%20Inc.;serial=540758%%3a63014;token=orion"',
-    '# Fill in this PIN for production signing',
-    'PKCS11_PIN ?= "%(prop:pkcs11_pin)s"',
-    '',
-    '# Uncomment to build with production keys',
-    'UBOOT_SIGN_ENABLE = "1"',
-    'UBOOT_SIGN_KEYNAME = "${MACHINE}-u-boot"',
-    'UBOOT_SIGN_IMAGE_KEYNAME = "${MACHINE}-u-boot-image"',
-    'UBOOT_SIGN_KEYDIR = "${PKCS11_TOKEN};pin-value=${PKCS11_PIN}"',
-    'UBOOT_MKIMAGE_DTCOPTS = "-I dts -O dtb -p 2000"',
-    'UBOOT_MKIMAGE_ENGINE = "pkcs11"',
-    '',
-    '# Uncomment to build with production keys',
-    'IMA_EVM_KEY_DIR = "${TOPDIR}/keys/${MACHINE}-ima"',
-    'IMA_EVM_ROOT_CA = "${TOPDIR}/keys/${MACHINE}-ima/ima-local-ca.x509"',
-    'IMA_EVM_PRIVKEY = "pkcs11:${PKCS11_TOKEN};object=${MACHINE}-ima-key;type=private"',
-    'IMA_EVM_SIGN_EXTRA_ARGS = "-e pkcs11 --engine_so \'${STAGING_LIBDIR_NATIVE}/engines/libpkcs11.so\' --engine_module \'${STAGING_LIBDIR_NATIVE}/p11-kit-proxy.so\' --pkcs11_module cryptoki -p${PKCS11_PIN}"',
-    '',
-    '# Uncomment to build with production keys',
-    'CST_PKCS11_URLPREFIX = "pkcs11:${PKCS11_TOKEN};pin-value=${PKCS11_PIN};object="',
-    'CST_HAB_DIR = "${TOPDIR}/keys/hab-production"',
-    '',
-    '# Uncomment to build with production keys',
-    'SWUPDATE_SIGNING = "1"',
-    'SWUPDATE_PUBLIC_KEY = "${TOPDIR}/keys/swupdate.pub"',
-    'SWUPDATE_SIGN_TOOL = "openssl.real dgst -sha256 -sign \'pkcs11:${PKCS11_TOKEN};object=swupdate;type=private;pin-value=${PKCS11_PIN}\' -engine pkcs11 -keyform engine -out \'${S}/sw-description.sig\' \'${S}/sw-description\'"',
-    '',
-    '# Uncomment for release builds',
-    'NT_GIT_USE_TAGS = "1"',
-    '',
-]
-
 
 class BitBakeConf(steps.StringDownload):
 
@@ -287,10 +230,14 @@ class BitBakeArchive(steps.ShellCommand):
                         util.Property("timestamp")],
             'description': 'archiving',
             'descriptionDone': 'archive',
+            'env': {},
             'flunkOnFailure': True,
             'haltOnFailure': False,
             'name': 'archive',
-            'env': {'PATH': ['/home/buildbot/', '${PATH}']},
+            'env': {'PATH': ['/home/buildbot/', '${PATH}'],
+                    'ENV': 'environment-ntel',
+                    'BASH_ENV': 'environment-ntel',
+                    },
         }
         steps.ShellCommand.__init__(self, **kw)
 
@@ -311,8 +258,6 @@ class BitBakeFactory(util.BuildFactory):
             command=["./oebb.sh", "config", util.Property('machine')]
             ))
         self.addStep(BitBakeConf(auto_conf, conf_file='auto.conf'))
-        self.addStep(BitBakeConf(test_conf, conf_file='test.conf'))
-        self.addStep(BitBakeConf(release_conf, conf_file='release.conf'))
 
         if build_steps:
             self.addSteps(build_steps)
@@ -326,7 +271,8 @@ builders.append(
         workernames=["worker-ntel"],
         factory=BitBakeFactory(
             BitBake("orionlxm-swu-image"),
-            BitBake("orionlxm-swu-image -c populate_sdk"),
+            BitBake("orionlxm-disk-swu-image"),
+            BitBake("orion-headless-image -c populate_sdk"),
         ),
         properties={
             'machine': 'orionlxm',
@@ -342,7 +288,7 @@ builders.append(
         factory=BitBakeFactory(
             BitBake("-c cleanall u-boot-orion-io"),
             BitBake("orion-io-swu-image"),
-            BitBake("orion-io-swu-image -c populate_sdk"),
+            BitBake("orion-headless-image -c populate_sdk"),
         ),
         properties={
             'machine': 'orion-io',
@@ -357,9 +303,9 @@ builders.append(
         workernames=["worker-ntel"],
         factory=BitBakeFactory(
             BitBake("-c cleanall gdk-pixbuf-native librsvg-native gtk-icon-utils-native"),
-            BitBake("orion-graphical-image -c populate_sdk"),
             BitBake("orionlx-cpx-swu-image"),
             BitBake("orionlx-cpx-disk-swu-image"),
+            BitBake("orion-graphical-image -c populate_sdk"),
         ),
         properties={
             'machine': 'orionlx-cpx',
@@ -374,8 +320,8 @@ builders.append(
         workernames=["worker-ntel"],
         factory=BitBakeFactory(
             BitBake("-c cleanall gdk-pixbuf-native librsvg-native gtk-icon-utils-native"),
-            BitBake("orion-graphical-image -c populate_sdk"),
             BitBake("orionlx-plus-swu-image"),
+            BitBake("orion-graphical-image -c populate_sdk"),
         ),
         properties={
             'machine': 'orionlx-plus',
@@ -400,34 +346,23 @@ builders.append(
     ))
 
 multiconfig = ['orionlx-cpx', 'orionlx-plus', 'orionlxm', 'orion-io']
-mc_steps = []
-for machine in multiconfig:
-    mc_steps.append(
-        BitBakeConf(
-            multi_conf,
-            machine=machine,
-            conf_file='multiconfig/%s.conf' % (machine)
-        ))
-mc_steps.extend((
-    BitBake(" gdk-pixbuf-native:do_cleanall"
-            " multiconfig:orionlx-cpx:gdk-pixbuf-native:do_cleanall"
-            " multiconfig:orionlx-plus:gdk-pixbuf-native:do_cleanall"
-            ),
-    BitBake(" orion-graphical-image"
-            " multiconfig:orionlx-cpx:orionlx-cpx-swu-image"
-            " multiconfig:orionlx-cpx:orionlx-cpx-disk-swu-image"
-            " multiconfig:orionlx-plus:orionlx-plus-swu-image"
-            " multiconfig:orionlxm:orionlxm-swu-image"
-            " multiconfig:orion-io:orion-io-swu-image"
-            ),
-))
 builders.append(
     util.BuilderConfig(
         description="Orion (all)",
         name="ntel_all",
         workernames=["worker-ntel"],
         factory=BitBakeFactory(
-            *mc_steps
+            BitBake(" gdk-pixbuf-native:do_cleanall"
+                    " multiconfig:orionlx-cpx:gdk-pixbuf-native:do_cleanall"
+                    " multiconfig:orionlx-plus:gdk-pixbuf-native:do_cleanall"
+                    ),
+            BitBake(" orion-graphical-image"
+                    " multiconfig:orionlx-cpx:orionlx-cpx-swu-image"
+                    " multiconfig:orionlx-cpx:orionlx-cpx-disk-swu-image"
+                    " multiconfig:orionlx-plus:orionlx-plus-swu-image"
+                    " multiconfig:orionlxm:orionlxm-swu-image"
+                    " multiconfig:orion-io:orion-io-swu-image"
+                    ),
         ),
         properties={
             'machine': 'qemux86-64',
diff --git a/roles/buildbot-worker-ntel/defaults/main.yml b/roles/buildbot-worker-ntel/defaults/main.yml
index 65977507..afd6f6b3 100644
--- a/roles/buildbot-worker-ntel/defaults/main.yml
+++ b/roles/buildbot-worker-ntel/defaults/main.yml
@@ -36,6 +36,12 @@ container_env:
 # the name of the container being started
 container_name: '{{ docker_name_prefix }}{{ hostname }}'
 
+# network configuration for the confainer
+container_networks: []
+
+# port configuration of the container
+container_port_args: []
+
 # volumes mounted within the container
 container_volumes:
 - '{{ data_volume }}:{{ data_path }}:z'
@@ -49,7 +55,7 @@ data_path: '/buildbot'
 data_volume: '{{ docker_name_prefix }}{{ hostname }}-data'
 
 # hostname
-hostname: buildbot-worker-ntel
+hostname: '{{ role_name }}'
 
 # address of hsm cryptographic service
 hsm_host: '{{ansible_facts.default_ipv4.address}}'
diff --git a/roles/buildbot-worker-ntel/tasks/main.yml b/roles/buildbot-worker-ntel/tasks/main.yml
index 4d17c428..32136e2f 100644
--- a/roles/buildbot-worker-ntel/tasks/main.yml
+++ b/roles/buildbot-worker-ntel/tasks/main.yml
@@ -46,7 +46,9 @@
     cleanup: yes
     command: /bin/ash -c 
       "mkdir -p {{item}} &&
-      chown -c -R {{buildbot_uid}}:{{buildbot_uid}} {{item}}"
+      if [ $(stat --printf='%u' '{{item}}') -ne {{buildbot_uid}} ]; then
+        chown -c -R {{buildbot_uid}}:{{buildbot_uid}} {{item}};
+      fi"
 
 - name: Create secrets volume
   file:
@@ -76,10 +78,10 @@
   docker_container:
     name: '{{ container_name }}'
     image: '{{ image_name }}:{{ docker_image_tag }}'
-    # networks: '{{ buildbot_worker_ntel_networks }}'
+    networks: '{{ container_networks }}'
     volumes: '{{ container_volumes }}'
     env: '{{ container_env }}'
-    # ports: '{{ buildbot_worker_ntel_port_args }}'
+    ports: '{{ container_port_args }}'
 
 - name: Grab ssh public key
   command: >
@@ -89,5 +91,5 @@
 
 - name: Add buildbot_worker_ntel host
   add_host:
-    name: buildbot_worker_ntel
+    name: "{{ hostname }}"
     pubkey: "{{ output.stdout }}"
