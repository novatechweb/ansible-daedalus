Bottom: a2758704a95a23a7a8329b83b0ee1a0e6ab745fe
Top:    8c185c70e005d37712813b69eecc4d03e2728cae
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-06-08 10:37:34 -0500

Refresh of tmp-mantis-database

---
diff --git a/roles/docker-mantisbt/defaults/main.yml b/roles/docker-mantisbt/defaults/main.yml
index 07dd4212..29727bd9 100644
--- a/roles/docker-mantisbt/defaults/main.yml
+++ b/roles/docker-mantisbt/defaults/main.yml
@@ -47,3 +47,6 @@ mantisbt_database_files_table_backup_file: '/mantisbtdb-files_table.sql'
 
 # Network names
 docker_network_frontend: 'frontend'
+
+# the name of the sql database used by mantisbt
+mantisbt_database_name: 'bugtracker'
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index 31771f24..96a87fe3 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -28,15 +28,6 @@
     mode: 'u=rwx,g=rx,o=rx'
     recurse: no
 
-- name: docker_container.conf dir
-  file:
-    state: directory
-    path: '{{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}'
-    owner: root
-    group: root
-    mode: 'u=rwx,g=rx,o=rx'
-    recurse: no
-
 # *****************************************************************************
 # backup script part
 
@@ -74,13 +65,6 @@
     get_md5: False
   register: st_mantisbt_restore
 
-- name: exists - state file (mysql)
-  stat:
-    path: '{{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}/restore.date.txt'
-    get_checksum: False
-    get_md5: False
-  register: st_mantisbt_db_restore
-
 # *****************************************************************************
 # Update or make the image.
 - name: Checkout image repo
@@ -100,19 +84,6 @@
     name: '{{ mantisbt_image_name }}'
     tag: '{{ docker_image_tag }}'
     path: '{{ docker_projects_dir }}/docker-mantisbt'
-
-# - name: Checkout db repo
-#   git:
-#     repo: '{{ mantisbt_db_image_repo }}'
-#     version: master
-#     dest: '{{ docker_projects_dir }}/docker-mysql-data'
-
-# - name: build data-container image
-#   docker_image:
-#     name: '{{ mantisbt_db_image_name }}'
-#     tag: '{{ docker_image_tag }}'
-#     path: '{{ docker_projects_dir }}/docker-mysql-data'
-#     force: true
   
 # *****************************************************************************
 # Create the data volumes
@@ -129,90 +100,59 @@
   docker_volume:
     name: '{{ mantisbt_db_dv_name }}'
 
-# - name: stop prev container (mysql)
-#   docker_container:
-#     image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-#     name: '{{ mantisbt_db_container_name }}'
-#     state: stopped
-
-# - name: initial populate (mysql - import config)
-#   command: 'docker run --rm --volumes-from {{ mantisbt_db_dv_name }} -v {{ mantisbt_docker_restore_dir }}:/tmp/conf.d {{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-
-# - name: initial populate (mysql - database)
-#   docker_db_init:
-#     image_name: '{{ mantisbt_db_image_name }}'
-#     image_tag: '{{ docker_image_tag }}'
-#     container_name: '{{ mantisbt_db_dv_name }}_init_db'
-#     data_volume_container_name: '{{ mantisbt_db_dv_name }}'
-#     database_name: bugtracker
-#     database_user: '{{ mantisbt_db_user }}'
-#     database_password: '{{ mantisbt_db_password | quote }}'
-#     database_root_password: '{{ mantisbt_db_root_password | quote }}'
-
-- name: initialize mysql container
-  when: st_mantisbt_db_restore.stat.exists == False
-  block:
-  - name: make temporary directory for config
-    tempfile:
-      state: directory
-    register: config_tempdir
-  - name: upload mysql config
-    copy:
-      src: '{{ item }}'
-      dest: '{{ config_tempdir.path }}/{{ item }}'
-    with_items:
-    - largefile.cnf
-    - character-set.cnf
-  - name: copy mysql config to volume
-    command: >
-      docker run --rm 
-      -v '{{ config_tempdir.path }}:/from'
-      -v '{{ mantisbt_db_cv_name }}:/to'
-      alpine /bin/ash -c 'cp -v /from/* /to'
-  - name: Start initialization of empty volume
-    docker_container:
-      name: '{{ mantisbt_db_dv_name}}_init_db'
-      image: '{{ mantisbt_db_image_name }}:{{ mantisbt_db_image_tag }}'
-      volumes:
-        - '{{ mantisbt_db_cv_name }}:/etc/mysql/conf.d:z'
-        - '{{ mantisbt_db_dv_name }}:/var/lib/mysql:z'
-      env:
-        MYSQL_DATABASE: 'bugtracker'
-        MYSQL_ROOT_PASSWORD: '{{ mantisbt_db_root_password }}'
-        MYSQL_USER: '{{ mantisbt_db_user }}'
-        MYSQL_PASSWORD: '{{ mantisbt_db_password }}'
-  - name: wait for initialization to complete
-    shell: >
-        printf 'SHOW GLOBAL STATUS\n' | docker exec -i 
-        {{ mantisbt_db_dv_name}}_init_db 
-        mysql --host=localhost --user={{ mantisbt_db_user | quote }}
-        --password={{ mantisbt_db_password | quote }} bugtracker
-    register: container_status
-    retries: 20
-    delay: 3
-    until: "container_status.rc == 0"
-  - name: remove initialization container
-    docker_container:
-      name: '{{ mantisbt_db_dv_name}}_init_db'
-      state: stopped
-  - name: State file
-    shell: 'date --rfc-3339=seconds > {{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}/restore.date.txt'
+- name: make temporary directory for config
+  tempfile:
+    state: directory
+  register: config_tempdir
 
-# *****************************************************************************
-# Start the data container running
+- name: upload mysql config
+  copy:
+    src: '{{ item }}'
+    dest: '{{ config_tempdir.path }}/{{ item }}'
+  with_items:
+  - largefile.cnf
+  - character-set.cnf
+
+- name: copy mysql config to volume
+  command: >
+    docker run --rm 
+    -v '{{ config_tempdir.path }}:/from'
+    -v '{{ mantisbt_db_cv_name }}:/to'
+    alpine /bin/ash -c 'cp -v /from/* /to'
 
 - name: start container (mysql)
   docker_container:
-    name: '{{ mantisbt_db_container_name }}'
+    name: '{{ mantisbt_db_dv_name}}'
     detach: true
     restart_policy: always
+    image: '{{ mantisbt_db_image_name }}'
     volumes:
       - '{{ mantisbt_db_cv_name }}:/etc/mysql/conf.d:z'
       - '{{ mantisbt_db_dv_name }}:/var/lib/mysql:z'
-    image: '{{ mantisbt_db_image_name }}:{{ mantisbt_db_image_tag }}'
+    env:
+      MYSQL_DATABASE: '{{ mantisbt_database_name }}'
+      MYSQL_ROOT_PASSWORD: '{{ mantisbt_db_root_password }}'
+      MYSQL_USER: '{{ mantisbt_db_user }}'
+      MYSQL_PASSWORD: '{{ mantisbt_db_password }}'
     networks:
       - name: '{{ docker_network_frontend }}'
 
+- name: wait for initialization to complete
+  shell: >
+      printf 'SHOW GLOBAL STATUS\n' | docker exec -i 
+      '{{ mantisbt_db_dv_name}}'
+      mysql --host=localhost 
+      --user={{ mantisbt_db_user | quote }}
+      --password={{ mantisbt_db_password | quote }} 
+      '{{ mantisbt_database_name }}'
+  register: db_status
+  retries: 20
+  delay: 3
+  until: "db_status.rc == 0"
+
+# *****************************************************************************
+# Start the data container running
+
 - name: start container (mantisbt)
   docker_container:
     name: '{{ mantisbt_container_name }}'
diff --git a/roles/docker-mantisbt/templates/config.sh.j2 b/roles/docker-mantisbt/templates/config.sh.j2
index f9538c8a..6f4f7087 100644
--- a/roles/docker-mantisbt/templates/config.sh.j2
+++ b/roles/docker-mantisbt/templates/config.sh.j2
@@ -11,5 +11,5 @@
   STATIC_BACKUP_FILE='{{ mantisbt_static_backup_file }}'
   DATABASE_BACKUP_FILE='{{ mantisbt_database_backup_file }}'
   DATABASE_FILES_TABLE_BACKUP_FILE='{{ mantisbt_database_files_table_backup_file }}'
-  MANTISBT_DB_DB_NAME='bugtracker'
+  MANTISBT_DB_DB_NAME='{{ mantisbt_database_name }}'
 }
