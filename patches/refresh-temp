Bottom: 4bab7d159384292e22a2f260e08f3e3cd21e2062
Top:    54c2913e917e4c069845e7cff6a4f6b4036dd567
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-08-09 16:06:41 -0500

Refresh of update-ptxdistrc

---
diff --git a/docker/buildbot-master/buildbot/ptxdist.py b/docker/buildbot-master/buildbot/ptxdist.py
index 13e9b27e..a4459b8c 100644
--- a/docker/buildbot-master/buildbot/ptxdist.py
+++ b/docker/buildbot-master/buildbot/ptxdist.py
@@ -21,8 +21,8 @@ workers = [
     worker.Worker("orion-am335x-slave", "pass"),
 ]
 
-worker_ptxdist_repourl = 'git@git.novatech-llc.com:Orion-ptxdist/workspace-ptxdist2'
-worker_ptxdist_branch = 'master'
+worker_ptxdist_repourl = 'git@git.novatech-llc.com:andrew.cooper/workspace-ptxdist2.git'
+worker_ptxdist_branch = 'docker-build'
 acceptance_test_repourl = 'git@git.novatech-llc.com:NovaTech-Testing/AcceptanceTests.git'
 
 # CHANGESOURCES
@@ -55,32 +55,19 @@ schedulers = [
     #                            builderNames=["linux-3.8_am335x"]))
     schedulers.ForceScheduler(
         name="Force_PTXdist",
-        label="Force PTXdist Build",
         builderNames=[
-            "force_armeb_xscale",
-            "force_i686",
-            "force_am335x",
-        ],
-        codebases=[
-            util.CodebaseParameter(
-                codebase="orion-ptxdist-workspace",
-                label="Main repository",
-                # will generate a combo box
-                branch=util.StringParameter(
-                    name="branch",
-                    default=worker_ptxdist_branch),
-                repository=util.StringParameter(
-                    name="repository",
-                    default=worker_ptxdist_repourl),
-
-                # will generate nothing in the form, but revision, repository,
-                # and project are needed by buildbot scheduling system so we
-                # need to pass a value ("")
-                revision=util.FixedParameter(name="revision", default=""),
-                project=util.FixedParameter(name="project", default="orion-ptxdist"),
-            )
+            "ptxdist_current",
+            # "current_armeb_xscale",
+            # "current_i686",
+            # "current_am335x",
         ],
         properties=[
+            util.ChoiceStringParameter(
+                name="platform",
+                label="ptxdist platform to build",
+                choices=["armeb-xscale", "i686", "am335x"],
+                strict=True
+            ),
             util.StringParameter(
                 name="version",
                 label="distribution version",
@@ -159,72 +146,17 @@ class PTXDistBuildCounter(util.LogLineObserver):
                 self.step.setProgress('packages', self.numPackages)
 
 
-class PTXDistBuild(steps.ShellSequence):
+class PTXDistBuild(steps.ShellCommand):
 
     def __init__(self, **kwargs):
         kwargs.setdefault('haltOnFailure', True)
         kwargs.setdefault('flunkOnFailure', True)
 
-        steps.ShellSequence.__init__(self, **kwargs)
-
+        steps.ShellCommand.__init__(self, **kwargs)   # always upcall!
         counter = PTXDistBuildCounter()
         self.addLogObserver('stdio', counter)
         self.progressMetrics += ('targets', 'packages')
 
-        self.name = "PTXDist Build"
-        self.description = "building"
-        self.descriptionDone = "built"
-        self.commands = [
-            # set ptxdist build platform
-            util.ShellArg(
-                command=[
-                    "ptxdist",
-                    "platform",
-                    util.Property("platform")
-                ]),
-
-            # set ptxdist target
-            util.ShellArg(
-                command=[
-                    "ptxdist",
-                    "select",
-                    util.Property('project')
-                ]),
-
-            # run ptxdist build with build.py
-            util.ShellArg(
-                logfile="ptxdist build",
-                command=util.FlattenList([
-                    "python",
-                    "scripts/build.py",
-                    "--noclean",
-                    "--noconfirm",
-                    util.Property("version"),
-                    util.Interpolate("%(prop:release:#?|release|beta)s"),
-                    util.Transform(
-                        string.split,
-                        util.Property(
-                            "packages",
-                            default='')
-                    )
-                ])
-            ),
-
-            # set ptxdist collection
-            util.ShellArg(
-                command=[
-                    "ptxdist",
-                    "collection",
-                    util.Property("collection")
-                ]),
-
-            # If building a release, create and copy images
-            util.ShellArg(
-                command=["ptxdist", "images"]
-            ),
-
-        ]
-
 
 git_lock = util.MasterLock("git")
 
@@ -238,31 +170,42 @@ def CurrentTime(props):
     return dts
 
 
-@util.renderer
-def ComputeBuildProperties(props):
-    newprops = {}
-
-    newprops['timestamp'] = ts = CurrentTime
-
-    newprops['project'] = proj = util.Interpolate(
-        "OrionLX-%(prop:platform)s-glibc"
-    )
-
-    newprops['dest'] = dest = util.Interpolate(
-        "/cache/images/%(kw:p)s", p=proj
-    )
-
-    newprops['archive'] = archive = util.Interpolate(
-        "%(kw:d)s/%(prop:machine)s.%(kw:t)s.tar.gz", d=dest, t=ts
-    )
-
-    newprops['ipkg'] = ipkg = util.Interpolate(
-        "/cache/ipkg-repository/%(kw:p)s", p=proj
-    )
-
-    newprops['collection'] = clct = collections.get(props.getProperty('platform'))
-
-    return newprops
+# class PTXDistFactory(util.BuildFactory):
+
+#     def __init__(self, repourl, branch, platform):
+#         util.BuildFactory.__init__(self)
+#         self.addStep(steps.SetProperty(
+#             'platform',
+#             platform))
+#         self.addStep(steps.SetProperty(
+#             'select',
+#             util.Interpolate("OrionLX-%(prop:platform)s-glibc")))
+#         self.addStep(steps.SetProperty(
+#             'timestamp',
+#             CurrentTime))
+#         self.addStep(steps.SetProperty(
+#             'dest',
+#             util.Interpolate(
+#                 "/cache/images/%(prop:buildername)s/%(prop:timestamp)s")))
+#         self.addStep(steps.Git(
+#             repourl=repourl,
+#             branch=branch,
+#             mode="full",
+#             method="clobber",
+#             locks=[git_lock.access('exclusive')],
+#             retry=(360, 5)))
+#         self.addStep(steps.ShellCommand(
+#             command=["mkdir", "-p", util.Property('dest')]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "platform", util.Property("platform")]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "select", util.Property("select")]))
+#         self.addStep(PTXDistBuild(
+#             command=["python", "scripts/build.py", ]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "make", "ipkg-push"]))
+#         self.addStep(PTXDistBuild(
+#             command=["./scripts/ipkg-header"]))
 
 
 def isReleaseBuild(step):
@@ -274,30 +217,90 @@ def isReleaseBuild(step):
 ptxdist_factory = util.BuildFactory()
 ptxdist_factory.addSteps([
 
-    steps.SetProperties(ComputeBuildProperties),
+    # save current time
+    steps.SetProperty('timestamp', CurrentTime),
 
+    steps.SetProperty(
+        'project',
+        util.Interpolate(
+            "OrionLX-%(prop:platform)s-glibc")
+    ),
+    
+    # calculate and create output path
+    steps.SetProperty(
+        'dest',
+        util.Interpolate("/cache/images/%(prop:platform)s/%(prop:timestamp)s")),
     steps.MakeDirectory(dir=util.Property('dest')),
 
+    # calculate and create output path
+    steps.SetProperty(
+        'ipkg',
+        util.Interpolate("/cache/ipkg-repository/%(prop:project)s")),
     steps.MakeDirectory(dir=util.Property('ipkg')),
 
     # check out the source
     steps.Git(
-        codebase=util.Property('codebase'),
-        repourl=util.Property('repository'),
-        branch=util.Property('branch'),
-        mode=util.Interpolate("%(prop:clobber:#?|full|incremental)s"),
+        repourl=worker_ptxdist_repourl,
+        branch=worker_ptxdist_branch,
+        mode="incremental",
         method="clobber",
         locks=[git_lock.access('exclusive')],
         retry=(360, 5)
-    ),
-
-    PTXDistBuild(),
-
+        ),
+
+    # set ptxdist build platform
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "platform",
+            util.Property("platform")
+        ]),
+
+    # set ptxdist target
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "select",
+            util.Property('project')
+            ]),
+
+    # run ptxdist build with build.py
+    PTXDistBuild(
+        command=[
+            "python",
+            "scripts/build.py",
+            "--noclean",
+            "--noconfirm",
+            util.Property("version"),
+            util.Interpolate("%(prop:release:#?|release|beta)s"),
+            util.Transform(
+                string.split,
+                util.Property(
+                    "packages",
+                    default='')
+                )
+            ]),
+    # PTXDistBuild(command=["ptxdist", "make", "ipkg-push"]),
+    # PTXDistBuild(command=["./scripts/ipkg-header"]),
+
+    # set ptxdist collection
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "collection",
+            util.Transform(collections.get, util.Property("platform"))
+            ]),
+
+    # If building a release, create and copy images
+    PTXDistBuild(
+        command=["ptxdist", "images"],
+        doStepIf=isReleaseBuild
+        ),
     steps.CopyDirectory(
         src=util.Interpolate("platform-%(prop:platform)s/images"),
         dest=util.Property('dest'),
         doStepIf=isReleaseBuild
-    ),
+        ),
 ])
 # ptxdist_factory.addStep(steps.ShellCommand(command=["./scripts/build-upgrade-test.sh"]))
 # ptxdist_factory.addStep(steps.ShellCommand(command=["curl", "--progress-bar", "-o", "/dev/null", "http://george:1234@172.16.190.70/outlet?1=CCL"]))
@@ -409,58 +412,53 @@ remote_tests_am335x_factory.addStep(steps.ShellCommand(command=[
 
 builders = []
 builders.append(
-    BuilderConfig(name="force_armeb_xscale",
-                  workernames=["worker-ptxdist"],
-                  factory=ptxdist_factory,
-                  properties={
-                      'platform': 'armeb-xscale',
-                  }))
-builders.append(
-    BuilderConfig(name="force_i686",
-                  workernames=["worker-ptxdist"],
-                  factory=ptxdist_factory,
-                  properties={
-                      'platform': 'i686',
-                  }))
-builders.append(
-    BuilderConfig(name="force_am335x",
-                  workernames=["worker-ptxdist"],
-                  factory=ptxdist_factory,
-                  properties={
-                      'platform': 'am335x',
-                  }))
-
+    BuilderConfig(
+        name="ptxdist_current",
+        workernames=["worker-ptxdist"],
+        factory=ptxdist_factory
+    )
+)
+# builders.append(
+#     BuilderConfig(name="current_armeb_xscale",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_armeb_xscale_factory))
 builders.append(
     BuilderConfig(name="local_tests_armeb_xscale",
                   workernames=["orion-armeb-xscale-slave"],
                   factory=local_tests_armeb_xscale_factory))
-builders.append(
-    BuilderConfig(name="local_tests_i686",
-                  workernames=["orion-i686-slave"],
-                  factory=local_tests_i686_factory))
-builders.append(
-    BuilderConfig(name="local_tests_am335x",
-                  workernames=["orion-am335x-slave"],
-                  factory=local_tests_am335x_factory))
-
 builders.append(
     BuilderConfig(name="remote_tests_armeb_xscale",
                   workernames=["worker-ptxdist"],
                   factory=remote_tests_armeb_xscale_factory))
-builders.append(
-    BuilderConfig(name="remote_tests_i686",
-                  workernames=["worker-ptxdist"],
-                  factory=remote_tests_i686_factory))
-builders.append(
-    BuilderConfig(name="remote_tests_am335x",
-                  workernames=["worker-ptxdist"],
-                  factory=remote_tests_am335x_factory))
-
+# builders.append(
+#     BuilderConfig(name="current_i686",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_i686_factory))
+# builders.append(
+#     BuilderConfig(name="current_am335x",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_am335x_factory))
 builders.append(
     BuilderConfig(name="upgrade_i686",
                   workernames=["orion-i686-slave"],
                   factory=upgrade_i686_factory))
+builders.append(
+    BuilderConfig(name="local_tests_i686",
+                  workernames=["orion-i686-slave"],
+                  factory=local_tests_i686_factory))
+builders.append(
+    BuilderConfig(name="remote_tests_i686",
+                  workernames=["worker-ptxdist"],
+                  factory=remote_tests_i686_factory))
 builders.append(
     BuilderConfig(name="upgrade_am335x",
                   workernames=["orion-am335x-slave"],
                   factory=upgrade_am335x_factory))
+builders.append(
+    BuilderConfig(name="local_tests_am335x",
+                  workernames=["orion-am335x-slave"],
+                  factory=local_tests_am335x_factory))
+builders.append(
+    BuilderConfig(name="remote_tests_am335x",
+                  workernames=["worker-ptxdist"],
+                  factory=remote_tests_am335x_factory))
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.pip/pip.conf b/docker/buildbot-worker-ptxdist/buildbot/.pip/pip.conf
deleted file mode 100644
index 7f2090b2..00000000
--- a/docker/buildbot-worker-ptxdist/buildbot/.pip/pip.conf
+++ /dev/null
@@ -1,4 +0,0 @@
-[global]
-trusted-host = nexus.novatech-llc.com
-index = http://nexus.novatech-llc.com/repository/pypi/pypi
-index-url = http://nexus.novatech-llc.com/repository/pypi/simple
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
index ee683c3d..8dc2a29b 100644
--- a/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
+++ b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
@@ -1,2 +1,2 @@
 [easy_install]
-index-url=http://nexus.novatech-llc.com/repository/pypi/simple
+index-url=http://172.16.103.72/repository/PyPi_Proxy/simple
