Bottom: ccec5241a19397adebc22bab005ae14622090371
Top:    3289ecd260eea7c549efef7971a6a25ed413aabe
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-08-14 15:36:51 -0500

Refresh of refresh-temp

---
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index 78b584d2..96df8387 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -2,6 +2,7 @@
 # passwords
 buildbot_admin_password:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/admin"                      , length=20) }}'
 buildbot_email_password:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/buildbot@novatech-llc.com"  , length=20) }}'
+buildbot_irc_password:               '{{ lookup("password", playbook_dir + "/credentials/buildbot/irc-NovaTechCI"             , length=20) }}'
 buildbot_worker_ntel_password:       '{{ lookup("password", playbook_dir + "/credentials/buildbot/worker_ntel"                , length=20) }}'
 buildbot_worker_ptxdist_password:    '{{ lookup("password", playbook_dir + "/credentials/buildbot/worker_ptxdist"             , length=20) }}'
 buildbot_webhook_secret:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/webhook"                    , length=20) }}'
@@ -9,8 +10,9 @@ buildsystem_database_build_password: '{{ lookup("password", playbook_dir + "/cre
 buildsystem_database_root_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/root"           , length=20) }}'
 buildsystem_ssh_prod_user_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/ssh/prod"                , length=20) }}'
 buildsystem_ssh_root_user_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/ssh/root"                , length=20) }}'
-gitlab_buildbot_auth_id:             '{{ lookup("password", playbook_dir + "/credentials/git/auth/buildbot_client_id") }}'
-gitlab_buildbot_auth_secret:         '{{ lookup("password", playbook_dir + "/credentials/git/auth/buildbot_secret") }}'
+gitlab_buildbot_auth_id:             '{{ lookup("password", playbook_dir + "/credentials/git/auth/oauth_client_id") }}'
+gitlab_buildbot_auth_secret:         '{{ lookup("password", playbook_dir + "/credentials/git/auth/oauth_secret") }}'
+gitlab_buildbot_token:               '{{ lookup("password", playbook_dir + "/credentials/git/auth/buildbot_token") }}'
 gitlab_db_password:                  '{{ lookup("password", playbook_dir + "/credentials/git/db/user"                         , length=20) }}'
 gitlab_email_password:               '{{ lookup("password", playbook_dir + "/credentials/git/email/gitlab@novatech-llc.com"   , length=20) }}'
 gitlab_root_password:                '{{ lookup("password", playbook_dir + "/credentials/git/users/root"                      , length=20) }}'
diff --git a/docker/buildbot-master/Dockerfile b/docker/buildbot-master/Dockerfile
index a79778ef..72733708 100644
--- a/docker/buildbot-master/Dockerfile
+++ b/docker/buildbot-master/Dockerfile
@@ -19,7 +19,9 @@ RUN pip --no-cache-dir install \
     'buildbot-grid-view' \
     'buildbot-waterfall-view' \
     'buildbot-www' \
-    'ldap3'
+    'ldap3' \
+    'pyOpenSSL' \
+    'txrequests'
 
 # Create buildbot user
 ARG BUILDBOT_UID=1000
diff --git a/docker/buildbot-master/buildbot/master.cfg b/docker/buildbot-master/buildbot/master.cfg
index 4c087416..0cb9f5a2 100644
--- a/docker/buildbot-master/buildbot/master.cfg
+++ b/docker/buildbot-master/buildbot/master.cfg
@@ -6,9 +6,10 @@
 
 import os
 import json
+from buildbot.plugins import reporters, secrets, steps, util
 from urlparse import urlparse
 
-os.environ['LONG_RUN_TIMEOUT']='14400'
+os.environ['LONG_RUN_TIMEOUT'] = '14400'
 
 # This is the dictionary that the buildmaster pays attention to. We also use
 # a shorter alias to save typing.
@@ -21,17 +22,12 @@ c['change_source'] = []
 # Defines the TCP port to listen on for connections from workers.
 # This must match the value configured into the buildworkers (with their
 # --master option)
-c['protocols'] = {"pb": {"port": int(os.getenv('BUILDBOT_WORKER_PORT',9989))}}
+c['protocols'] = {"pb": {"port": int(os.getenv('BUILDBOT_WORKER_PORT', 9989))}}
 
-### SECRETS MANAGEMENT
+# SECRETS MANAGEMENT
 c['secretsProviders'] = [secrets.SecretInAFile(dirname="/run/secrets")]
 
-####### STATUS TARGETS
-
-# 'status' is a list of Status Targets. The results of each build will be
-# pushed to these targets. buildbot/status/*.py has a variety to choose from,
-# including web pages, email senders, and IRC bots.
-
+# BUILDBOT SERVICES
 c['services'] = []
 
 irc = reporters.IRC(
@@ -56,7 +52,7 @@ mn = reporters.MailNotifier(
     smtpPort=os.getenv('BUILDBOT_SMTP_PORT'),
     smtpUser=os.getenv('BUILDBOT_SMTP_USER'),
     smtpPassword=os.getenv('BUILDBOT_SMTP_PASS')
-    )
+)
 c['services'].append(mn)
 
 gl = reporters.GitLabStatusPush(
@@ -68,26 +64,28 @@ gl = reporters.GitLabStatusPush(
 )
 c['services'].append(gl)
 userInfoProvider = util.LdapUserInfo(
-        uri=os.getenv('LDAP_URI'),
-        bindUser=os.getenv('LDAP_BIND_USER'),
-        bindPw=os.getenv('LDAP_BIND_PW'),
-        accountBase='ou=user,dc=novatech',
-        groupBase='ou=group,dc=novatech',
-        accountPattern='(&(objectClass=inetOrgPerson)(uid=%(username)s))',
-        accountFullName='displayName',
-        accountEmail='mail',
-        groupMemberPattern='(&(objectClass=groupOfNames)(member=%(dn)s))',
-        groupName='cn',
-        accountExtraFields=['employeeType'],
+    uri=os.getenv('LDAP_URI'),
+    bindUser=os.getenv('LDAP_BIND_USER'),
+    bindPw=os.getenv('LDAP_BIND_PW'),
+    accountBase='ou=user,dc=novatech',
+    groupBase='ou=group,dc=novatech',
+    accountPattern='(&(objectClass=inetOrgPerson)(uid=%(username)s))',
+    accountFullName='displayName',
+    accountEmail='mail',
+    groupMemberPattern='(&(objectClass=groupOfNames)(member=%(dn)s))',
+    groupName='cn',
+    accountExtraFields=['employeeType'],
 )
 
+
+# WEB SERVER
 c['www'] = {
-    'port': int(os.getenv('BUILDBOT_WEB_PORT',8010)),
+    'port': int(os.getenv('BUILDBOT_WEB_PORT', 8010)),
     'plugins': {
         'waterfall_view': True,
         'console_view': True,
         'grid_view': True,
-        },
+    },
     'auth': util.GitLabAuth(os.getenv('GITLAB_URI'),
                             os.getenv('GITLAB_OAUTH_ID'),
                             os.getenv('GITLAB_OAUTH_SECRET'),
@@ -95,7 +93,7 @@ c['www'] = {
     'authz': util.Authz(
         allowRules=[
             util.AnyControlEndpointMatcher(role="admins"),
-            ],
+        ],
         roleMatchers=[
             util.RolesFromUsername(
                 roles=['admins'],
@@ -104,8 +102,8 @@ c['www'] = {
                     "joseph.lutz",
                     "andrew.cooper",
                 ]),
-            ],
-        ),
+        ],
+    ),
     'change_hook_dialects': {
         'gitlab': {
             'secret': os.getenv('GITLAB_WEBHOOK_SECRET')
@@ -113,7 +111,7 @@ c['www'] = {
     }
 }
 
-####### PROJECT IDENTITY
+# PROJECT IDENTITY
 
 # the 'title' string will appear at the top of this buildbot
 # installation's html.WebStatus home page (linked to the
@@ -128,25 +126,24 @@ c['titleURL'] = "http://git.novatech-llc.com/"
 # with an externally-visible host name which the buildbot cannot figure out
 # without some help.
 
-c['buildbotURL'] = os.getenv('BUILDBOT_WEB_URL',"http://localhost:%s/"%(c['www']['port']))
-
-####### DB URL
+c['buildbotURL'] = os.getenv('BUILDBOT_WEB_URL', "http://localhost:%s/" % (c['www']['port']))
 
+# DB URL
 c['db'] = {
     # This specifies what database buildbot uses to store its state.  You can leave
     # this at its default for all but the largest installations.
-    'db_url' : os.getenv('BUILDBOT_DATABASE',"sqlite://"),
+    'db_url': os.getenv('BUILDBOT_DATABASE', "sqlite://"),
 }
 
-####### Extra Options
+# Extra Options
 c['buildbotNetUsageData'] = 'basic'
 
 import openembedded
 reload(openembedded)
-c['workers'].extend(openembedded.workers)
-c['schedulers'].extend(openembedded.schedulers)
-c['builders'].extend(openembedded.builders)
-c['change_source'].extend(openembedded.change_source)
+c['workers'].extend(openembedded.WorkerConfig['workers'])
+c['schedulers'].extend(openembedded.WorkerConfig['schedulers'])
+c['builders'].extend(openembedded.WorkerConfig['builders'])
+c['change_source'].extend(openembedded.WorkerConfig['change_source'])
 
 import ptxdist
 reload(ptxdist)
@@ -158,7 +155,7 @@ c['change_source'].extend(ptxdist.change_source)
 
 def codebaseGenerator(chdict):
     """ Generate a codebase description.
-    
+
     The codebase generator takes information about a change, like repository,
     branch, and revision, and creates a predictable string describing the code.
     This is used to decide upon the builder for a change and also to tie a fork
diff --git a/roles/buildbot-master/defaults/main.yml b/roles/buildbot-master/defaults/main.yml
index 51f9fd41..5302aeec 100644
--- a/roles/buildbot-master/defaults/main.yml
+++ b/roles/buildbot-master/defaults/main.yml
@@ -19,7 +19,7 @@ buildbot_http_port: 8080
 # port number for encrypted web access
 buildbot_https_port: 8443
 
-# The hostname passed as an envirnment variable into the container
+# The hostname passed as an environment variable into the container
 buildbot_ip_addr: '127.0.0.1'
 buildbot_hostname: buildbot.example.com
 buildbot_port_args:
@@ -34,10 +34,15 @@ config_hostdir: '{{ docker_restore_config_base_dir }}/{{ container_name }}'
 container_env:
   BUILDBOT_DATABASE: 'sqlite:///{{ data_path }}/state.sqlite'
   BUILDBOT_KNOWN_HOSTS_FILE: '{{secrets_path}}/{{secrets_known_hosts}}'
-  BUILDBOT_SMTP_HOST: 'relay.dnsexit.com'
-  BUILDBOT_SMTP_USER: 'Dean.cox'
-  BUILDBOT_SMTP_PASS: 'no5156'
-  BUILDBOT_WEB_PORT: '{{buildbot_http_port}}'
+  BUILDBOT_IRC_CHANNELS: "{{ ['#novatech'] | to_json }}"
+  BUILDBOT_IRC_HOST: 'chat.freenode.net'
+  BUILDBOT_IRC_NICK: 'NovaTechCI'
+  BUILDBOT_IRC_PASS: '{{ buildbot_irc_password }}'
+  BUILDBOT_SMTP_HOST: '{{ exim4_hostname }}'
+  BUILDBOT_SMTP_PORT: '587'
+  BUILDBOT_SMTP_USER: 'buildbot'
+  BUILDBOT_SMTP_PASS: '{{ buildbot_email_password }}'
+  BUILDBOT_WEB_PORT: '{{ buildbot_http_port }}'
   BUILDBOT_WEB_URL: 'http://{{ buildbot_hostname }}/'
   BUILDBOT_WORKER_PORT: '{{buildbot_worker_port}}'
   BUILDBOT_WORKER_NTEL: 'worker-ntel'
@@ -45,8 +50,9 @@ container_env:
   BUILDBOT_WORKER_PTXDIST: 'worker-ptxdist'
   BUILDBOT_WORKER_PTXDIST_PASS: '{{ buildbot_worker_ptxdist_password }}'
   GITLAB_URI: 'https://{{ gitlab_hostname }}/'
-  GITLAB_CLIENT_ID: '{{ gitlab_buildbot_auth_id }}'
-  GITLAB_CLIENT_SECRET: '{{ gitlab_buildbot_auth_secret }}'
+  GITLAB_OAUTH_ID: '{{ gitlab_buildbot_auth_id }}'
+  GITLAB_OAUTH_SECRET: '{{ gitlab_buildbot_auth_secret }}'
+  GITLAB_TOKEN: '{{ gitlab_buildbot_token }}'
   GITLAB_WEBHOOK_SECRET: '{{ buildbot_webhook_secret }}'
   LDAP_URI: 'ldap://{{ openldap_hostname }}:389/'
   LDAP_BIND_USER: 'cn=proxyagent,dc=novatech'
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index 58701ae3..861a0075 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -171,13 +171,13 @@
       MANTISBT_LDAP_PASSWORD: '{{ openldap_proxyagent_password | quote }}'
     hostname: '{{ mantisbt_hostname }}'
     image: '{{ mantisbt_image_name }}:{{ docker_image_tag }}'
-    link:
-      - '{{ openldap_container_name }}:mantisbt_ldap'
-      - '{{ mantisbt_db_container_name }}:mantisbt_db'
-      - '{{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }}'
     name: '{{ mantisbt_container_name }}'
     networks:
       - name: '{{ docker_network_frontend }}'
+        links:
+          - '{{ openldap_container_name }}:mantisbt_ldap'
+          - '{{ mantisbt_db_container_name }}:mantisbt_db'
+          - '{{ exim4_container_name }}:{{ exim4_hostname }}'
     ports: '{{ mantisbt_port_args }}'
     purge_networks: true
     restart_policy: '{{ docker_restart_policy }}'
