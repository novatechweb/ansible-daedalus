Bottom: 25e00b026c39419c07fdc8300740f17e9fb73dd4
Top:    31a0f3630bf0d8e6044598b3d7427ef423e70329
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-06-26 13:05:01 -0500

Use ansible docker_container module

Cleaner than a single long docker run invocation

---
diff --git a/ansible-playbook/group_vars/docker-hosts/docker.yml b/ansible-playbook/group_vars/docker-hosts/docker.yml
index 9acd909a..1e26c99f 100644
--- a/ansible-playbook/group_vars/docker-hosts/docker.yml
+++ b/ansible-playbook/group_vars/docker-hosts/docker.yml
@@ -15,3 +15,6 @@ docker_restore_config_base_dir: '/etc/docker_container.conf/{{ docker_image_tag
 
 # restore directories to temporarly store data being restored into docker containers
 docker_backup_dir: '/tmp/docker'
+
+# docker service restart policy
+docker_restart_policy: 'always'
diff --git a/ansible-playbook/host_vars/daedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml b/ansible-playbook/host_vars/daedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
index a3a5d878..0f4498cc 100644
--- a/ansible-playbook/host_vars/daedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
+++ b/ansible-playbook/host_vars/daedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
@@ -46,22 +46,43 @@ container_addr_map:
 
 container_port_map:
   svn:
-    port_args: '-p {{ container_addr_map.svn.ip_addr }}:80:80 -p {{ container_addr_map.svn.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.svn.ip_addr }}:80:80'
+      - '{{ container_addr_map.svn.ip_addr }}:443:443'
   git:
-    port_args: '-p {{ container_addr_map.git.ip_addr }}:80:80 -p {{ container_addr_map.git.ip_addr }}:443:443  -p {{ container_addr_map.git.ip_addr }}:22:22'
+    port_args: 
+      - '{{ container_addr_map.git.ip_addr }}:80:80'
+      - '{{ container_addr_map.git.ip_addr }}:443:443'
+      - '{{ container_addr_map.git.ip_addr }}:22:22'
   wiki:
-    port_args: '-p {{ container_addr_map.wiki.ip_addr }}:80:80 -p {{ container_addr_map.wiki.ip_addr }}:443:443'
+    port_args:
+      - '{{ container_addr_map.wiki.ip_addr }}:80:80'
+      - '{{ container_addr_map.wiki.ip_addr }}:443:443'
   mantisbt:
-    port_args: '-p {{ container_addr_map.mantisbt.ip_addr }}:80:80 -p {{ container_addr_map.mantisbt.ip_addr }}:443:443'
+    port_args:
+      - '{{ container_addr_map.mantisbt.ip_addr }}:80:80'
+      - '{{ container_addr_map.mantisbt.ip_addr }}:443:443'
   build:
-    port_args: '-p {{ container_addr_map.build.ip_addr }}:80:80 -p {{ container_addr_map.build.ip_addr }}:443:443'
-  testssh:
-    port_args: '-p {{ container_addr_map.testssh.ip_addr }}:2200:22'
+    port_args: 
+      - '{{ container_addr_map.build.ip_addr }}:80:80'
+      - '{{ container_addr_map.build.ip_addr }}:443:443'
+  test_ssh:
+    port_args:
+      - '{{ container_addr_map.testssh.ip_addr }}:2200:22'
   exim4:
-    port_args: '-p {{ container_addr_map.exim4.ip_addr }}:25:25 -p {{ container_addr_map.exim4.ip_addr }}:465:465 -p {{ container_addr_map.exim4.ip_addr }}:587:587'
+    port_args: 
+      - '{{ container_addr_map.exim4.ip_addr }}:25:25'
+      - '{{ container_addr_map.exim4.ip_addr }}:465:465'
+      - '{{ container_addr_map.exim4.ip_addr }}:587:587'
   ldap:
-    port_args: '-p {{ container_addr_map.ldap.ip_addr }}:389:389 -p {{ container_addr_map.ldap.ip_addr }}:636:636'
+    port_args:
+      - '{{ container_addr_map.ldap.ip_addr }}:389:389'
+      - '{{ container_addr_map.ldap.ip_addr }}:636:636'
   phpldapadmin:
-    port_args: '-p {{ container_addr_map.phpldapadmin.ip_addr }}:80:80 -p {{ container_addr_map.phpldapadmin.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:80:80'
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:443:443'
   phpmyadmin:
-    port_args: '-p {{ container_addr_map.phpmyadmin.ip_addr }}:80:80 -p {{ container_addr_map.phpmyadmin.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.phpmyadmin.ip_addr }}:80:80'
+      - '{{ container_addr_map.phpmyadmin.ip_addr }}:443:443'
diff --git a/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml b/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
index ab4dd40d..4a07c812 100644
--- a/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
+++ b/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
@@ -46,22 +46,43 @@ container_addr_map:
 
 container_port_map:
   svn:
-    port_args: '-p {{ container_addr_map.svn.ip_addr }}:80:80 -p {{ container_addr_map.svn.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.svn.ip_addr }}:80:80'
+      - '{{ container_addr_map.svn.ip_addr }}:443:443'
   git:
-    port_args: '-p {{ container_addr_map.git.ip_addr }}:80:80 -p {{ container_addr_map.git.ip_addr }}:443:443  -p {{ container_addr_map.git.ip_addr }}:22:22'
+    port_args: 
+      - '{{ container_addr_map.git.ip_addr }}:80:80'
+      - '{{ container_addr_map.git.ip_addr }}:443:443'
+      - '{{ container_addr_map.git.ip_addr }}:22:22'
   wiki:
-    port_args: '-p {{ container_addr_map.wiki.ip_addr }}:80:80 -p {{ container_addr_map.wiki.ip_addr }}:443:443'
+    port_args:
+      - '{{ container_addr_map.wiki.ip_addr }}:80:80'
+      - '{{ container_addr_map.wiki.ip_addr }}:443:443'
   mantisbt:
-    port_args: '-p {{ container_addr_map.mantisbt.ip_addr }}:80:80 -p {{ container_addr_map.mantisbt.ip_addr }}:443:443'
+    port_args:
+      - '{{ container_addr_map.mantisbt.ip_addr }}:80:80'
+      - '{{ container_addr_map.mantisbt.ip_addr }}:443:443'
   build:
-    port_args: '-p {{ container_addr_map.build.ip_addr }}:80:80 -p {{ container_addr_map.build.ip_addr }}:443:443'
-  testssh:
-    port_args: '-p {{ container_addr_map.testssh.ip_addr }}:2200:22'
+    port_args: 
+      - '{{ container_addr_map.build.ip_addr }}:80:80'
+      - '{{ container_addr_map.build.ip_addr }}:443:443'
+  test_ssh:
+    port_args:
+      - '{{ container_addr_map.testssh.ip_addr }}:2200:22'
   exim4:
-    port_args: '-p {{ container_addr_map.exim4.ip_addr }}:25:25 -p {{ container_addr_map.exim4.ip_addr }}:465:465 -p {{ container_addr_map.exim4.ip_addr }}:587:587'
+    port_args: 
+      - '{{ container_addr_map.exim4.ip_addr }}:25:25'
+      - '{{ container_addr_map.exim4.ip_addr }}:465:465'
+      - '{{ container_addr_map.exim4.ip_addr }}:587:587'
   ldap:
-    port_args: '-p {{ container_addr_map.ldap.ip_addr }}:389:389 -p {{ container_addr_map.ldap.ip_addr }}:636:636'
+    port_args:
+      - '{{ container_addr_map.ldap.ip_addr }}:389:389'
+      - '{{ container_addr_map.ldap.ip_addr }}:636:636'
   phpldapadmin:
-    port_args: '-p {{ container_addr_map.phpldapadmin.ip_addr }}:80:80 -p {{ container_addr_map.phpldapadmin.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:80:80'
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:443:443'
   phpmyadmin:
-    port_args: '-p {{ container_addr_map.phpmyadmin.ip_addr }}:80:80 -p {{ container_addr_map.phpmyadmin.ip_addr }}:443:443'
+    port_args: 
+      - '{{ container_addr_map.phpmyadmin.ip_addr }}:80:80'
+      - '{{ container_addr_map.phpmyadmin.ip_addr }}:443:443'
diff --git a/ansible-playbook/library/docker_run b/ansible-playbook/library/docker_run
deleted file mode 100644
index 54dd490b..00000000
--- a/ansible-playbook/library/docker_run
+++ /dev/null
@@ -1,72 +0,0 @@
-#!/bin/bash
-
-# Ansible transports arguments to modules in a file. The
-# path to the arguments file is in $1, and the file
-# contains the module's arguments like this:
-#
-#       image_name=debian pull_image_tag=8 working_image_tag=current
-#
-# Arguments:
-#    container_name
-#    docker_run_arguments
-
-eval $(sed -e "s/\s?\([^=]+\)\s?=\s?\(\x22\([^\x22]+\)\x22|\x27\([^\x27]+\)\x27|\(\S+\)\)\s?/\1='\2'/p" $1)
-
-if [[ -z "${container_name}" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs container_name= argument\"}"
-    exit 1
-fi
-
-if [[ -z "${docker_run_arguments}" ]]; then
-    printf "{\"failed\": true, \"changed\": false, \"msg\": \"Module needs docker_run_arguments= argument\"}"
-    exit 1
-fi
-
-changed='false'
-
-# *****************************************************************************
-# Check if container exists, remove container if it exists
-
-docker inspect ${container_name} &> /dev/null
-exist_result="${?}"
-
-if [[ "${exist_result}" == "0" ]]; then
-    if [[ "$(docker 2>&1 inspect -f '{{ .State.Running }}' ${container_name})" == 'true' ]]; then
-
-        docker stop ${container_name} &> /dev/null
-        stop_result="${?}"
-
-        if [[ "${stop_result}" != "0" ]]; then
-            printf "{\"failed\": true, \"changed\": ${changed}, \"msg\": \"Failed to determine if container is running.\"}"
-            exit 1
-        fi
-
-        changed='true'
-    fi
-
-    docker rm -v ${container_name} &> /dev/null
-    remove_result="${?}"
-
-    if [[ "${remove_result}" != "0" ]]; then
-        printf "{\"failed\": true, \"changed\": ${changed}, \"msg\": \"Failed to remove container.\"}"
-        exit 1
-    fi
-
-    changed='true'
-fi
-
-run_command=$(docker 2>&1 run -d --restart=always --name ${container_name} ${docker_run_arguments})
-result="${?}"
-
-if [[ "${result}" == "0" ]]; then
-    if [[ "${exist_result}" == "0" ]]; then
-        printf "{\"failed\": false, \"changed\": false, \"msg\": \"Restarted container ${container_name}\"}"
-        exit 0
-    else
-        printf "{\"failed\": false, \"changed\": true, \"msg\": \"Started container ${container_name}\"}"
-        exit 0
-    fi
-else
-    printf "{\"failed\": true, \"changed\": ${changed}, \"msg\": \"${run_command}\"}"
-    exit 1
-fi
diff --git a/roles/docker-buildsystem/defaults/main.yml b/roles/docker-buildsystem/defaults/main.yml
index cdbad40e..9d4820f9 100644
--- a/roles/docker-buildsystem/defaults/main.yml
+++ b/roles/docker-buildsystem/defaults/main.yml
@@ -6,6 +6,14 @@
 # buildsystem_ssh_root_user_password
 # buildsystem_database_root_password
 
+buildsystem:
+    port_args: 
+      - '{{ container_addr_map.build.ip_addr }}:80:80'
+      - '{{ container_addr_map.build.ip_addr }}:443:443'
+
+test_ssh:
+    port_args:
+    - '{{ container_addr_map.testssh.ip_addr }}:2200:22'
 
 # restore directories to temporarly store data being restored into docker containers
 backup_buildsystem_docker_dir: '{{ docker_backup_dir }}/buildsystem'
@@ -49,7 +57,7 @@ build_system_docker_repos:
     url: https://git.novatech-llc.com/NovaTech-Testing/docker-TestStation_database_server.git
   TestStation_http_server:
     dir_name: docker-TestStation_http_server
-    url: https://git.novatech-llc.com/NovaTech-Testing/docker-TestStation_http_server.git
+    url: https://git.novatech-llc.com/andrew.cooper/docker-TestStation_http_server.git
   TestStation_ssh_server:
     dir_name: docker-TestStation_ssh_server
     url: https://git.novatech-llc.com/NovaTech-Testing/docker-TestStation_ssh_server.git
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_database.yml b/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
index 1ab11330..2cc83270 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
@@ -27,6 +27,6 @@
     name: "{{ name_prefix }}TestStation_database_server"
     ports: "{{ container_addr_map.build.ip_addr }}:3306:3306"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
     volumes_from:
       - "{{ name_prefix }}TestStation_database_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_http.yml b/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
index 883d3f4b..9dee514f 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
@@ -16,7 +16,7 @@
     name: "{{ name_prefix }}TestStation_http_server"
     ports: "{{ container_addr_map.build.ip_addr }}:80:80"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
     volumes_from:
       - "{{ name_prefix }}TestStation_http_data_buildsystem"
 #      - "{{ name_prefix }}TestStation_http_data_ipkg"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml b/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
index 1e3333b4..2be1cb0c 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
@@ -21,7 +21,7 @@
     links: "{{ name_prefix }}TestStation_database_server:test_station_mysql_server"
     name: "{{ name_prefix }}TestStation_ssh_server"
     ports: "{{ container_addr_map.build.ip_addr }}:22:22"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
     state: "{{ container_start_state_nondata }}"
     volumes_from:
       - "{{ name_prefix }}TestStation_database_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml b/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
index 6f95f9e2..1f4c4b10 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
@@ -33,4 +33,4 @@
     name: "{{ name_prefix }}TestStation_ssh_server_manualtest"
     ports: "{{ container_addr_map.testssh.ip_addr }}:22:22"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml b/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
index a6498fcf..821fbe0f 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
@@ -15,6 +15,6 @@
     name: "{{ name_prefix }}TestStation_tftp_server"
     ports: "{{ container_addr_map.build.ip_addr }}:69:69/udp"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
     volumes_from:
       - "{{ name_prefix }}TestStation_tftp_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml b/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
index 94246679..f52909d5 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
@@ -14,6 +14,6 @@
     image: "{{ name_prefix }}teststation_cron_image"
     name: "{{ name_prefix }}TestStation_cron_service"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: '{{ docker_restart_policy }}'
     volumes_from:
       - "{{ name_prefix }}TestStation_http_data_ncdiso"
diff --git a/roles/docker-exim4/defaults/main.yml b/roles/docker-exim4/defaults/main.yml
index 36de52a7..8a1f2ef2 100644
--- a/roles/docker-exim4/defaults/main.yml
+++ b/roles/docker-exim4/defaults/main.yml
@@ -1,5 +1,19 @@
 ---
 
+# The hostname passed as an envirnment variable into the container
+container_addr_map:
+  exim4:
+    ip_addr: '127.0.0.1'
+    hostname: mail.example.com
+
+# the port mappings used when starting the container
+container_port_map:
+  exim4:
+    port_args: 
+      - '{{ container_addr_map.exim4.ip_addr }}:25:25'
+      - '{{ container_addr_map.exim4.ip_addr }}:465:465'
+      - '{{ container_addr_map.exim4.ip_addr }}:587:587'
+
 # the repository containing Dockerfile to build the image
 exim4_image_repo: https://github.com/novatechweb/docker-exim4.git
 
diff --git a/roles/docker-exim4/tasks/main.yml b/roles/docker-exim4/tasks/main.yml
index 9ca79f7d..d670d37d 100644
--- a/roles/docker-exim4/tasks/main.yml
+++ b/roles/docker-exim4/tasks/main.yml
@@ -101,9 +101,16 @@
 # Start the data container running
 
 - name: start container
-  docker_run:
-    container_name: '{{ exim4_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.exim4.hostname }} {{ container_port_map.exim4.port_args }} -v {{ exim4_syslog_datavolume_dir }}/exim4:/var/log/exim4 --volumes-from {{ openssl_dv_name }} --volumes-from {{ exim4_dv_name }} {{ exim4_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ exim4_container_name }}'
+    hostname: '{{ container_addr_map.exim4.hostname }}'
+    ports: '{{ container_port_map.exim4.port_args }}'
+    image: '{{ exim4_image_name }}:{{ docker_image_tag }}'
+    restart_policy: '{{ docker_restart_policy }}'
+    state: started
+    volumes:
+      - '{{ exim4_dv_name }}:/var/spool/exim4:z'
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-gitlab/defaults/main.yml b/roles/docker-gitlab/defaults/main.yml
index 1588bd2c..d28280d7 100644
--- a/roles/docker-gitlab/defaults/main.yml
+++ b/roles/docker-gitlab/defaults/main.yml
@@ -9,7 +9,10 @@ container_addr_map:
 # the port mappings used when starting the container
 container_port_map:
   git:
-    port_args: '-P'
+    port_args: 
+      - '{{ container_addr_map.git.ip_addr }}:80:80'
+      - '{{ container_addr_map.git.ip_addr }}:443:443'
+      - '{{ container_addr_map.git.ip_addr }}:22:22'
 
 # database usernames and passwords
 gitlab_db_user: novatech
diff --git a/roles/docker-gitlab/tasks/main.yml b/roles/docker-gitlab/tasks/main.yml
index c807af17..3957c3a2 100644
--- a/roles/docker-gitlab/tasks/main.yml
+++ b/roles/docker-gitlab/tasks/main.yml
@@ -129,19 +129,47 @@
 # Start the data container running
 
 - name: start container (redis)
-  docker_run:
-    container_name: '{{ gitlab_redis_container_name }}'
-    docker_run_arguments: '{{ redis_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ gitlab_redis_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    image: '{{ redis_image_name }}:{{ docker_image_tag }}'
 
 - name: start container (postgres)
-  docker_run:
-    container_name: '{{ gitlab_db_container_name }}'
-    docker_run_arguments: '--volumes-from {{ gitlab_db_dv_name }} {{ gitlab_db_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ gitlab_db_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    volumes_from: '{{ gitlab_db_dv_name }}'
+    image: '{{ gitlab_db_image_name }}:{{ docker_image_tag }}'
 
 - name: start container (gitlab)
-  docker_run:
-    container_name: '{{ gitlab_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.git.hostname }} {{ container_port_map.git.port_args }} --link {{ openldap_container_name }}:gitlab-ldap --link {{ gitlab_redis_container_name }}:gitlab-redis --link {{ gitlab_db_container_name }}:gitlab-db --link {{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }} --volumes-from {{ openssl_dv_name }} --volumes-from {{ gitlab_dv_name }} --env GITLAB_HOST={{ container_addr_map.git.hostname }} --env GITLAB_SSH_HOST={{ container_addr_map.git.hostname }} --env DB_USER={{ gitlab_db_user }} --env DB_PASS={{ gitlab_db_password | quote }} --env SMTP_HOST={{ container_addr_map.exim4.hostname }} --env SMTP_PASS={{ gitlab_email_password | quote }} --env LDAP_PASS={{ ldap_proxyagent_password | quote }} --env GITLAB_ROOT_PASSWORD={{ gitlab_root_password | quote }} --env GITLAB_SECRETS_DB_KEY_BASE={{ gitlab_secrets_db_key_base | quote }} --env-file {{ docker_projects_dir }}/docker-gitlab/gitlab.env.list {{ gitlab_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ gitlab_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.git.hostname }}'
+    ports: '{{ container_port_map.git.port_args }}'
+    link:
+      - '{{ openldap_container_name }}:gitlab-ldap'
+      - '{{ gitlab_redis_container_name }}:gitlab-redis'
+      - '{{ gitlab_db_container_name }}:gitlab-db'
+      - '{{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }}'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+      - '{{ gitlab_dv_name }}'
+    env:
+      - GITLAB_HOST={{ container_addr_map.git.hostname }}
+      - GITLAB_SSH_HOST={{ container_addr_map.git.hostname }}
+      - DB_USER={{ gitlab_db_user }}
+      - DB_PASS={{ gitlab_db_password | quote }}
+      - SMTP_HOST={{ container_addr_map.exim4.hostname }}
+      - SMTP_PASS={{ gitlab_email_password | quote }}
+      - LDAP_PASS={{ ldap_proxyagent_password | quote }}
+      - GITLAB_ROOT_PASSWORD={{ gitlab_root_password | quote }}
+      - GITLAB_SECRETS_DB_KEY_BASE={{ gitlab_secrets_db_key_base | quote }}
+    env-file: '{{ docker_projects_dir }}/docker-gitlab/gitlab.env.list'
+    image: '{{ gitlab_image_name }}:{{ docker_image_tag }}'
 
 - name: Wait for gitlab to be fully running
   wait_for:
diff --git a/roles/docker-mantisbt/defaults/main.yml b/roles/docker-mantisbt/defaults/main.yml
index bbe1b72f..7e8179c4 100644
--- a/roles/docker-mantisbt/defaults/main.yml
+++ b/roles/docker-mantisbt/defaults/main.yml
@@ -9,7 +9,9 @@ container_addr_map:
 # the port mappings used when starting the container
 container_port_map:
   mantisbt:
-    port_args: '-P'
+    port_args:
+      - '{{ container_addr_map.mantisbt.ip_addr }}:80:80'
+      - '{{ container_addr_map.mantisbt.ip_addr }}:443:443'
 
 # database usernames and passwords
 mantisbt_db_user: novatech
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index f0119408..f6125912 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -148,14 +148,34 @@
 # Start the data container running
 
 - name: start container (mysql)
-  docker_run:
-    container_name: '{{ mantisbt_db_container_name }}'
-    docker_run_arguments: '--volumes-from {{ mantisbt_db_dv_name }} {{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ mantisbt_db_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    volumes_from:
+      - '{{ mantisbt_db_dv_name }}'
+    image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
 
 - name: start container (mantisbt)
-  docker_run:
-    container_name: '{{ mantisbt_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.mantisbt.hostname }} {{ container_port_map.mantisbt.port_args }} --link {{ openldap_container_name }}:mantisbt_ldap --link {{ mantisbt_db_container_name }}:mantisbt_db --link {{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }} --volumes-from {{ openssl_dv_name }} --volumes-from {{ mantisbt_dv_name }} --env MANTISBT_HOSTNAME={{ container_addr_map.mantisbt.hostname }} --env MANTISBT_MAIL_USER=mantis --env MANTISBT_MAIL_PASSWORD={{ mantisbt_email_password | quote }} --env MANTISBT_LDAP_PASSWORD={{ ldap_proxyagent_password | quote }} {{ mantisbt_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ mantisbt_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.mantisbt.hostname }}'
+    ports: '{{ container_port_map.mantisbt.port_args }}'
+    link:
+      - '{{ openldap_container_name }}:mantisbt_ldap'
+      - '{{ mantisbt_db_container_name }}:mantisbt_db'
+      - '{{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }}'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+      - '{{ mantisbt_dv_name }}'
+    env:
+      MANTISBT_HOSTNAME: '{{ container_addr_map.mantisbt.hostname }}'
+      MANTISBT_MAIL_USER: 'mantis'
+      MANTISBT_MAIL_PASSWORD: '{{ mantisbt_email_password | quote }}'
+      MANTISBT_LDAP_PASSWORD: '{{ openldap_proxyagent_password | quote }}'
+    image: '{{ mantisbt_image_name }}:{{ docker_image_tag }}'
 
 # *****************************************************************************
 # remove the MySQL config in the restore directory
diff --git a/roles/docker-mediawiki/defaults/main.yml b/roles/docker-mediawiki/defaults/main.yml
index 216ec39c..a95335ca 100644
--- a/roles/docker-mediawiki/defaults/main.yml
+++ b/roles/docker-mediawiki/defaults/main.yml
@@ -9,7 +9,9 @@ container_addr_map:
 # the port mappings used when starting the container
 container_port_map:
   wiki:
-    port_args: '-P'
+    port_args:
+      - '{{ container_addr_map.wiki.ip_addr }}:80:80'
+      - '{{ container_addr_map.wiki.ip_addr }}:443:443'
 
 # database usernames and passwords
 wiki_db_user: novatech
diff --git a/roles/docker-mediawiki/tasks/main.yml b/roles/docker-mediawiki/tasks/main.yml
index ac687e81..77f07d20 100644
--- a/roles/docker-mediawiki/tasks/main.yml
+++ b/roles/docker-mediawiki/tasks/main.yml
@@ -119,14 +119,33 @@
 # Start the data container running
 
 - name: start container (mysql)
-  docker_run:
-    container_name: '{{ wiki_db_container_name }}'
-    docker_run_arguments: '--volumes-from {{ wiki_db_dv_name }} {{ wiki_db_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ wiki_db_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    volumes_from: '{{ wiki_db_dv_name }}'
+    image: '{{ wiki_db_image_name }}:{{ docker_image_tag }}'
 
 - name: start container (mediwiki)
-  docker_run:
-    container_name: '{{ wiki_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.wiki.hostname }} {{ container_port_map.wiki.port_args }} --link {{ openldap_container_name }}:wiki_ldap --link {{ wiki_db_container_name }}:wiki_db --link {{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }} --volumes-from {{ openssl_dv_name }} --volumes-from {{ wiki_dv_name }} --env WIKI_HOSTNAME={{ container_addr_map.wiki.hostname }} --env WIKI_MAIL_USER=wiki --env WIKI_MAIL_PASSWORD={{ wiki_email_password | quote }} {{ wiki_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ wiki_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.wiki.hostname }}'
+    ports: '{{ container_port_map.wiki.port_args }}'
+    link:
+      - '{{ openldap_container_name }}:wiki_ldap'
+      - '{{ wiki_db_container_name }}:wiki_db'
+      - '{{ exim4_container_name }}:{{ container_addr_map.exim4.hostname }}'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+      - '{{ wiki_dv_name }}'
+    env:
+      WIKI_HOSTNAME: '{{ container_addr_map.wiki.hostname }}'
+      WIKI_MAIL_USER: 'wiki'
+      WIKI_MAIL_PASSWORD: '{{ wiki_email_password | quote }}'
+    image: '{{ wiki_image_name }}:{{ docker_image_tag }}'
+    state: started
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-openldap/defaults/main.yml b/roles/docker-openldap/defaults/main.yml
index 55e28c00..dd0484f2 100644
--- a/roles/docker-openldap/defaults/main.yml
+++ b/roles/docker-openldap/defaults/main.yml
@@ -12,9 +12,13 @@ container_addr_map:
 # the port mappings used when starting the container
 container_port_map:
   ldap:
-    port_args: '-P'
+    port_args:
+      - '{{ container_addr_map.ldap.ip_addr }}:389:389'
+      - '{{ container_addr_map.ldap.ip_addr }}:636:636'
   phpldapadmin:
-    port_args: '-P'
+    port_args: 
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:80:80'
+      - '{{ container_addr_map.phpldapadmin.ip_addr }}:443:443'
 
 openldap_backup_files:
   - ldif_file: LDAP_database_0000.ldif
diff --git a/roles/docker-openldap/tasks/main.yml b/roles/docker-openldap/tasks/main.yml
index 8bc12514..c2c9f731 100644
--- a/roles/docker-openldap/tasks/main.yml
+++ b/roles/docker-openldap/tasks/main.yml
@@ -86,21 +86,52 @@
 # Populate the ldap data-volume with default data
 
 - name: initial populate
-  command: 'docker run --rm --volumes-from {{ openldap_dv_name }} {{ openldap_image_name }}:{{ docker_image_tag }} init_data_volumes'
+  docker_container:
+    detach: false
+    name: openldap_populate
+    image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
+    command: ['init_data_volumes']
+    volumes:
+      - '{{ openldap_dv_name }}'
   when: st_openldap_restore.stat.exists == False
 
+- name: initial populate
+  docker_container:
+    name: openldap_populate
+    state: absent
+
 # *****************************************************************************
 # Start the data container running
 
 - name: start container (ldap)
-  docker_run:
-    container_name: '{{ openldap_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.ldap.hostname }} {{ container_port_map.ldap.port_args }} --volumes-from {{ openssl_dv_name }} --volumes-from {{ openldap_dv_name }} --env LDAP_HOSTNAME={{ container_addr_map.ldap.hostname }} {{ openldap_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ openldap_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.ldap.hostname }}'
+    ports: '{{ container_port_map.ldap.port_args }}'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+      - '{{ openldap_dv_name }}'
+    env:
+      LDAP_HOSTNAME: '{{ container_addr_map.ldap.hostname }}'
+    image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
 
 - name: start container (phpldapadmin)
-  docker_run:
-    container_name: '{{ phpldapadmin_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.ldap.hostname }} {{ container_port_map.phpldapadmin.port_args }} --volumes-from {{ openssl_dv_name }} --env PHPLDAPADMIN_HTTPS=false --env PHPLDAPADMIN_LDAP_HOSTS=ldap --env LDAP_HOSTNAME={{ container_addr_map.phpldapadmin.hostname }} --link {{ openldap_container_name }}:ldap {{ phpldapadmin_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ phpldapadmin_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.ldap.hostname }}'
+    ports: '{{ container_port_map.phpldapadmin.port_args }}'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+    env:
+      PHPLDAPADMIN_HTTPS: 'false'
+      PHPLDAPADMIN_LDAP_HOSTS: 'ldap'
+      LDAP_HOSTNAME: '{{ container_addr_map.phpldapadmin.hostname }}'
+    link: '{{ openldap_container_name }}:ldap'
+    image: '{{ phpldapadmin_image_name }}:{{ docker_image_tag }}'
 
 # *****************************************************************************
 # restore?
@@ -111,6 +142,13 @@
 # *****************************************************************************
 # Set the LDAP passwords
 
+- name: wait for LDAP to start
+  wait_for:
+    delay: 5
+    host: '{{ openldap_ip_addr }}'
+    port: 389
+    state: started
+
 - name: set LDAP admin password
   command: 'docker exec -i {{ openldap_container_name }} /docker-entrypoint.sh set_admin_pass {{ openldap_admin_password | quote }}'
 
diff --git a/roles/docker-openldap/tasks/restore.yml b/roles/docker-openldap/tasks/restore.yml
index 370f4797..6c38445f 100644
--- a/roles/docker-openldap/tasks/restore.yml
+++ b/roles/docker-openldap/tasks/restore.yml
@@ -31,14 +31,27 @@
 # restore the openldap backup
 
 - name: stop container (ldap)
-  command: 'docker stop {{ openldap_container_name }}'
+  docker_container:
+    name: '{{ openldap_container_name }}'
+    state: stopped
 
 - name: load ldif files
-  command: 'docker run --rm --volumes-from {{ openldap_dv_name }} -v {{ host_openldap_docker_restore_dir }}:/tmp/import_export {{ openldap_image_name }}:{{ docker_image_tag }} apply_ldif -n {{ item.dbnum }} -l {{ item.ldif_file }}'
+  docker_container:
+    name: '{{ openldap_container_name }}-restore-{{ item.dbnum }}'
+    cleanup: true
+    detach: false
+    volumes_from:
+    - '{{ openssl_dv_name }}'
+    volumes:
+    - '{{ openldap_docker_restore_dir }}:/tmp/import_export:z'
+    image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
+    command: ['apply_ldif', '-n', '{{ item.dbnum }}', '-l', '{{ item.ldif_file }}']
   with_items: '{{ openldap_backup_files }}'
 
 - name: restart container (ldap)
-  command: 'docker start {{ openldap_container_name }}'
+  docker_container:
+    name: '{{ openldap_container_name }}'
+    state: started
 
 # *****************************************************************************
 # cleanup
diff --git a/roles/docker-openssl/tasks/main.yml b/roles/docker-openssl/tasks/main.yml
index 28087fa1..5522f437 100644
--- a/roles/docker-openssl/tasks/main.yml
+++ b/roles/docker-openssl/tasks/main.yml
@@ -79,8 +79,20 @@
 # Populate the openssl data-volume with default data
 
 - name: initial populate
-  command: 'docker run --rm --volumes-from {{ openssl_dv_name }} {{ openssl_image_name }}:{{ docker_image_tag }} generate'
+  docker_container:
+    detach: False
+    image: '{{ openssl_image_name }}:{{ docker_image_tag }}'
+    name: openssl_populate
+    volumes:
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+    command: 'generate'
   when: st_openssl_restore.stat.exists == False
+  ignore_errors: True
+
+- name: initial populate
+  docker_container:
+    name: openssl_populate
+    state: absent
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-openssl/tasks/restore.yml b/roles/docker-openssl/tasks/restore.yml
index 9fe3ea42..007707e5 100644
--- a/roles/docker-openssl/tasks/restore.yml
+++ b/roles/docker-openssl/tasks/restore.yml
@@ -39,8 +39,20 @@
 # restore the archive
 
 - name: extract archive
-  shell: "cat {{ openssl_docker_restore_dir }}{{ openssl_backup_file }} | docker run -i --rm --volumes-from {{ openssl_dv_name }} {{ openssl_image_name }}:{{ docker_image_tag }} extract"
-  when: st_openssl_backup_file.stat.exists == True
+  docker_container:
+    detach: False
+    image: '{{ openssl_image_name }}:{{ docker_image_tag }}'
+    name: openssl_restore
+    volumes:
+      - '{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}:{{ openssl_docker_restore_dir }}{{ openssl_backup_file }}:z'
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+    command: ['extract', '{{ openssl_docker_restore_dir }}/{{ openssl_backup_file }}']
+
+- name: extract archive
+  docker_container:
+    name: openssl_restore
+    state: absent
+
 
 # *****************************************************************************
 # cleanup
diff --git a/roles/docker-svn/defaults/main.yml b/roles/docker-svn/defaults/main.yml
index 53a0db66..17e66a42 100644
--- a/roles/docker-svn/defaults/main.yml
+++ b/roles/docker-svn/defaults/main.yml
@@ -9,7 +9,9 @@ container_addr_map:
 # the port mappings used when starting the container
 container_port_map:
   svn:
-    port_args: '-P'
+    port_args: 
+      - '{{ container_addr_map.svn.ip_addr }}:80:80'
+      - '{{ container_addr_map.svn.ip_addr }}:443:443'
 
 # The repositories that will be created/imported durring a data-volume restore
 svn_repos: 'example'
diff --git a/roles/docker-svn/tasks/main.yml b/roles/docker-svn/tasks/main.yml
index d0590180..5110de79 100644
--- a/roles/docker-svn/tasks/main.yml
+++ b/roles/docker-svn/tasks/main.yml
@@ -78,9 +78,21 @@
 # Start the data container running
 
 - name: start container
-  docker_run:
-    container_name: '{{ svn_container_name }}'
-    docker_run_arguments: '--hostname={{ container_addr_map.svn.hostname }} {{ container_port_map.svn.port_args }} --link {{ openldap_container_name }}:ldap --volumes-from {{ openssl_dv_name }} --volumes-from {{ svn_dv_name }} --env SVN_HOSTNAME={{ container_addr_map.svn.hostname }} --env SVN_LDAP_PASSWORD={{ openldap_proxyagent_password | quote }} {{ svn_image_name }}:{{ docker_image_tag }}'
+  docker_container:
+    name: '{{ svn_container_name }}'
+    detach: true
+    restart_policy: '{{ docker_restart_policy }}'
+    hostname: '{{ container_addr_map.svn.hostname }}'
+    ports: '{{ container_port_map.svn.port_args }}'
+    link:
+      - '{{ openldap_container_name }}:ldap'
+    volumes_from:
+      - '{{ openssl_dv_name }}'
+      - '{{ svn_dv_name }}'
+    env:
+      SVN_HOSTNAME: '{{ container_addr_map.svn.hostname }}'
+      SVN_LDAP_PASSWORD: '{{ openldap_proxyagent_password }}'
+    image: '{{ svn_image_name }}:{{ docker_image_tag }}'
 
 # *****************************************************************************
 # restore?
diff --git a/roles/docker-svn/tasks/restore.yml b/roles/docker-svn/tasks/restore.yml
index 47f048e0..f17b49bc 100644
--- a/roles/docker-svn/tasks/restore.yml
+++ b/roles/docker-svn/tasks/restore.yml
@@ -36,9 +36,21 @@
 # restore the svn backup
 
 - name: restore svn repositories
-  command: 'docker run -ti --rm --volumes-from {{ svn_dv_name }} -v {{ svn_docker_restore_dir }}:/tmp/import_export {{ svn_image_name }}:{{ docker_image_tag }} import {{ svn_repos }}'
+  docker_container:
+    detach: False
+    volumes_from:
+      - '{{ svn_dv_name }}'
+    volumes:
+      - '{{ svn_docker_restore_dir }}:/tmp/import_export:z'
+    image: '{{ svn_image_name }}:{{ docker_image_tag }}'
+    command: ['import', '{{ svn_repos }}']
+    name: 'svn_restore'
   when: not((svn_repos is undefined) or (svn_repos is none) or (svn_repos|trim == '')) or svn_repo_backup.file_list != []
 
+- name: remove svn-restore container
+  docker_container:
+    name: 'svn_restre'
+    state: absent
 # *****************************************************************************
 # cleanup
