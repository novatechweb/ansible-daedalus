Bottom: dd68e213662a326b957718a4bd54e79208bac8af
Top:    8facd7a2081de3fda3346038960e7530cacfd56f
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-07-16 15:27:42 -0500

Update ptxdist build factories


---
diff --git a/ansible-playbook/buildbot.yml b/ansible-playbook/buildbot.yml
index e811638f..d64e77fe 100644
--- a/ansible-playbook/buildbot.yml
+++ b/ansible-playbook/buildbot.yml
@@ -32,17 +32,29 @@
   become_user: root
   become_method: sudo
   tags:
-  - buildbot
-  - buildbot-worker
+    - buildbot
+    - buildbot-worker
   vars:
-    buildbot_master: "{{ hostvars.buildbot_master.ip_addr }}"
+    asset_host: "{{ hostvars['buildbot-worker-assets'].uri }}"
+    pypi_host: "{{ hostvars['buildbot-worker-devpi'].uri }}"
+    buildbot_master: "{{ hostvars['buildbot-master'].ip_addr }}"
+    container_networks:
+      - name: "{{ worker_backend_network }}"
+        links:
+          - buildbot-worker-assets:assets
+          - buildbot-worker-devpi:pypi
+          - buildbot-worker-ptxdist:ptxdist
     known_hosts: "{{gitlab_keys.stdout}}"
-  pre_tasks:
+  tasks:
   - name: Scan Gitlab ssh keys
     command: ssh-keyscan {{gitlab_hostname}}
     register: gitlab_keys
-  roles:
-  - role: buildbot-worker-ptxdist
+  - import_role: 
+      name: buildbot-worker-assets
+  - import_role: 
+      name: buildbot-worker-devpi
+  - import_role: 
+      name: buildbot-worker-ptxdist
 
 - name: Gitlab public keys for buildbot containers
   hosts: daedalus
@@ -62,5 +74,5 @@
     role: gitlab-sshkey
     vars:
       username: buildbot
-      pubkey: "{{ hostvars.buildbot_worker_ptxdist.pubkey }}"
+      pubkey: "{{ hostvars['buildbot-worker-ptxdist'].pubkey }}"
       title: "buildbot_worker_ptxdist"
diff --git a/docker/buildbot-master/buildbot/ptxdist.py b/docker/buildbot-master/buildbot/ptxdist.py
index 85020678..a4459b8c 100644
--- a/docker/buildbot-master/buildbot/ptxdist.py
+++ b/docker/buildbot-master/buildbot/ptxdist.py
@@ -1,5 +1,14 @@
 import os
+import string
 from buildbot.plugins import *
+from datetime import datetime
+from buildbot.config import BuilderConfig
+
+collections = {
+    "armeb-xscale": "armeb-base",
+    "i686": "i686-base",
+    "am335x": "am335x-base",
+}
 
 # Workers
 # The 'workers' list defines the set of recognized buildworkers. Each element is
@@ -45,29 +54,43 @@ schedulers = [
     #                            treeStableTimer=9*60,
     #                            builderNames=["linux-3.8_am335x"]))
     schedulers.ForceScheduler(
-        name="force-ptxdist",
+        name="Force_PTXdist",
         builderNames=[
-            "current_armeb_xscale",
-            "current_i686",
-            "current_am335x",
+            "ptxdist_current",
+            # "current_armeb_xscale",
+            # "current_i686",
+            # "current_am335x",
         ],
         properties=[
+            util.ChoiceStringParameter(
+                name="platform",
+                label="ptxdist platform to build",
+                choices=["armeb-xscale", "i686", "am335x"],
+                strict=True
+            ),
+            util.StringParameter(
+                name="version",
+                label="distribution version",
+                default='',
+                required=True
+            ),
+            util.BooleanParameter(
+                name='release',
+                label="Make a release build",
+                default=False
+            ),
+            util.StringParameter(
+                name="packages",
+                label="space-delimited list of packages to build",
+                default='',
+                required=False,
+            ),
             util.BooleanParameter(
                 name="clobber",
                 label="Clobber build directory",
-                default=False),
-        ],
-    ),
-
-    schedulers.Nightly(
-        name="ptxdist-nightly",
-        branch=None,
-        builderNames=[
-            "current_armeb_xscale",
-            "current_i686",
-            "current_am335x",
+                default=False
+            ),
         ],
-        hour=22
     ),
 
     schedulers.Triggerable(
@@ -134,9 +157,8 @@ class PTXDistBuild(steps.ShellCommand):
         self.addLogObserver('stdio', counter)
         self.progressMetrics += ('targets', 'packages')
 
-git_lock = util.MasterLock("git")
 
-from datetime import datetime
+git_lock = util.MasterLock("git")
 
 
 @util.renderer
@@ -148,43 +170,141 @@ def CurrentTime(props):
     return dts
 
 
-class PTXDistFactory(util.BuildFactory):
-
-    def __init__(self, repourl, branch, platform):
-        util.BuildFactory.__init__(self)
-        self.addStep(steps.SetProperty('platform', platform))
-        self.addStep(steps.SetProperty(
-            'select', util.Interpolate("OrionLX-%(prop:platform)s-glibc")))
-        self.addStep(steps.SetProperty('timestamp', CurrentTime))
-        self.addStep(steps.SetProperty('dest', util.Interpolate(
-            "/cache/images/%(prop:buildername)s/%(prop:timestamp)s")))
-        self.addStep(steps.Git(repourl=repourl, branch=branch, mode="full",
-                               method="clobber", locks=[git_lock.access('exclusive')], retry=(360, 5)))
-        self.addStep(steps.ShellCommand(
-            command=["mkdir", "-p", util.Property('dest')]))
-        self.addStep(PTXDistBuild(
-            command=["ptxdist", "platform", util.Property("platform")]))
-        self.addStep(PTXDistBuild(
-            command=["ptxdist", "select", util.Property("select")]))
-        self.addStep(PTXDistBuild(command=["ptxdist", "go"]))
-        self.addStep(PTXDistBuild(command=["ptxdist", "make", "ipkg-push"]))
-        self.addStep(PTXDistBuild(command=["./scripts/ipkg-header"]))
-
-### current_armeb_xscale ###
-current_armeb_xscale_factory = PTXDistFactory(
-    worker_ptxdist_repourl, worker_ptxdist_branch, 'armeb-xscale')
-# check out the source
-current_armeb_xscale_factory.addStep(PTXDistBuild(
-    command=["ptxdist", "collection", "armeb-base"]))
-current_armeb_xscale_factory.addStep(
-    PTXDistBuild(command=["ptxdist", "images"]))
-current_armeb_xscale_factory.addStep(steps.ShellCommand(
-    command=["cp", "platform-armeb-xscale/images/root.jffs2_64", util.Property('dest')]))
-current_armeb_xscale_factory.addStep(steps.ShellCommand(
-    command=["cp", "platform-armeb-xscale/images/root.jffs2_128", util.Property('dest')]))
-# current_armeb_xscale_factory.addStep(steps.ShellCommand(command=["./scripts/build-upgrade-test.sh"]))
-# current_armeb_xscale_factory.addStep(steps.ShellCommand(command=["curl", "--progress-bar", "-o", "/dev/null", "http://george:1234@172.16.190.70/outlet?1=CCL"]))
-# current_armeb_xscale_factory.addStep(steps.ShellCommand(command=[
+# class PTXDistFactory(util.BuildFactory):
+
+#     def __init__(self, repourl, branch, platform):
+#         util.BuildFactory.__init__(self)
+#         self.addStep(steps.SetProperty(
+#             'platform',
+#             platform))
+#         self.addStep(steps.SetProperty(
+#             'select',
+#             util.Interpolate("OrionLX-%(prop:platform)s-glibc")))
+#         self.addStep(steps.SetProperty(
+#             'timestamp',
+#             CurrentTime))
+#         self.addStep(steps.SetProperty(
+#             'dest',
+#             util.Interpolate(
+#                 "/cache/images/%(prop:buildername)s/%(prop:timestamp)s")))
+#         self.addStep(steps.Git(
+#             repourl=repourl,
+#             branch=branch,
+#             mode="full",
+#             method="clobber",
+#             locks=[git_lock.access('exclusive')],
+#             retry=(360, 5)))
+#         self.addStep(steps.ShellCommand(
+#             command=["mkdir", "-p", util.Property('dest')]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "platform", util.Property("platform")]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "select", util.Property("select")]))
+#         self.addStep(PTXDistBuild(
+#             command=["python", "scripts/build.py", ]))
+#         self.addStep(PTXDistBuild(
+#             command=["ptxdist", "make", "ipkg-push"]))
+#         self.addStep(PTXDistBuild(
+#             command=["./scripts/ipkg-header"]))
+
+
+def isReleaseBuild(step):
+    if step.getProperty("release") is True:
+        return True
+    return False
+
+# Create build factory for ptxdist
+ptxdist_factory = util.BuildFactory()
+ptxdist_factory.addSteps([
+
+    # save current time
+    steps.SetProperty('timestamp', CurrentTime),
+
+    steps.SetProperty(
+        'project',
+        util.Interpolate(
+            "OrionLX-%(prop:platform)s-glibc")
+    ),
+    
+    # calculate and create output path
+    steps.SetProperty(
+        'dest',
+        util.Interpolate("/cache/images/%(prop:platform)s/%(prop:timestamp)s")),
+    steps.MakeDirectory(dir=util.Property('dest')),
+
+    # calculate and create output path
+    steps.SetProperty(
+        'ipkg',
+        util.Interpolate("/cache/ipkg-repository/%(prop:project)s")),
+    steps.MakeDirectory(dir=util.Property('ipkg')),
+
+    # check out the source
+    steps.Git(
+        repourl=worker_ptxdist_repourl,
+        branch=worker_ptxdist_branch,
+        mode="incremental",
+        method="clobber",
+        locks=[git_lock.access('exclusive')],
+        retry=(360, 5)
+        ),
+
+    # set ptxdist build platform
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "platform",
+            util.Property("platform")
+        ]),
+
+    # set ptxdist target
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "select",
+            util.Property('project')
+            ]),
+
+    # run ptxdist build with build.py
+    PTXDistBuild(
+        command=[
+            "python",
+            "scripts/build.py",
+            "--noclean",
+            "--noconfirm",
+            util.Property("version"),
+            util.Interpolate("%(prop:release:#?|release|beta)s"),
+            util.Transform(
+                string.split,
+                util.Property(
+                    "packages",
+                    default='')
+                )
+            ]),
+    # PTXDistBuild(command=["ptxdist", "make", "ipkg-push"]),
+    # PTXDistBuild(command=["./scripts/ipkg-header"]),
+
+    # set ptxdist collection
+    PTXDistBuild(
+        command=[
+            "ptxdist",
+            "collection",
+            util.Transform(collections.get, util.Property("platform"))
+            ]),
+
+    # If building a release, create and copy images
+    PTXDistBuild(
+        command=["ptxdist", "images"],
+        doStepIf=isReleaseBuild
+        ),
+    steps.CopyDirectory(
+        src=util.Interpolate("platform-%(prop:platform)s/images"),
+        dest=util.Property('dest'),
+        doStepIf=isReleaseBuild
+        ),
+])
+# ptxdist_factory.addStep(steps.ShellCommand(command=["./scripts/build-upgrade-test.sh"]))
+# ptxdist_factory.addStep(steps.ShellCommand(command=["curl", "--progress-bar", "-o", "/dev/null", "http://george:1234@172.16.190.70/outlet?1=CCL"]))
+# ptxdist_factory.addStep(steps.ShellCommand(command=[
 # 	"./scripts/upgradetest.py",
 # 	"load_7_upgrade_to_8",
 # 	"/srv/tftp/root.jffs2_64",
@@ -196,10 +316,10 @@ current_armeb_xscale_factory.addStep(steps.ShellCommand(
 # 	"orionpythontests",
 # 	"orionprotocoltests",
 # 	"--orion-config", "./local-pkg/buildslave_config_armeb-xscale.tar.gz"]))
-# current_armeb_xscale_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_armeb_xscale']))
-# current_armeb_xscale_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_armeb_xscale']))
+# ptxdist_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_armeb_xscale']))
+# ptxdist_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_armeb_xscale']))
 
-### local_tests_armeb_xscale ###
+# local_tests_armeb_xscale #
 local_tests_armeb_xscale_factory = util.BuildFactory()
 local_tests_armeb_xscale_factory.addStep(
     steps.ShellCommand(command=["uptime"]))
@@ -208,7 +328,7 @@ local_tests_armeb_xscale_factory.addStep(
 local_tests_armeb_xscale_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_armeb_xscale ###
+# remote_tests_armeb_xscale #
 remote_tests_armeb_xscale_factory = util.BuildFactory()
 # check out the source
 remote_tests_armeb_xscale_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
@@ -216,35 +336,35 @@ remote_tests_armeb_xscale_factory.addStep(steps.Git(repourl=acceptance_test_repo
 remote_tests_armeb_xscale_factory.addStep(steps.ShellCommand(
     command=["py.test", "-s", "--orion=172.16.64.150", "--hub-address=172.16.64.25:4444", "--browser=chrome"], workdir='build/WebUI'))
 
-### current_i686 ###
-current_i686_factory = PTXDistFactory(
-    worker_ptxdist_repourl, worker_ptxdist_branch, 'i686')
-# check out the source
-current_i686_factory.addStep(PTXDistBuild(
-    command=["ptxdist", "collection", "i686-base"]))
-current_i686_factory.addStep(PTXDistBuild(command=["ptxdist", "images"]))
-current_i686_factory.addStep(steps.ShellCommand(
-    command=["gzip", "-f", "platform-i686/images/hd.img"]))
-current_i686_factory.addStep(steps.ShellCommand(
-    command=["cp", "platform-i686/images/hd.img.gz", util.Property('dest')]))
+# current_i686 #
+# current_i686_factory = PTXDistFactory(
+#     worker_ptxdist_repourl, worker_ptxdist_branch, 'i686')
+# # check out the source
+# current_i686_factory.addStep(PTXDistBuild(
+#     command=["ptxdist", "collection", "i686-base"]))
+# current_i686_factory.addStep(PTXDistBuild(command=["ptxdist", "images"]))
+# current_i686_factory.addStep(steps.ShellCommand(
+#     command=["gzip", "-f", "platform-i686/images/hd.img"]))
+# current_i686_factory.addStep(steps.ShellCommand(
+#     command=["cp", "platform-i686/images/hd.img.gz", util.Property('dest')]))
 # current_i686_factory.addStep(trigger.Trigger(schedulerNames=['upgrade_i686']))
 # current_i686_factory.addStep(steps.ShellCommand(command=["sleep", "120"]))
 # current_i686_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_i686']))
 # current_i686_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_i686']))
 
-### current_am335x ###
-current_am335x_factory = PTXDistFactory(
-    worker_ptxdist_repourl, worker_ptxdist_branch, 'am335x')
-# check out the source
-current_am335x_factory.addStep(PTXDistBuild(
-    command=["ptxdist", "collection", "am335x-base"]))
-current_am335x_factory.addStep(PTXDistBuild(command=["ptxdist", "images"]))
+# current_am335x #
+# current_am335x_factory = PTXDistFactory(
+#     worker_ptxdist_repourl, worker_ptxdist_branch, 'am335x')
+# # check out the source
+# current_am335x_factory.addStep(PTXDistBuild(
+#     command=["ptxdist", "collection", "am335x-base"]))
+# current_am335x_factory.addStep(PTXDistBuild(command=["ptxdist", "images"]))
 # current_am335x_factory.addStep(trigger.Trigger(schedulerNames=['upgrade_am335x']))
 # current_am335x_factory.addStep(steps.ShellCommand(command=["sleep", "120"]))
 # current_am335x_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_am335x']))
 # current_am335x_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_am335x']))
 
-### upgrade_i686 ###
+# upgrade_i686 #
 upgrade_i686_factory = util.BuildFactory()
 upgrade_i686_factory.addStep(steps.ShellCommand(command=[
                              "upgrade", "list", "172.16.64.3/~georgem/ipkg-repository/OrionLX-i686-glibc/dists"]))
@@ -253,21 +373,21 @@ upgrade_i686_factory.addStep(steps.ShellCommand(command=["opkg", "upgrade"]))
 upgrade_i686_factory.addStep(steps.ShellCommand(
     command=["systemctl", "start", "delayed-reboot.timer"]))
 
-### local_tests_i686 ###
+# local_tests_i686 #
 local_tests_i686_factory = util.BuildFactory()
 local_tests_i686_factory.addStep(steps.ShellCommand(command=["uptime"]))
 local_tests_i686_factory.addStep(steps.ShellCommand(command=["uname", "-a"]))
 local_tests_i686_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_i686 ###
+# remote_tests_i686 #
 remote_tests_i686_factory = util.BuildFactory()
 remote_tests_i686_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
                                             mode="incremental", method="clobber", locks=[git_lock.access('exclusive')], retry=(120, 5)))
 remote_tests_i686_factory.addStep(steps.ShellCommand(command=[
                                   "py.test", "-s", "--orion=172.16.65.100", "--hub-address=172.16.64.25:4444", "--browser=chrome"], workdir='build/WebUI'))
 
-### upgrade_am335x ###
+# upgrade_am335x #
 upgrade_am335x_factory = util.BuildFactory()
 upgrade_am335x_factory.addStep(steps.ShellCommand(command=[
                                "upgrade", "list", "172.16.64.3/~georgem/ipkg-repository/OrionLX-am335x-glibc/dists"]))
@@ -276,27 +396,32 @@ upgrade_am335x_factory.addStep(steps.ShellCommand(command=["opkg", "upgrade"]))
 upgrade_am335x_factory.addStep(steps.ShellCommand(
     command=["systemctl", "start", "delayed-reboot.timer"]))
 
-### local_tests_am335x ###
+# local_tests_am335x #
 local_tests_am335x_factory = util.BuildFactory()
 local_tests_am335x_factory.addStep(steps.ShellCommand(command=["uptime"]))
 local_tests_am335x_factory.addStep(steps.ShellCommand(command=["uname", "-a"]))
 local_tests_am335x_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_am335x ###
+# remote_tests_am335x #
 remote_tests_am335x_factory = util.BuildFactory()
 remote_tests_am335x_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
                                               mode="incremental", method="clobber", locks=[git_lock.access('exclusive')], retry=(120, 5)))
 remote_tests_am335x_factory.addStep(steps.ShellCommand(command=[
                                     "py.test", "-s", "--orion=172.16.190.72", "--hub-address=172.16.64.25:4444", "--browser=chrome"], workdir='build/WebUI'))
 
-from buildbot.config import BuilderConfig
-
 builders = []
 builders.append(
-    BuilderConfig(name="current_armeb_xscale",
-                  workernames=["worker-ptxdist"],
-                  factory=current_armeb_xscale_factory))
+    BuilderConfig(
+        name="ptxdist_current",
+        workernames=["worker-ptxdist"],
+        factory=ptxdist_factory
+    )
+)
+# builders.append(
+#     BuilderConfig(name="current_armeb_xscale",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_armeb_xscale_factory))
 builders.append(
     BuilderConfig(name="local_tests_armeb_xscale",
                   workernames=["orion-armeb-xscale-slave"],
@@ -305,14 +430,14 @@ builders.append(
     BuilderConfig(name="remote_tests_armeb_xscale",
                   workernames=["worker-ptxdist"],
                   factory=remote_tests_armeb_xscale_factory))
-builders.append(
-    BuilderConfig(name="current_i686",
-                  workernames=["worker-ptxdist"],
-                  factory=current_i686_factory))
-builders.append(
-    BuilderConfig(name="current_am335x",
-                  workernames=["worker-ptxdist"],
-                  factory=current_am335x_factory))
+# builders.append(
+#     BuilderConfig(name="current_i686",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_i686_factory))
+# builders.append(
+#     BuilderConfig(name="current_am335x",
+#                   workernames=["worker-ptxdist"],
+#                   factory=current_am335x_factory))
 builders.append(
     BuilderConfig(name="upgrade_i686",
                   workernames=["orion-i686-slave"],
diff --git a/roles/buildbot-worker-ptxdist/defaults/main.yml b/roles/buildbot-worker-ptxdist/defaults/main.yml
index b84c5b8b..0ed3f8d0 100644
--- a/roles/buildbot-worker-ptxdist/defaults/main.yml
+++ b/roles/buildbot-worker-ptxdist/defaults/main.yml
@@ -36,6 +36,9 @@ container_env:
 # the name of the container being started
 container_name: '{{ docker_name_prefix }}{{ hostname }}'
 
+# port configuration of the container
+container_port_args: []
+
 # volumes mounted within the container
 container_volumes:
 - '{{ data_volume }}:{{ data_path }}:z'
@@ -49,7 +52,7 @@ data_path: '/buildbot'
 data_volume: '{{ docker_name_prefix }}{{ hostname }}-data'
 
 # hostname
-hostname: buildbot-worker-ptxdist
+hostname: '{{ role_name }}'
 
 # address of hsm cryptographic service
 hsm_host: '{{ansible_facts.default_ipv4.address}}'
@@ -58,8 +61,6 @@ hsm_host: '{{ansible_facts.default_ipv4.address}}'
 image_args:
   BUILDBOT_UID: '{{buildbot_uid}}'
   BUILDBOT_VERSION: 'v{{buildbot_version}}'
-  PTK_URI: '{{asset_host}}/610-009981-015_SW_PTK_5.3_Client_RevA.tar'
-  PTK_HSM_HOST: '{{hsm_host}}'
 
 # directory of the image source
 image_dir: '{{ docker_projects_dir }}/{{ hostname }}'
diff --git a/roles/buildbot-worker-ptxdist/tasks/main.yml b/roles/buildbot-worker-ptxdist/tasks/main.yml
index 1a45e06a..91dec6ce 100644
--- a/roles/buildbot-worker-ptxdist/tasks/main.yml
+++ b/roles/buildbot-worker-ptxdist/tasks/main.yml
@@ -63,6 +63,15 @@
     repo: '{{ image_repo }}'
     version: master
     dest: '{{ image_dir }}'
+    force: yes
+
+- template:
+    src: pip.conf.j2
+    dest: '{{ image_dir }}/buildbot/.pip/pip.conf'
+
+- template:
+    src: pydistutils.cfg.j2
+    dest: '{{ image_dir }}/buildbot/.pydistutils.cfg'
 
 - name: Create buildbot worker image
   docker_image:
@@ -76,10 +85,10 @@
   docker_container:
     name: '{{ container_name }}'
     image: '{{ image_name }}:{{ docker_image_tag }}'
-    # networks: '{{ buildbot_worker_ptxdist_networks }}'
+    networks: '{{ container_networks }}'
     volumes: '{{ container_volumes }}'
     env: '{{ container_env }}'
-    # ports: '{{ buildbot_worker_ptxdist_port_args }}'
+    ports: '{{ container_port_args }}'
 
 - name: Grab ssh public key
   command: >
@@ -89,5 +98,5 @@
 
 - name: Add buildbot_worker_ptxdist host
   add_host:
-    name: buildbot_worker_ptxdist
+    name: "{{ hostname }}"
     pubkey: "{{ output.stdout }}"
diff --git a/roles/buildbot-worker-ptxdist/templates/pip.conf.j2 b/roles/buildbot-worker-ptxdist/templates/pip.conf.j2
new file mode 100644
index 00000000..a54ae09a
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/templates/pip.conf.j2
@@ -0,0 +1,3 @@
+[global]
+trusted-host = {{hostvars['buildbot-worker-devpi'].uri | urlsplit('hostname')}}
+index-url = {{hostvars['buildbot-worker-devpi'].uri}}
diff --git a/roles/buildbot-worker-ptxdist/templates/pydistutils.cfg.j2 b/roles/buildbot-worker-ptxdist/templates/pydistutils.cfg.j2
new file mode 100644
index 00000000..f9fd2372
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/templates/pydistutils.cfg.j2
@@ -0,0 +1,2 @@
+[easy_install]
+index_url = {{hostvars['buildbot-worker-devpi'].uri}}
