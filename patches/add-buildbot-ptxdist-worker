Bottom: 9ff4f5ad21fb2cd91b5e55158f43ac97fb34dffd
Top:    76f3ee25f32463bf7fdbe0f20f438781dc69a692
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-06-04 10:52:21 -0500

Add buildbot PTXdist worker Docker image


---
diff --git a/ansible-playbook/buildbot.yml b/ansible-playbook/buildbot.yml
index e14b93b9..3aee04d2 100644
--- a/ansible-playbook/buildbot.yml
+++ b/ansible-playbook/buildbot.yml
@@ -21,6 +21,19 @@
       new_user_email: buildbot@novatech-llc.com
       new_user_pass: "{{ lookup('password', '/dev/null') }}"
 
+- name: Setup Buildbot worker system
+  hosts: builder
+  become: true
+  become_user: root
+  become_method: sudo
+  tags:
+  - buildbot
+  - buildbot-worker
+  vars:
+    buildbot_master: "{{ hostvars.buildbot_master.ip_addr }}"
+  roles:
+  - role: buildbot-worker-ptxdist
+
 - name: Gitlab public keys for buildbot containers
   hosts: daedalus
   become: true
@@ -35,3 +48,9 @@
       username: buildbot
       pubkey: "{{ hostvars.buildbot_master.pubkey }}"
       title: "buildbot_master"
+  - name: Add buildbot_worker_ptxdist pubkey to buildbot user
+    role: gitlab-sshkey
+    vars:
+      username: buildbot
+      pubkey: "{{ hostvars.buildbot_worker_ptxdist.pubkey }}"
+      title: "buildbot_worker_ptxdist"
diff --git a/ansible-playbook/group_vars/all/buildbot.yml b/ansible-playbook/group_vars/all/buildbot.yml
index 86476751..59244182 100644
--- a/ansible-playbook/group_vars/all/buildbot.yml
+++ b/ansible-playbook/group_vars/all/buildbot.yml
@@ -1,3 +1,4 @@
 ---
 buildbot_version: 1.1.2
 buildbot_worker_port: 9989
+buildbot_worker_ptxdist: worker-ptxdist
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index d476bf91..05753bf8 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -1,6 +1,7 @@
 ---
 # passwords
 buildbot_admin_password:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/admin"                      , length=20) }}'
+buildbot_worker_ptxdist_password:    '{{ lookup("password", playbook_dir + "/credentials/buildbot/worker_ptxdist"             , length=20) }}'
 buildsystem_database_build_password: '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/readuser") }}'
 buildsystem_database_root_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/root"           , length=20) }}'
 buildsystem_ssh_prod_user_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/ssh/prod"                , length=20) }}'
diff --git a/docker/buildbot-worker-ptxdist/Dockerfile b/docker/buildbot-worker-ptxdist/Dockerfile
new file mode 100644
index 00000000..ee6bfeb5
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/Dockerfile
@@ -0,0 +1,93 @@
+FROM        krallin/ubuntu-tini:trusty
+
+ENV PTXDIST_VERSION 2012.09.1
+
+WORKDIR /buildbot
+
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q wget \
+&&  wget -qO /etc/apt/trusted.gpg.d/ptx-archive-key.gpg https://debian.pengutronix.de/debian/ptx-archive-key.gpg \
+&&  wget -qO /etc/apt/sources.list.d/pengutronix.list   https://debian.pengutronix.de/debian/pengutronix.list \
+&&  apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+        oselas.toolchain-2011.11.3-armeb-xscale-linux-gnueabi-gcc-4.6.2-glibc-2.14.1-binutils-2.21.1a-kernel-2.6.39-sanitized \
+        oselas.toolchain-2012.12.1-arm-cortexa8-linux-gnueabi-gcc-4.7.3-glibc-2.16.0-binutils-2.22-kernel-3.6-sanitized \
+        oselas.toolchain-2012.12.1-i686-atom-linux-gnu-gcc-4.7.2-glibc-2.16.0-binutils-2.22-kernel-3.6-sanitized \
+&&  rm -rf /var/lib/apt/lists/*
+
+# Install security updates and required packages
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+        autoconf \
+        bison \
+        build-essential \
+        ccache \
+        comerr-dev \
+        default-jre-headless \
+        docbook-xml \
+        docbook-xsl \
+        groff-base \
+        libgdk-pixbuf2.0-dev \
+        libgtk2.0-bin \
+        libicu-dev \
+        libncurses5 \
+        libncurses5-dev \
+        libswitch-perl \
+        libxml-simple-perl \
+        libxml2-utils \
+        lzop \
+        flex \
+        gawk \
+        gcc \
+        gconf2 \
+        gettext \
+        git \
+        libtool \
+        make \
+        python-dev \
+        python-libxml2 \
+        python-tdb \
+        ruby \
+        subversion \
+        ss-dev \
+        texinfo \
+        unzip \
+        wget \
+        xsltproc \
+        yasm \
+&&  rm -rf /var/lib/apt/lists/*
+
+ARG BUILDBOT_VERSION
+# Install required python packages, and twisted
+RUN wget https://bootstrap.pypa.io/get-pip.py \
+&&  python get-pip.py --no-cache-dir \
+&&  pip --no-cache-dir install \
+        'virtualenv' \
+        'twisted[tls]' \
+        buildbot-worker${BUILDBOT_VERSION:+==${BUILDBOT_VERSION}} \
+&&  rm -rf get-pip.py
+
+ARG BUILDBOT_UID=1000
+COPY buildbot/ /home/buildbot/
+RUN useradd --comment "Buildbot Server" --home-dir "/home/buildbot" --shell "/bin/bash" --uid ${BUILDBOT_UID} --user-group buildbot \
+&&  chown -v -R buildbot:buildbot "/buildbot" \
+&&  chown -v -R buildbot:buildbot "/home/buildbot" \
+&&  useradd --comment "Gnome Display Manager" --home-dir "/var/lib/gdm" --shell "/sbin/nologin" --user-group --system gdm
+
+# Install ptxdist, a build system
+COPY src /usr/src/ptxdist-${PTXDIST_VERSION}
+RUN cd /usr/src/ptxdist-${PTXDIST_VERSION} \
+&&  touch ptxdist \
+&&  echo "${PTXDIST_VERSION}" > .tarball-version \
+&&  ./autogen.sh \
+&&  ./configure \
+&&  make \
+&&  make install \
+&&  make distclean
+
+USER buildbot
+
+CMD ["/home/buildbot/start.sh"]
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf b/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf
new file mode 100644
index 00000000..150374b8
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf
@@ -0,0 +1,8 @@
+# Set maximum cache size to 10 GB:
+max_size = 10G
+
+# Disable hard linking for shared cache
+hard_link = false
+
+# Place cache directory in common location
+cache_dir = /cache/ccache
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.gitconfig b/docker/buildbot-worker-ptxdist/buildbot/.gitconfig
new file mode 100644
index 00000000..efd988f4
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.gitconfig
@@ -0,0 +1,3 @@
+[user]
+	name = BuildBot
+	email = buildbot@novatechweb.com
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git b/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git
new file mode 100644
index 00000000..7dbac6ef
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git
@@ -0,0 +1,75 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# PTXdist 2012.09.1-00373-gee9622f
+#
+
+#
+# PTXDIST Setup Menu
+#
+
+#
+# User
+#
+PTXCONF_SETUP_USER_NAME="NovaTech Buildbot"
+PTXCONF_SETUP_USER_EMAIL="buildbot@novatechweb.com"
+
+#
+# Proxies
+#
+PTXCONF_SETUP_FTP_PROXY=""
+PTXCONF_SETUP_HTTP_PROXY=""
+PTXCONF_SETUP_HTTPS_PROXY=""
+PTXCONF_SETUP_NO_PROXY=""
+
+#
+# Project Searchpath
+#
+PTXCONF_SETUP_PROJECTPATH="${PTXDIST_TOPDIR}/projects"
+
+#
+# Source Directories
+#
+PTXCONF_SETUP_SRCDIR="/cache/downloads"
+
+#
+# Source Download
+#
+# PTXCONF_SETUP_NO_DOWNLOAD is not set
+# PTXCONF_SETUP_PTXMIRROR_ONLY is not set
+PTXCONF_SETUP_PTXMIRROR="http://www.pengutronix.de/software/ptxdist/temporary-src"
+PTXCONF_SETUP_DEBMIRROR="http://ftp.uni-kl.de/debian"
+PTXCONF_SETUP_SFMIRROR="http://downloads.sourceforge.net/sourceforge"
+PTXCONF_SETUP_GNUMIRROR="http://ftp.uni-kl.de/pub/gnu"
+PTXCONF_SETUP_XORGMIRROR="http://xorg.mirrors.pair.com/pub/X11/ftp.x.org"
+PTXCONF_SETUP_KERNELMIRROR="http://www.kernel.org/pub/linux"
+# PTXCONF_SETUP_CHECK_ALWAYS is not set
+PTXCONF_SETUP_CHECK_NOTEMPTY=y
+# PTXCONF_SETUP_CHECK_NEVER is not set
+PTXCONF_SETUP_CHECK="notempty"
+
+#
+# IPKG Repository
+#
+PTXCONF_SETUP_IPKG_REPOSITORY="/cache/ipkg-repository"
+
+#
+# Java SDK
+#
+PTXCONF_SETUP_JAVA_SDK="/usr"
+
+#
+# Developer Options
+#
+# PTXCONF_SETUP_DISABLE_LOCAL_CHECK is not set
+PTXCONF_SETUP_ENV_WHITELIST=""
+# PTXCONF_SETUP_COMMON_CACHE is not set
+# PTXCONF_SETUP_GEN_DEP_TREE is not set
+# PTXCONF_SETUP_CHECK_EXIT_ON_ERROR is not set
+PTXCONF_SETUP_CCACHE=y
+PTXCONF_SETUP_PATCHIN_GIT=y
+# PTXCONF_SETUP_NFS_REL_SYMLINK is not set
+# PTXCONF_SETUP_DIRECT_CLEAN is not set
+PTXCONF_SETUP_HOST_CPP="cpp"
+PTXCONF_SETUP_HOST_CC="gcc"
+PTXCONF_SETUP_HOST_CXX="g++"
+PTXCONF_SETUP_HOST_MAKE="make"
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
new file mode 100644
index 00000000..8dc2a29b
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
@@ -0,0 +1,2 @@
+[easy_install]
+index-url=http://172.16.103.72/repository/PyPi_Proxy/simple
diff --git a/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac b/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac
new file mode 100644
index 00000000..37012ab4
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac
@@ -0,0 +1,38 @@
+import fnmatch
+import os
+import sys
+
+from twisted.application import service
+from twisted.python.log import FileLogObserver
+from twisted.python.log import ILogObserver
+
+from buildbot_worker.bot import Worker
+
+# setup worker
+basedir = os.path.abspath(os.path.dirname(__file__))
+application = service.Application('buildbot-worker')
+
+
+application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
+# and worker on the same process!
+buildmaster_host = os.environ.get("BUILDBOT_MASTER", 'localhost')
+port = int(os.environ.get("BUILDBOT_WORKER_PORT", 9989))
+workername = os.environ.get("BUILDBOT_WORKER_NAME", 'docker')
+passwd = os.environ.get("BUILDBOT_WORKER_PASS")
+
+# delete the password from the environ so that it is not leaked in the log
+blacklist = os.environ.get("BUILDBOT_ENVIRONMENT_BLACKLIST", "BUILDBOT_WORKER_PASSWORD").split(',')
+for name in list(os.environ.keys()):
+    for toremove in blacklist:
+        if fnmatch.fnmatch(name, toremove):
+            del os.environ[name]
+
+keepalive = 600
+umask = None
+maxdelay = 300
+allow_shutdown = None
+
+s = Worker(buildmaster_host, port, workername, passwd, basedir,
+           keepalive, umask=umask, maxdelay=maxdelay,
+           allow_shutdown=allow_shutdown)
+s.setServiceParent(application)
diff --git a/docker/buildbot-worker-ptxdist/buildbot/start.sh b/docker/buildbot-worker-ptxdist/buildbot/start.sh
new file mode 100755
index 00000000..a6343a88
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/start.sh
@@ -0,0 +1,12 @@
+#!/bin/sh
+
+SSH_BITS=${SSH_BITS-"2048"}
+SSH_TYPE=${SSH_TYPE-"rsa"}
+SSH_FILE=${SSH_FILE-"$HOME/.ssh/id_rsa"}
+
+BUILDBOT_DATA=${BUILDBOT_DATA-"/buildbot"}
+
+ssh-keygen -q -b ${SSH_BITS} -t ${SSH_TYPE} -N '' -f ${SSH_FILE} 0>&- 1>/dev/null 2>/dev/null
+
+ln -v -s -f ${HOME}/buildbot.tac $BUILDBOT_DATA
+exec twistd --nodaemon --logfile=- --pidfile=/tmp/twistd.pid --python=buildbot.tac
diff --git a/roles/buildbot-worker-ptxdist/defaults/main.yml b/roles/buildbot-worker-ptxdist/defaults/main.yml
new file mode 100644
index 00000000..092944c9
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/defaults/main.yml
@@ -0,0 +1,32 @@
+---
+# defaults file for buildbot-worker-ptxdist
+
+# The hostname passed as an envirnment variable into the container
+# Network names
+docker_network_frontend: 'frontend'
+
+buildbot_worker_ptxdist_build_args:
+  BUILDBOT_UID: '1000'
+  BUILDBOT_VERSION: 'v1.1.2'
+
+# the name of the container being started
+buildbot_worker_ptxdist_container_name: '{{ docker_name_prefix }}buildbot-worker-ptxdist'
+
+buildbot_worker_ptxdist_data_path: '/buildbot'
+
+# the name of the data volume used by the container
+buildbot_worker_ptxdist_data_volume: '{{ docker_name_prefix }}buildbot-worker-ptxdist_data'
+
+buildbot_worker_ptxdist_env:
+  BUILDBOT_MASTER: '{{ buildbot_master }}'
+  BUILDBOT_WORKER_PORT: '9989'
+  BUILDBOT_WORKER_NAME: 'worker-ptxdist'
+  BUILDBOT_WORKER_PASS: 'pass'
+
+# the name of the image being built and used for the container
+buildbot_worker_ptxdist_image_dir: '{{ docker_projects_dir }}/buildbot-worker-ptxdist'
+buildbot_worker_ptxdist_image_name: '{{ docker_registry_username }}/buildbot-worker-ptxdist'
+buildbot_worker_ptxdist_image_repo: https://github.com/novatechweb/docker-buildbot-worker-ptxdist.git
+
+buildbot_worker_ptxdist_volumes:
+  - '{{ buildbot_worker_ptxdist_data_volume }}:{{ buildbot_worker_ptxdist_data_path }}:z'
diff --git a/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh b/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh
new file mode 100755
index 00000000..8353ad9d
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh
@@ -0,0 +1,17 @@
+#!/bin/sh
+
+DIRS="/cache \
+      /cache/ccache \
+      /cache/downloads \
+      /cache/images \
+      /cache/ipkg-repository \
+      /cache/mirrors \
+      /cache/releases \
+      /cache/sstate"
+
+for d in $DIRS
+do
+  mkdir -p $d
+  chown -c -R buildbot:buildbot $d
+  chmod -v 777 $d
+done
diff --git a/roles/buildbot-worker-ptxdist/tasks/main.yml b/roles/buildbot-worker-ptxdist/tasks/main.yml
new file mode 100644
index 00000000..c2b6144a
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tasks/main.yml
@@ -0,0 +1,45 @@
+---
+# tasks file for buildbot-worker-ptxdist
+
+# This will generate passwords for these accounts.
+- assert:
+    that:
+    - buildbot_worker_ptxdist_password is defined
+
+- name: Create buildbot data volume
+  docker_volume:
+    name: '{{ buildbot_worker_ptxdist_data_volume }}'
+
+- name: Checkout image repo
+  git:
+    repo: '{{ buildbot_worker_ptxdist_image_repo }}'
+    version: master
+    dest: '{{ buildbot_worker_ptxdist_image_dir }}'
+
+- name: Create buildbot worker image
+  docker_image:
+    name: '{{ buildbot_worker_ptxdist_image_name }}'
+    tag: '{{ docker_image_tag }}'
+    path: '{{ buildbot_worker_ptxdist_image_dir }}'
+    buildargs: '{{ buildbot_worker_ptxdist_build_args }}'
+    force: true
+
+- name: Start buildbot container
+  docker_container:
+    name: '{{ buildbot_worker_ptxdist_container_name }}'
+    image: '{{ buildbot_worker_ptxdist_image_name }}:{{ docker_image_tag }}'
+    # networks: '{{ buildbot_worker_ptxdist_networks }}'
+    volumes: '{{ buildbot_worker_ptxdist_volumes }}'
+    env: '{{ buildbot_worker_ptxdist_env }}'
+    # ports: '{{ buildbot_worker_ptxdist_port_args }}'
+
+- name: Grab ssh public key
+  command: >
+    docker exec '{{ buildbot_worker_ptxdist_container_name }}' cat /home/buildbot/.ssh/id_rsa.pub
+  changed_when: false
+  register: output
+
+- name: Add buildbot_worker_ptxdist host
+  add_host:
+    name: buildbot_worker_ptxdist
+    pubkey: "{{ output.stdout }}"
diff --git a/roles/buildbot-worker-ptxdist/vars/main.yml b/roles/buildbot-worker-ptxdist/vars/main.yml
new file mode 100644
index 00000000..ae5fa61c
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for buildbot-worker-ptxdist
\ No newline at end of file
