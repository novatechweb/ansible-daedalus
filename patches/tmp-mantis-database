Bottom: 8528484de745bf71c60ba7ee6d733e3168c383a1
Top:    22ccf32165ea68155195c5cfbc441ba7fa8afe32
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-05-22 15:56:24 -0500

Fix mantisbt mysql database provision



---
diff --git a/roles/docker-mantisbt/defaults/main.yml b/roles/docker-mantisbt/defaults/main.yml
index 4ee5f22..5908d24 100644
--- a/roles/docker-mantisbt/defaults/main.yml
+++ b/roles/docker-mantisbt/defaults/main.yml
@@ -19,8 +19,8 @@ mantisbt_db_user: novatech
 mantisbt_image_repo: https://github.com/novatechweb/docker-mantisbt.git
 mantisbt_image_name: '{{ docker_registry_username }}/mantisbt'
 
-mantisbt_db_image_repo: https://github.com/novatechweb/docker-mysql-data.git
-mantisbt_db_image_name: '{{ docker_registry_username }}/mysql.dv'
+mantisbt_db_image_name: 'mysql'
+mantisbt_db_image_tag: 5
 
 # the name of the container being started
 mantisbt_container_name: '{{ docker_name_prefix }}mantisbt'
@@ -31,6 +31,9 @@ mantisbt_db_container_name: '{{ docker_name_prefix }}mantisbt_db'
 # the name of the data-volume used by the container
 mantisbt_dv_name: '{{ docker_name_prefix }}mantisbt_DV'
 
+# the name of the mysql config volume used by the mantisbt container
+mantisbt_db_cv_name: '{{ docker_name_prefix }}mantisbt_db_CV'
+
 # the name of the mysql data-volume used by the mantisbt container
 mantisbt_db_dv_name: '{{ docker_name_prefix }}mantisbt_db_DV'
 
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index 3752cc0..1b9ecfd 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -28,6 +28,15 @@
     mode: 'u=rwx,g=rx,o=rx'
     recurse: no
 
+- name: docker_container.conf dir
+  file:
+    state: directory
+    path: '{{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}'
+    owner: root
+    group: root
+    mode: 'u=rwx,g=rx,o=rx'
+    recurse: no
+
 # *****************************************************************************
 # backup script part
 
@@ -65,6 +74,13 @@
     get_md5: False
   register: st_mantisbt_restore
 
+- name: exists - state file (mysql)
+  stat:
+    path: '{{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}/restore.date.txt'
+    get_checksum: False
+    get_md5: False
+  register: st_mantisbt_db_restore
+
 # *****************************************************************************
 # Update or make the image.
 - name: Checkout image repo
@@ -85,30 +101,19 @@
     tag: '{{ docker_image_tag }}'
     path: '{{ docker_projects_dir }}/docker-mantisbt'
 
-- name: Checkout db repo
-  git:
-    repo: '{{ mantisbt_db_image_repo }}'
-    version: master
-    dest: '{{ docker_projects_dir }}/docker-mysql-data'
+# - name: Checkout db repo
+#   git:
+#     repo: '{{ mantisbt_db_image_repo }}'
+#     version: master
+#     dest: '{{ docker_projects_dir }}/docker-mysql-data'
 
 - name: build data-container image
   docker_image:
     name: '{{ mantisbt_db_image_name }}'
     tag: '{{ docker_image_tag }}'
     path: '{{ docker_projects_dir }}/docker-mysql-data'
-
-# *****************************************************************************
-# copy the MySQL config to the restore directory
-
-- name: copy mysql config
-  copy:
-    src: '{{ item }}'
-    dest: '{{ host_mantisbt_docker_restore_dir }}/{{ item }}'
-    setype: svirt_sandbox_file_t
-  with_items:
-  - largefile.cnf
-  - character-set.cnf
-
+    force: true
+  
 # *****************************************************************************
 # Create the data volumes
 
@@ -116,29 +121,82 @@
   docker_volume:
     name: '{{ mantisbt_dv_name }}'
 
+- name: config-volume container (mysql)
+  docker_volume:
+    name: '{{ mantisbt_db_cv_name }}'
+
 - name: data-volume container (mysql)
   docker_volume:
     name: '{{ mantisbt_db_dv_name }}'
 
-- name: stop prev container (mysql)
-  docker_container:
-    image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-    name: '{{ mantisbt_db_container_name }}'
-    state: stopped
-
-- name: initial populate (mysql - import config)
-  command: 'docker run --rm --volumes-from {{ mantisbt_db_dv_name }} -v {{ host_mantisbt_docker_restore_dir }}:/tmp/conf.d {{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
-
-- name: initial populate (mysql - database)
-  docker_db_init:
-    image_name: '{{ mantisbt_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    container_name: '{{ mantisbt_db_dv_name }}_init_db'
-    data_volume_container_name: '{{ mantisbt_db_dv_name }}'
-    database_name: bugtracker
-    database_user: '{{ mantisbt_db_user }}'
-    database_password: '{{ mantisbt_db_password | quote }}'
-    database_root_password: '{{ mantisbt_db_root_password | quote }}'
+# - name: stop prev container (mysql)
+#   docker_container:
+#     image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
+#     name: '{{ mantisbt_db_container_name }}'
+#     state: stopped
+
+# - name: initial populate (mysql - import config)
+#   command: 'docker run --rm --volumes-from {{ mantisbt_db_dv_name }} -v {{ mantisbt_docker_restore_dir }}:/tmp/conf.d {{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
+
+# - name: initial populate (mysql - database)
+#   docker_db_init:
+#     image_name: '{{ mantisbt_db_image_name }}'
+#     image_tag: '{{ docker_image_tag }}'
+#     container_name: '{{ mantisbt_db_dv_name }}_init_db'
+#     data_volume_container_name: '{{ mantisbt_db_dv_name }}'
+#     database_name: bugtracker
+#     database_user: '{{ mantisbt_db_user }}'
+#     database_password: '{{ mantisbt_db_password | quote }}'
+#     database_root_password: '{{ mantisbt_db_root_password | quote }}'
+
+- name: initialize mysql container
+  when: st_mantisbt_db_restore.stat.exists == False
+  block:
+  - name: make temporary directory for config
+    tempfile:
+      state: directory
+    register: config_tempdir
+  - name: upload mysql config
+    copy:
+      src: '{{ item }}'
+      dest: '{{ config_tempdir.path }}/{{ item }}'
+    with_items:
+    - largefile.cnf
+    - character-set.cnf
+  - name: copy mysql config to volume
+    command: >
+      docker run --rm 
+      -v '{{ config_tempdir.path }}:/from'
+      -v '{{ mantisbt_db_cv_name }}:/to'
+      alpine /bin/ash -c 'cp -v /from/* /to'
+  - name: Start initialization of empty volume
+    docker_container:
+      name: '{{ mantisbt_db_dv_name}}_init_db'
+      image: '{{ mantisbt_db_image_name }}:{{ mantisbt_db_image_tag }}'
+      volumes:
+        - '{{ mantisbt_db_cv_name }}:/etc/mysql/conf.d:z'
+        - '{{ mantisbt_db_dv_name }}:/var/lib/mysql:z'
+      env:
+        MYSQL_DATABASE: 'bugtracker'
+        MYSQL_ROOT_PASSWORD: '{{ mantisbt_db_root_password }}'
+        MYSQL_USER: '{{ mantisbt_db_user }}'
+        MYSQL_PASSWORD: '{{ mantisbt_db_password }}'
+  - name: wait for initialization to complete
+    shell: >
+        printf 'SHOW GLOBAL STATUS\n' | docker exec -i 
+        {{ mantisbt_db_dv_name}}_init_db 
+        mysql --host=localhost --user={{ mantisbt_db_user | quote }}
+        --password={{ mantisbt_db_password | quote }} bugtracker
+    register: container_status
+    retries: 20
+    delay: 3
+    until: "container_status.rc == 0"
+  - name: remove initialization container
+    docker_container:
+      name: '{{ mantisbt_db_dv_name}}_init_db'
+      state: stopped
+  - name: State file
+    shell: 'date --rfc-3339=seconds > {{ docker_restore_config_base_dir }}/{{ mantisbt_db_dv_name }}/restore.date.txt'
 
 # *****************************************************************************
 # Start the data container running
@@ -148,9 +206,10 @@
     name: '{{ mantisbt_db_container_name }}'
     detach: true
     restart_policy: always
-    volumes_from:
-      - '{{ mantisbt_db_dv_name }}'
-    image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
+    volumes:
+      - '{{ mantisbt_db_cv_name }}:/etc/mysql/conf.d:z'
+      - '{{ mantisbt_db_dv_name }}:/var/lib/mysql:z'
+    image: '{{ mantisbt_db_image_name }}:{{ mantisbt_db_image_tag }}'
     networks:
       - name: '{{ docker_network_frontend }}'
 
@@ -163,14 +222,14 @@
     ports: '{{ mantisbt_network.port_args }}'
     networks:
       - name: '{{ docker_network_frontend }}'
-    volumes-from: 
-      - '{{ openssl_dv_name }}'
-      - '{{ mantisbt_dv_name }}'
+    volumes: 
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ mantisbt_dv_name }}:/var/www/html:z'
     env: 
-      - MANTISBT_HOSTNAME={{ mantisbt_network.hostname }}
-      - MANTISBT_MAIL_USER=mantis
-      - MANTISBT_MAIL_PASSWORD={{ mantisbt_email_password | quote }}
-      - MANTISBT_LDAP_PASSWORD={{ ldap_proxyagent_password | quote }}
+      MANTISBT_HOSTNAME: '{{ mantisbt_network.hostname }}'
+      MANTISBT_MAIL_USER: 'mantis'
+      MANTISBT_MAIL_PASSWORD: '{{ mantisbt_email_password | quote }}'
+      MANTISBT_LDAP_PASSWORD: '{{ openldap_proxyagent_password | quote }}'
     image: '{{ mantisbt_image_name }}:{{ docker_image_tag }}'
 
 # *****************************************************************************
