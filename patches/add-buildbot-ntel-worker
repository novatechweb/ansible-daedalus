Bottom: cec7d49e6034a3d07e978524ac7e662b4b0708ce
Top:    e53c761b8570b3842f388a08811d4a520ba0989d
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-07-13 09:06:18 -0500

Add buildbot NTEL worker Docker image


---
diff --git a/ansible-playbook/buildbot.yml b/ansible-playbook/buildbot.yml
index bc6c7663..464bcca2 100644
--- a/ansible-playbook/buildbot.yml
+++ b/ansible-playbook/buildbot.yml
@@ -26,6 +26,24 @@
       new_user_email: buildbot@novatech-llc.com
       new_user_pass: "{{ lookup('password', '/dev/null') }}"
 
+- name: Setup Buildbot worker system
+  hosts: builder
+  become: true
+  become_user: root
+  become_method: sudo
+  tags:
+  - buildbot
+  - buildbot-worker
+  vars:
+    buildbot_master: "{{ hostvars.buildbot_master.ip_addr }}"
+    known_hosts: "{{gitlab_keys.stdout}}"
+  pre_tasks:
+  - name: Scan Gitlab ssh keys
+    command: ssh-keyscan {{gitlab_hostname}}
+    register: gitlab_keys
+  roles:
+  - role: buildbot-worker-ntel
+
 - name: Gitlab public keys for buildbot containers
   hosts: daedalus
   become: true
@@ -40,3 +58,9 @@
       username: buildbot
       pubkey: "{{ hostvars.buildbot_master.pubkey }}"
       title: "buildbot_master"
+  - name: Add buildbot_worker_ntel pubkey to buildbot user
+    role: gitlab-sshkey
+    vars:
+      username: buildbot
+      pubkey: "{{ hostvars.buildbot_worker_ntel.pubkey }}"
+      title: "buildbot_worker_ntel"
diff --git a/ansible-playbook/group_vars/all/buildbot.yml b/ansible-playbook/group_vars/all/buildbot.yml
index 86476751..7ad40a83 100644
--- a/ansible-playbook/group_vars/all/buildbot.yml
+++ b/ansible-playbook/group_vars/all/buildbot.yml
@@ -1,3 +1,4 @@
 ---
 buildbot_version: 1.1.2
 buildbot_worker_port: 9989
+buildbot_worker_ntel: worker-ntel
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index 828dde00..37dfa71d 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -1,6 +1,7 @@
 ---
 # passwords
 buildbot_admin_password:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/admin"                      , length=20) }}'
+buildbot_worker_ntel_password:       '{{ lookup("password", playbook_dir + "/credentials/buildbot/worker_ntel"                , length=20) }}'
 buildsystem_database_build_password: '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/readuser") }}'
 buildsystem_database_root_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/root"           , length=20) }}'
 buildsystem_ssh_prod_user_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/ssh/prod"                , length=20) }}'
diff --git a/docker/buildbot-worker-ntel/Dockerfile b/docker/buildbot-worker-ntel/Dockerfile
new file mode 100644
index 00000000..11a726fb
--- /dev/null
+++ b/docker/buildbot-worker-ntel/Dockerfile
@@ -0,0 +1,89 @@
+# buildbot/buildbot-worker
+
+# please follow docker best practices
+# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/
+
+# Provides a base Ubuntu (16.04) image with latest buildbot worker installed
+# the worker image is not optimized for size, but rather uses ubuntu for wider package availability
+
+FROM        krallin/ubuntu-tini:trusty
+MAINTAINER  Buildbot maintainers
+
+WORKDIR /buildbot
+
+# Install security updates and required packages
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+       alien \
+       build-essential \
+       chrpath \
+       cmake \
+       cpio \
+       curl \
+       diffstat \
+       docbook-xsl \
+       gawk \
+       git \
+       libffi-dev \
+       libssl-dev \
+       locales \
+       net-tools \
+       default-jre-headless \
+       python-dev \
+       python3 \
+       subversion \
+       texinfo \
+       wget \
+       xsltproc \
+&&  rm -rf /var/lib/apt/lists/*
+
+# Generate UTF-8 locale for python3
+# RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
+# &&  dpkg-reconfigure -f noninteractive locales \
+# &&  update-locale LANG=en_US.UTF-8
+
+# Generate UTF-8 locale for python3
+RUN echo "en_US.UTF-8 UTF-8" >> /var/lib/locales/supported.d/local \
+&&  dpkg-reconfigure -f noninteractive locales \
+&&  update-locale LANG=en_US.UTF-8
+
+# Set locale environment
+ENV LANG=en_US.UTF-8 \
+    LANGUAGE=en_US:en \
+    LC_ALL=en_US.UTF-8
+
+# Reset /bin/sh to bash instead of dash
+RUN echo "dash dash/sh boolean false" \
+|   debconf-set-selections -v \
+&&  dpkg-reconfigure -f noninteractive dash
+
+ARG BUILDBOT_VERSION
+# Install required python packages, and twisted
+RUN wget https://bootstrap.pypa.io/get-pip.py \
+&&  python get-pip.py --no-cache-dir \
+&&  pip --no-cache-dir install \
+    'twisted[tls]' \
+    buildbot-worker==${BUILDBOT_VERSION}
+
+# Install software for image signing
+RUN curl http://172.16.64.2/~georgem/610-009981-015_SW_PTK_5.3_Client_RevA.tar \
+|   tar -v -x -C /tmp \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/ptkc_sdk/PTKcpsdk-5.3.0-16.x86_64.rpm \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/ptkc_runtime/PTKcprt-5.3.0-15.x86_64.rpm \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/network_hsm_access_provider/PTKnethsm-5.3.0-15.x86_64.rpm \
+&&  echo "ET_HSM_NETCLIENT_SERVERLIST=172.16.64.38" > /etc/default/et_hsm \
+&&  echo "/opt/safenet/protecttoolkit5/ptk/lib" > /etc/ld.so.conf.d/safenet_ptk.conf \
+&&  ldconfig -v \
+&&  rm -rf /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/
+
+# Create buildbot user
+ARG BUILDBOT_UID=1000
+COPY buildbot/ /home/buildbot/
+RUN useradd --comment "Buildbot Server" --home-dir "/home/buildbot" --shell "/bin/bash" --uid ${BUILDBOT_UID} --user-group buildbot \
+&&  chown -v -R buildbot:buildbot "/buildbot" \
+&&  chown -v -R buildbot:buildbot "/home/buildbot"
+
+USER buildbot
+
+CMD ["/home/buildbot/start.sh"]
diff --git a/docker/buildbot-worker-ntel/buildbot/.gitconfig b/docker/buildbot-worker-ntel/buildbot/.gitconfig
new file mode 100644
index 00000000..efd988f4
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/.gitconfig
@@ -0,0 +1,3 @@
+[user]
+	name = BuildBot
+	email = buildbot@novatechweb.com
diff --git a/docker/buildbot-worker-ntel/buildbot/buildbot.tac b/docker/buildbot-worker-ntel/buildbot/buildbot.tac
new file mode 100644
index 00000000..37012ab4
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/buildbot.tac
@@ -0,0 +1,38 @@
+import fnmatch
+import os
+import sys
+
+from twisted.application import service
+from twisted.python.log import FileLogObserver
+from twisted.python.log import ILogObserver
+
+from buildbot_worker.bot import Worker
+
+# setup worker
+basedir = os.path.abspath(os.path.dirname(__file__))
+application = service.Application('buildbot-worker')
+
+
+application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
+# and worker on the same process!
+buildmaster_host = os.environ.get("BUILDBOT_MASTER", 'localhost')
+port = int(os.environ.get("BUILDBOT_WORKER_PORT", 9989))
+workername = os.environ.get("BUILDBOT_WORKER_NAME", 'docker')
+passwd = os.environ.get("BUILDBOT_WORKER_PASS")
+
+# delete the password from the environ so that it is not leaked in the log
+blacklist = os.environ.get("BUILDBOT_ENVIRONMENT_BLACKLIST", "BUILDBOT_WORKER_PASSWORD").split(',')
+for name in list(os.environ.keys()):
+    for toremove in blacklist:
+        if fnmatch.fnmatch(name, toremove):
+            del os.environ[name]
+
+keepalive = 600
+umask = None
+maxdelay = 300
+allow_shutdown = None
+
+s = Worker(buildmaster_host, port, workername, passwd, basedir,
+           keepalive, umask=umask, maxdelay=maxdelay,
+           allow_shutdown=allow_shutdown)
+s.setServiceParent(application)
diff --git a/docker/buildbot-worker-ntel/buildbot/ci-archive.sh b/docker/buildbot-worker-ntel/buildbot/ci-archive.sh
new file mode 100755
index 00000000..52b89632
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/ci-archive.sh
@@ -0,0 +1,40 @@
+#!/bin/bash
+set -x
+MACHINE="$1";shift
+DESTDIR="$1";shift
+TIMESTAMP="$1";shift
+
+# Gather variables from bitbake
+bitbake_vars=$(mktemp)
+bitbake -e 2>&1 > $bitbake_vars
+eval $(grep '^TOPDIR=' $bitbake_vars)
+eval $(grep '^TMPDIR=' $bitbake_vars)
+eval $(grep '^DEPLOY_DIR=' $bitbake_vars)
+eval $(grep '^BUILDHISTORY_DIR=' $bitbake_vars)
+
+# Generate output filename and directory
+rootdir="${MACHINE}.${TIMESTAMP}"
+filename=${rootdir}.tar.gz
+archive="${DESTDIR}/${filename}"
+
+# Gather files to archive into a text file to feed to tar
+files_to_archive=$(mktemp)
+echo "${DEPLOY_DIR}" >> $files_to_archive
+echo "${BUILDHISTORY_DIR}" >> $files_to_archive
+find "${TMPDIR}" -type d -name "temp" >> $files_to_archive
+echo "$*" >> $files_to_archive
+
+mkdir -p "${DESTDIR}"
+
+# Remove leading and trailing slashes from TOPDIR
+TOPDIR=${TOPDIR#/}; TOPDIR=${TOPDIR%/}
+
+# Create the archive, substituting path prefixes of TOPDIR into rootdir
+tar --verbose --create --auto-compress \
+    --transform "s!^${TOPDIR}!${rootdir}!" \
+    --file "${archive}" \
+    --files-from="${files_to_archive}"
+
+# Clean up
+rm $bitbake_vars
+rm $files_to_archive
diff --git a/docker/buildbot-worker-ntel/buildbot/start.sh b/docker/buildbot-worker-ntel/buildbot/start.sh
new file mode 100755
index 00000000..f025e661
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/start.sh
@@ -0,0 +1,18 @@
+#!/bin/sh
+
+SSH_BITS=${SSH_BITS-"2048"}
+SSH_TYPE=${SSH_TYPE-"rsa"}
+SSH_FILE=${SSH_FILE-"$HOME/.ssh/id_rsa"}
+
+BUILDBOT_DATA=${BUILDBOT_DATA-"/buildbot"}
+
+ssh-keygen -q -b ${SSH_BITS} -t ${SSH_TYPE} -N '' -f ${SSH_FILE} 0>&- 1>/dev/null 2>/dev/null
+
+if [ -n "$BUILDBOT_KNOWN_HOSTS_FILE" ] && [ -f "$BUILDBOT_KNOWN_HOSTS_FILE" ]
+then
+    mkdir -p "${HOME}/.ssh"
+    cp -v "$BUILDBOT_KNOWN_HOSTS_FILE" "${HOME}/.ssh/known_hosts"
+fi
+
+ln -v -s -f ${HOME}/buildbot.tac $BUILDBOT_DATA
+exec twistd --nodaemon --logfile=- --pidfile=/tmp/twistd.pid --python=buildbot.tac
diff --git a/roles/buildbot-worker-ntel/defaults/main.yml b/roles/buildbot-worker-ntel/defaults/main.yml
new file mode 100644
index 00000000..3c51ad76
--- /dev/null
+++ b/roles/buildbot-worker-ntel/defaults/main.yml
@@ -0,0 +1,80 @@
+---
+# defaults file for buildbot-worker-ntel
+
+# host containing build assets
+asset_host: 'http://{{ansible_facts.default_ipv4.address}}/'
+
+# address of buildbot master service
+buildbot_master: '{{ansible_facts.default_ipv4.address}}'
+
+# numeric ID of buildbot user
+buildbot_uid: 1000
+
+# numeric version of buildbot service
+buildbot_version: '1.1.2'
+
+# port number for workers to communicate with master
+buildbot_worker_port: 9989
+
+# host path containing configuration files
+config_hostdir: '{{ docker_restore_config_base_dir }}/{{ container_name }}'
+
+# mount path of the cache volume
+cache_path: '/cache'
+
+# name of the cache volume
+cache_volume: '{{ docker_name_prefix }}{{ hostname }}-cache'
+
+# environment passed to the container
+container_env:
+  BUILDBOT_KNOWN_HOSTS_FILE: '{{secrets_path}}/{{secrets_known_hosts}}'
+  BUILDBOT_MASTER: '{{ buildbot_master }}'
+  BUILDBOT_WORKER_PORT: '{{ buildbot_worker_port }}'
+  BUILDBOT_WORKER_NAME: 'worker-ntel'
+  BUILDBOT_WORKER_PASS: 'pass'
+
+# the name of the container being started
+container_name: '{{ docker_name_prefix }}{{ hostname }}'
+
+# volumes mounted within the container
+container_volumes:
+- '{{ data_volume }}:{{ data_path }}:z'
+- '{{ cache_volume }}:{{ cache_path }}:z'
+- '{{ secrets_hostdir }}:{{ secrets_path }}'
+
+# mount path of the data volume
+data_path: '/buildbot'
+
+# name of the data volume
+data_volume: '{{ docker_name_prefix }}{{ hostname }}-data'
+
+# hostname
+hostname: buildbot-worker-ntel
+
+# address of hsm cryptographic service
+hsm_host: '{{ansible_facts.default_ipv4.address}}'
+
+# build arguments of the image
+image_args:
+  BUILDBOT_UID: '{{buildbot_uid}}'
+  BUILDBOT_VERSION: 'v{{buildbot_version}}'
+  PTK_URI: '{{asset_host}}/610-009981-015_SW_PTK_5.3_Client_RevA.tar'
+  PTK_HSM_HOST: '{{hsm_host}}'
+
+# directory of the image source
+image_dir: '{{ docker_projects_dir }}/{{ hostname }}'
+
+# name of the image being built
+image_name: '{{ docker_registry_username }}/{{ hostname }}'
+
+# repository URI of the image source
+image_repo: '{{ buildbot_worker_ntel_image_repo | default("https://github.com/novatechweb/docker-buildbot-worker-ntel.git") }}'
+
+# host path containing secrets
+secrets_hostdir: '{{ config_hostdir }}'
+
+# name of the ssh known_hosts secret
+secrets_known_hosts: 'known_hosts'
+
+# mount path of the secrets volume
+secrets_path: '/run/secrets'
diff --git a/roles/buildbot-worker-ntel/tasks/main.yml b/roles/buildbot-worker-ntel/tasks/main.yml
new file mode 100644
index 00000000..4d17c428
--- /dev/null
+++ b/roles/buildbot-worker-ntel/tasks/main.yml
@@ -0,0 +1,93 @@
+---
+# tasks file for buildbot-worker-ntel
+
+# This will generate passwords for these accounts.
+- assert:
+    that:
+    - buildbot_worker_ntel_password is defined
+
+- name: Create buildbot cache volume
+  docker_volume:
+    name: '{{ cache_volume }}'
+
+- name: Populate buildbot cache volume
+  loop:
+  - /cache
+  - /cache/downloads
+  - /cache/images
+  - /cache/mirrors
+  - /cache/releases
+  - /cache/sstate
+  docker_container:
+    name: '{{ container_name }}-bootstrap'
+    image: 'alpine:latest'
+    volumes:
+    - '{{ cache_volume }}:{{ cache_path }}:z'
+    detach: no
+    cleanup: yes
+    command: /bin/ash -c 
+      "mkdir -p {{item}} &&
+      chown -c -R {{buildbot_uid}}:{{buildbot_uid}} {{item}} &&
+      chmod -v 777 {{item}}"
+
+- name: Create buildbot data volume
+  docker_volume:
+    name: '{{ data_volume }}'
+
+- name: Populate buildbot data volume
+  loop:
+  - /buildbot
+  docker_container:
+    name: '{{ container_name }}-bootstrap'
+    image: 'alpine:latest'
+    volumes:
+    - '{{ data_volume }}:{{ data_path }}:z'
+    detach: no
+    cleanup: yes
+    command: /bin/ash -c 
+      "mkdir -p {{item}} &&
+      chown -c -R {{buildbot_uid}}:{{buildbot_uid}} {{item}}"
+
+- name: Create secrets volume
+  file:
+    path: '{{ secrets_hostdir }}'
+    state: directory
+
+- name: Populate known_hosts secret
+  copy:
+    content: '{{ known_hosts }}'
+    dest: '{{ secrets_hostdir }}/{{ secrets_known_hosts }}'
+
+- name: Checkout image repo
+  git:
+    repo: '{{ image_repo }}'
+    version: master
+    dest: '{{ image_dir }}'
+
+- name: Create buildbot worker image
+  docker_image:
+    name: '{{ image_name }}'
+    tag: '{{ docker_image_tag }}'
+    path: '{{ image_dir }}'
+    buildargs: '{{ image_args }}'
+    force: true
+
+- name: Start buildbot container
+  docker_container:
+    name: '{{ container_name }}'
+    image: '{{ image_name }}:{{ docker_image_tag }}'
+    # networks: '{{ buildbot_worker_ntel_networks }}'
+    volumes: '{{ container_volumes }}'
+    env: '{{ container_env }}'
+    # ports: '{{ buildbot_worker_ntel_port_args }}'
+
+- name: Grab ssh public key
+  command: >
+    docker exec '{{ container_name }}' cat /home/buildbot/.ssh/id_rsa.pub
+  changed_when: false
+  register: output
+
+- name: Add buildbot_worker_ntel host
+  add_host:
+    name: buildbot_worker_ntel
+    pubkey: "{{ output.stdout }}"
diff --git a/roles/buildbot-worker-ntel/vars/main.yml b/roles/buildbot-worker-ntel/vars/main.yml
new file mode 100644
index 00000000..afdab38e
--- /dev/null
+++ b/roles/buildbot-worker-ntel/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for buildbot-worker-ntel
\ No newline at end of file
