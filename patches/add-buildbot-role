Bottom: 96ffaaadc106f13f2d643faf3ea23689ba2814f7
Top:    8392b73e3e5fb691fd3bb88919f19ffbae7e0503
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-08-16 09:17:43 -0500

Add buildbot role and new playbook


---
diff --git a/ansible-playbook/buildbot.yml b/ansible-playbook/buildbot.yml
new file mode 100644
index 00000000..d255a7ec
--- /dev/null
+++ b/ansible-playbook/buildbot.yml
@@ -0,0 +1,14 @@
+---
+
+- name: Install/Setup Docker images and containers on Daedalus
+  hosts: daedalus
+  become: true
+  become_user: root
+  become_method: sudo
+  tags:
+    - buildbot
+    - buildbot-master
+  tasks:
+    - name: Build and start the Buildbot master container
+      import_role:
+        name: buildbot-master
diff --git a/ansible-playbook/group_vars/all/buildbot.yml b/ansible-playbook/group_vars/all/buildbot.yml
new file mode 100644
index 00000000..69a154ff
--- /dev/null
+++ b/ansible-playbook/group_vars/all/buildbot.yml
@@ -0,0 +1,3 @@
+---
+buildbot_version: 1.2.0
+buildbot_worker_port: 9989
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index c306cadf..d476bf91 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -1,5 +1,6 @@
 ---
 # passwords
+buildbot_admin_password:             '{{ lookup("password", playbook_dir + "/credentials/buildbot/admin"                      , length=20) }}'
 buildsystem_database_build_password: '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/readuser") }}'
 buildsystem_database_root_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/database/root"           , length=20) }}'
 buildsystem_ssh_prod_user_password:  '{{ lookup("password", playbook_dir + "/credentials/buildsystem/ssh/prod"                , length=20) }}'
diff --git a/ansible-playbook/group_vars/docker-hosts/networking.yml b/ansible-playbook/group_vars/docker-hosts/networking.yml
index f908c8f0..42db8fdb 100644
--- a/ansible-playbook/group_vars/docker-hosts/networking.yml
+++ b/ansible-playbook/group_vars/docker-hosts/networking.yml
@@ -47,3 +47,9 @@ phpldapadmin_port_args:
 - "{{ phpldapadmin_ip_addr }}:443:443"
 
 phpmyadmin_hostname: phpmyadmin.novatech-llc.com
+
+buildbot_hostname: buildbot.novatech-llc.com
+buildbot_port_args:
+- "{{ buildbot_ip_addr }}:80:8080"
+- "{{ buildbot_ip_addr }}:443:8443"
+- "{{ buildbot_ip_addr }}:9989:9989"
diff --git a/ansible-playbook/host_vars/daedalus.novatech-llc.com/networking.yml b/ansible-playbook/host_vars/daedalus.novatech-llc.com/networking.yml
index c6323198..5e2d2774 100644
--- a/ansible-playbook/host_vars/daedalus.novatech-llc.com/networking.yml
+++ b/ansible-playbook/host_vars/daedalus.novatech-llc.com/networking.yml
@@ -15,3 +15,4 @@ exim4_ip_addr:        172.16.0.107
 openldap_ip_addr:     172.16.0.108
 phpldapadmin_ip_addr: 172.16.0.108
 phpmyadmin_ip_addr:   172.16.0.109
+buildbot_ip_addr:     172.16.0.110
diff --git a/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/networking.yml b/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/networking.yml
index b3e366ce..aa95e93b 100644
--- a/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/networking.yml
+++ b/ansible-playbook/host_vars/testdaedalus.novatech-llc.com/networking.yml
@@ -15,3 +15,4 @@ exim4_ip_addr:        172.16.103.107
 openldap_ip_addr:     172.16.103.108
 phpldapadmin_ip_addr: 172.16.103.108
 phpmyadmin_ip_addr:   172.16.103.109
+buildbot_ip_addr:     172.16.103.110
diff --git a/ansible-playbook/site.yml b/ansible-playbook/site.yml
index 0727917d..ee706b65 100644
--- a/ansible-playbook/site.yml
+++ b/ansible-playbook/site.yml
@@ -90,6 +90,9 @@
     tags:
     - buildsystem_container
 
+- name: Setup the buildbot containers
+  import_playbook: buildbot.yml
+
 - name: Setup the Build System (Test Station) with repo data
   hosts: buildsystem
   remote_user: ansibleremote
diff --git a/docker/buildbot-master/Dockerfile b/docker/buildbot-master/Dockerfile
index 521c8237..923e9542 100644
--- a/docker/buildbot-master/Dockerfile
+++ b/docker/buildbot-master/Dockerfile
@@ -1,14 +1,10 @@
-FROM        buildbot/buildbot-master:v0.9.13
-MAINTAINER  Andrew Cooper <andrew.cooper@novatechweb.com>
+FROM  buildbot/buildbot-master:v1.2.0
+LABEL maintainer="Andrew Cooper <andrew.cooper@novatechweb.com>"
 
-WORKDIR /buildbot
-
-ARG BUILDBOT_UID=1000
 ARG BUILDBOT_TIMEZONE="Etc/UTC"
 
 RUN apk --no-cache add \
         openssh \
-        tini \
 &&  rm /etc/localtime \
 &&  ln -sf /usr/share/zoneinfo/${BUILDBOT_TIMEZONE} /etc/localtime \
 &&  echo "${BUILDBOT_TIMEZONE}" > /etc/timezone
@@ -18,12 +14,12 @@ RUN pip --no-cache-dir install \
     'attrs'
 
 # Create buildbot user
+ARG BUILDBOT_DATA="/buildbot"
 ARG BUILDBOT_UID=1000
+
+WORKDIR ${BUILDBOT_DATA}
 COPY buildbot/ /home/buildbot/
 RUN adduser -h "/home/buildbot" -s "/bin/sh" -D -u ${BUILDBOT_UID} buildbot \
-&&  chown -v -R buildbot:buildbot "/buildbot" \
+&&  chown -v -R buildbot:buildbot "${BUILDBOT_DATA}" \
 &&  chown -v -R buildbot:buildbot "/home/buildbot"
-
 USER buildbot
-ENTRYPOINT ["/sbin/tini", "--"]
-CMD ["/home/buildbot/start.sh"]
diff --git a/docker/buildbot-master/buildbot/start.sh b/docker/buildbot-master/buildbot/start.sh
deleted file mode 100755
index 63b884d4..00000000
--- a/docker/buildbot-master/buildbot/start.sh
+++ /dev/null
@@ -1,10 +0,0 @@
-#!/bin/sh
-
-mkdir -p $HOME/.ssh
-cp -R /run/secrets/ssh/* $HOME/.ssh
-chmod -R 600 $HOME/.ssh
-
-ln -v -s -f /home/buildbot/buildbot.tac /home/buildbot/master.cfg /home/buildbot/*.py /buildbot
-
-/usr/bin/buildbot --verbose upgrade-master
-exec twistd --nodaemon --logfile=- --pidfile=/tmp/twistd.pid --python=buildbot.tac
diff --git a/roles/buildbot-master/defaults/main.yml b/roles/buildbot-master/defaults/main.yml
new file mode 100644
index 00000000..412ac9a5
--- /dev/null
+++ b/roles/buildbot-master/defaults/main.yml
@@ -0,0 +1,99 @@
+---
+# defaults file for buildbot
+
+# backup host directory
+backup_hostdir: '{{ docker_backup_dir }}/buildbot'
+
+# numeric ID of buildbot user
+buildbot_uid: 1000
+
+# numeric version of buildbot service
+buildbot_version: 'master'
+
+# port number for workers to communicate with master
+buildbot_worker_port: 9989
+
+# port number for unencrypted web access
+buildbot_http_port: 8080
+
+# port number for encrypted web access
+buildbot_https_port: 8443
+
+# The hostname passed as an envirnment variable into the container
+buildbot_ip_addr: '127.0.0.1'
+buildbot_hostname: buildbot.example.com
+buildbot_port_args:
+  - '{{buildbot_http_port}}'
+  - '{{buildbot_https_port}}'
+  - '{{buildbot_worker_port}}'
+
+# host path containing configuration files
+config_hostdir: '{{ docker_restore_config_base_dir }}/{{ container_name }}'
+
+# environment passed to the container
+container_env:
+  BUILDBOT_DATABASE: 'sqlite:///{{ data_path }}/state.sqlite'
+  BUILDBOT_WEB_PORT: '{{buildbot_http_port}}'
+  BUILDBOT_WEB_URL: 'http://{{ buildbot_hostname }}/'
+  BUILDBOT_WORKER_PORT: '{{buildbot_worker_port}}'
+  BUILDBOT_WORKER_NTEL: 'worker-ntel'
+  BUILDBOT_WORKER_NTEL_PASS: '{{ buildbot_worker_ntel_password }}'
+  BUILDBOT_WORKER_PTXDIST: 'worker-ptxdist'
+  BUILDBOT_WORKER_PTXDIST_PASS: '{{ buildbot_worker_ptxdist_password }}'
+
+# hostname
+container_hostname: '{{ buildbot_hostname }}'
+
+# the name of the container being started
+container_name: '{{ docker_name_prefix }}buildbot'
+
+# networks of the container
+container_networks:
+  - name: '{{ docker_network_frontend }}'
+    aliases:
+      - '{{ container_hostname }}'
+
+# exposed ports of the container
+container_port_args: '{{ buildbot_port_args }}'
+
+# volumes mounted within the container
+container_volumes:
+  - '{{ data_volume }}:{{ data_path }}:z'
+  - '{{ config_hostdir }}/buildbot.tac:{{ data_path }}/buildbot.tac'
+  - '{{ config_hostdir }}/master.cfg:{{ data_path }}/master.cfg'
+  - '{{ config_hostdir }}/openembedded.py:{{ data_path }}/openembedded.py'
+  - '{{ config_hostdir }}/ptxdist.py:{{ data_path }}/ptxdist.py'
+
+# mount path of the data volume
+data_path: '/buildbot'
+
+# name of the data volume
+data_volume: '{{ docker_name_prefix }}buildbot_DV'
+
+# build arguments of the image
+image_args:
+  BUILDBOT_DATA: '{{ data_path }}'
+  BUILDBOT_TIMEZONE: 'America/Chicago'
+  BUILDBOT_UID: '{{ buildbot_uid }}'
+  BUILDBOT_VERSION: 'v{{ buildbot_version }}'
+
+# directory of the image source
+image_dir: '{{ docker_projects_dir }}/buildbot-master'
+
+# name of the image being built
+image_name: '{{ docker_registry_username }}/buildbot'
+
+# repository URI of the image source
+image_repo: '{{ buildbot_image_repo | default("https://github.com/novatechweb/docker-buildbot-master.git") }}'
+
+# restoration host directory
+restore_hostdir: '{{ bacula_dest }}{{ backup_hostdir }}'
+
+# host path containing secrets
+secrets_hostdir: '{{ config_hostdir }}'
+
+# name of the ssh known_hosts secret
+secrets_known_hosts: 'known_hosts'
+
+# mount path of the secrets volume
+secrets_path: '/run/secrets'
diff --git a/docker/buildbot-master/buildbot/master.cfg b/roles/buildbot-master/files/master.cfg
similarity index 73%
rename from docker/buildbot-master/buildbot/master.cfg
rename to roles/buildbot-master/files/master.cfg
index 658d5fb1..9784ff82 100644
--- a/docker/buildbot-master/buildbot/master.cfg
+++ b/roles/buildbot-master/files/master.cfg
@@ -5,9 +5,9 @@
 # 'master.cfg' in your buildmaster's base directory.
 
 import os
-from buildbot.plugins import steps,util
+from buildbot.plugins import steps, util
 
-os.environ['LONG_RUN_TIMEOUT']='14400'
+os.environ['LONG_RUN_TIMEOUT'] = '14400'
 
 # This is the dictionary that the buildmaster pays attention to. We also use
 # a shorter alias to save typing.
@@ -20,9 +20,9 @@ c['change_source'] = []
 # Defines the TCP port to listen on for connections from workers.
 # This must match the value configured into the buildworkers (with their
 # --master option)
-c['protocols'] = {"pb": {"port": os.getenv('BUILDBOT_WORKER_PORT',9989)}}
+c['protocols'] = {"pb": {"port": os.getenv('BUILDBOT_WORKER_PORT', 9989)}}
 
-####### STATUS TARGETS
+# STATUS TARGETS
 
 # 'status' is a list of Status Targets. The results of each build will be
 # pushed to these targets. buildbot/status/*.py has a variety to choose from,
@@ -36,40 +36,41 @@ irc = reporters.IRC(host="172.16.64.3",
                     channels=["#orion"])
 c['services'].append(irc)
 
-mn = reporters.MailNotifier(fromaddr="buildbot@novatechweb.com",
-                  sendToInterestedUsers=True,
-                  extraRecipients=["andrew.cooper@novatechweb.com"],
-                  useTls=True, relayhost="relay.dnsexit.com", smtpPort=26,
-                  smtpUser="Dean.cox", smtpPassword="no5156")
+mn = reporters.MailNotifier(
+    fromaddr="buildbot@novatechweb.com",
+    sendToInterestedUsers=True,
+    extraRecipients=["andrew.cooper@novatechweb.com"],
+    useTls=True, relayhost="relay.dnsexit.com", smtpPort=26,
+    smtpUser="Dean.cox", smtpPassword="no5156")
 c['services'].append(mn)
 
-####### WEB SERVER
+# WEB SERVER
 c['www'] = {
-    'port':os.getenv('BUILDBOT_WEB_PORT',8010),
+    'port': os.getenv('BUILDBOT_WEB_PORT', 8010),
     'plugins': {
         'waterfall_view': True,
         'console_view': True,
         'grid_view': True,
-        },
-    'auth':util.UserPasswordAuth([("georgem","tgbyhn")]),
-    'authz':util.Authz(
+    },
+    'auth': util.UserPasswordAuth([("georgem", "tgbyhn")]),
+    'authz': util.Authz(
         allowRules=[
             util.AnyControlEndpointMatcher(role="admins"),
-            ],
+        ],
         roleMatchers=[
             util.RolesFromUsername(roles=['admins'], usernames=["georgem"]),
-            ],
-        ),
-    }
+        ],
+    ),
+}
 
-####### PROJECT IDENTITY
+# PROJECT IDENTITY
 
 # the 'title' string will appear at the top of this buildbot
 # installation's html.WebStatus home page (linked to the
 # 'titleURL') and is embedded in the title of the waterfall HTML page.
 
-c['title'] = "workspace"
-c['titleURL'] = "http://wiki"
+c['title'] = "NovaTech CI"
+c['titleURL'] = "http://git.novatech-llc.com/"
 
 # the 'buildbotURL' string should point to the location where the buildbot's
 # internal web server (usually the html.WebStatus page) is visible. This
@@ -77,17 +78,17 @@ c['titleURL'] = "http://wiki"
 # with an externally-visible host name which the buildbot cannot figure out
 # without some help.
 
-c['buildbotURL'] = os.getenv('BUILDBOT_WEB_URL',"http://localhost:%s/"%(c['www']['port']))
+c['buildbotURL'] = os.getenv('BUILDBOT_WEB_URL', "http://localhost:%s/" % (c['www']['port']))
 
-####### DB URL
+# DB URL
 
 c['db'] = {
     # This specifies what database buildbot uses to store its state.  You can leave
     # this at its default for all but the largest installations.
-    'db_url' : os.getenv('BUILDBOT_DATABASE',"sqlite://state.sqlite"),
+    'db_url': os.getenv('BUILDBOT_DATABASE', "sqlite://state.sqlite"),
 }
 
-####### Extra Options
+# Extra Options
 c['buildbotNetUsageData'] = 'basic'
 
 import openembedded
diff --git a/docker/buildbot-master/buildbot/openembedded.py b/roles/buildbot-master/files/openembedded.py
similarity index 99%
rename from docker/buildbot-master/buildbot/openembedded.py
rename to roles/buildbot-master/files/openembedded.py
index 5d2ba3d4..208948b2 100755
--- a/docker/buildbot-master/buildbot/openembedded.py
+++ b/roles/buildbot-master/files/openembedded.py
@@ -309,7 +309,7 @@ class BitBakeFactory(util.BuildFactory):
             retry=(360, 5)))
         self.addStep(steps.ShellCommand(
             command=["./oebb.sh", "config", util.Property('machine')]
-            ))
+        ))
         self.addStep(BitBakeConf(auto_conf, conf_file='auto.conf'))
         self.addStep(BitBakeConf(test_conf, conf_file='test.conf'))
         self.addStep(BitBakeConf(release_conf, conf_file='release.conf'))
diff --git a/docker/buildbot-master/buildbot/ptxdist.py b/roles/buildbot-master/files/ptxdist.py
similarity index 98%
rename from docker/buildbot-master/buildbot/ptxdist.py
rename to roles/buildbot-master/files/ptxdist.py
index 85020678..d6d84f2e 100644
--- a/docker/buildbot-master/buildbot/ptxdist.py
+++ b/roles/buildbot-master/files/ptxdist.py
@@ -170,7 +170,7 @@ class PTXDistFactory(util.BuildFactory):
         self.addStep(PTXDistBuild(command=["ptxdist", "make", "ipkg-push"]))
         self.addStep(PTXDistBuild(command=["./scripts/ipkg-header"]))
 
-### current_armeb_xscale ###
+# current_armeb_xscale #
 current_armeb_xscale_factory = PTXDistFactory(
     worker_ptxdist_repourl, worker_ptxdist_branch, 'armeb-xscale')
 # check out the source
@@ -199,7 +199,7 @@ current_armeb_xscale_factory.addStep(steps.ShellCommand(
 # current_armeb_xscale_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_armeb_xscale']))
 # current_armeb_xscale_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_armeb_xscale']))
 
-### local_tests_armeb_xscale ###
+# local_tests_armeb_xscale #
 local_tests_armeb_xscale_factory = util.BuildFactory()
 local_tests_armeb_xscale_factory.addStep(
     steps.ShellCommand(command=["uptime"]))
@@ -208,7 +208,7 @@ local_tests_armeb_xscale_factory.addStep(
 local_tests_armeb_xscale_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_armeb_xscale ###
+# remote_tests_armeb_xscale #
 remote_tests_armeb_xscale_factory = util.BuildFactory()
 # check out the source
 remote_tests_armeb_xscale_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
@@ -216,7 +216,7 @@ remote_tests_armeb_xscale_factory.addStep(steps.Git(repourl=acceptance_test_repo
 remote_tests_armeb_xscale_factory.addStep(steps.ShellCommand(
     command=["py.test", "-s", "--orion=172.16.64.150", "--hub-address=172.16.64.25:4444", "--browser=chrome"], workdir='build/WebUI'))
 
-### current_i686 ###
+# current_i686 #
 current_i686_factory = PTXDistFactory(
     worker_ptxdist_repourl, worker_ptxdist_branch, 'i686')
 # check out the source
@@ -232,7 +232,7 @@ current_i686_factory.addStep(steps.ShellCommand(
 # current_i686_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_i686']))
 # current_i686_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_i686']))
 
-### current_am335x ###
+# current_am335x #
 current_am335x_factory = PTXDistFactory(
     worker_ptxdist_repourl, worker_ptxdist_branch, 'am335x')
 # check out the source
@@ -244,7 +244,7 @@ current_am335x_factory.addStep(PTXDistBuild(command=["ptxdist", "images"]))
 # current_am335x_factory.addStep(trigger.Trigger(schedulerNames=['local_tests_am335x']))
 # current_am335x_factory.addStep(trigger.Trigger(schedulerNames=['remote_tests_am335x']))
 
-### upgrade_i686 ###
+# upgrade_i686 #
 upgrade_i686_factory = util.BuildFactory()
 upgrade_i686_factory.addStep(steps.ShellCommand(command=[
                              "upgrade", "list", "172.16.64.3/~georgem/ipkg-repository/OrionLX-i686-glibc/dists"]))
@@ -253,21 +253,21 @@ upgrade_i686_factory.addStep(steps.ShellCommand(command=["opkg", "upgrade"]))
 upgrade_i686_factory.addStep(steps.ShellCommand(
     command=["systemctl", "start", "delayed-reboot.timer"]))
 
-### local_tests_i686 ###
+# local_tests_i686 #
 local_tests_i686_factory = util.BuildFactory()
 local_tests_i686_factory.addStep(steps.ShellCommand(command=["uptime"]))
 local_tests_i686_factory.addStep(steps.ShellCommand(command=["uname", "-a"]))
 local_tests_i686_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_i686 ###
+# remote_tests_i686 #
 remote_tests_i686_factory = util.BuildFactory()
 remote_tests_i686_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
                                             mode="incremental", method="clobber", locks=[git_lock.access('exclusive')], retry=(120, 5)))
 remote_tests_i686_factory.addStep(steps.ShellCommand(command=[
                                   "py.test", "-s", "--orion=172.16.65.100", "--hub-address=172.16.64.25:4444", "--browser=chrome"], workdir='build/WebUI'))
 
-### upgrade_am335x ###
+# upgrade_am335x #
 upgrade_am335x_factory = util.BuildFactory()
 upgrade_am335x_factory.addStep(steps.ShellCommand(command=[
                                "upgrade", "list", "172.16.64.3/~georgem/ipkg-repository/OrionLX-am335x-glibc/dists"]))
@@ -276,14 +276,14 @@ upgrade_am335x_factory.addStep(steps.ShellCommand(command=["opkg", "upgrade"]))
 upgrade_am335x_factory.addStep(steps.ShellCommand(
     command=["systemctl", "start", "delayed-reboot.timer"]))
 
-### local_tests_am335x ###
+# local_tests_am335x #
 local_tests_am335x_factory = util.BuildFactory()
 local_tests_am335x_factory.addStep(steps.ShellCommand(command=["uptime"]))
 local_tests_am335x_factory.addStep(steps.ShellCommand(command=["uname", "-a"]))
 local_tests_am335x_factory.addStep(steps.ShellCommand(
     command=["py.test"], workdir="/usr/local/OrionPythonTests"))
 
-### remote_tests_am335x ###
+# remote_tests_am335x #
 remote_tests_am335x_factory = util.BuildFactory()
 remote_tests_am335x_factory.addStep(steps.Git(repourl=acceptance_test_repourl, alwaysUseLatest=True,
                                               mode="incremental", method="clobber", locks=[git_lock.access('exclusive')], retry=(120, 5)))
diff --git a/roles/buildbot-master/tasks/main.yml b/roles/buildbot-master/tasks/main.yml
new file mode 100644
index 00000000..60a54247
--- /dev/null
+++ b/roles/buildbot-master/tasks/main.yml
@@ -0,0 +1,63 @@
+---
+# tasks file for buildbot
+
+# This will generate passwords for these accounts.
+- assert:
+    that:
+    - buildbot_admin_password is defined
+
+- name: Create buildbot data volume
+  docker_volume:
+    name: '{{ data_volume }}'
+
+- name: Populate config files
+  copy:
+    src: "{{ item }}"
+    dest: "{{ config_hostdir }}/{{ item }}"
+    group: '{{ buildbot_uid }}'
+    owner: '{{ buildbot_uid }}'
+  loop:
+    - buildbot.tac
+    - master.cfg
+    - openembedded.py
+    - ptxdist.py
+
+- name: Populate config templates
+  copy:
+    src: "{{ item }}"
+    dest: "{{ config_hostdir }}/{{ item }}"
+    group: '{{ buildbot_uid }}'
+    owner: '{{ buildbot_uid }}'
+  loop:
+    - buildbot.tac.j2
+
+- name: Checkout image repo
+  git:
+    repo: '{{ image_repo }}'
+    version: master
+    dest: '{{ image_dir }}'
+
+- name: Create buildbot master image
+  docker_image:
+    name: '{{ image_name }}'
+    tag: '{{ docker_image_tag }}'
+    path: '{{ image_dir }}'
+    buildargs: '{{ image_args }}'
+    force: true
+
+- name: Start buildbot container
+  docker_container:
+    name: '{{ container_name }}'
+    hostname: '{{ container_hostname }}'
+    image: '{{ image_name }}:{{ docker_image_tag }}'
+    networks: '{{ container_networks }}'
+    volumes: '{{ container_volumes }}'
+    env: '{{ container_env }}'
+    ports: '{{ container_port_args }}'
+    state: started
+
+- name: Add buildbot_master host
+  add_host:
+    name: '{{ container_hostname }}'
+    pubkey: "{{ output.stdout }}"
+    ip_addr: "{{ buildbot_ip_addr }}"
diff --git a/docker/buildbot-master/buildbot/buildbot.tac b/roles/buildbot-master/templates/buildbot.tac.j2
similarity index 81%
rename from docker/buildbot-master/buildbot/buildbot.tac
rename to roles/buildbot-master/templates/buildbot.tac.j2
index c3b2e879..23824119 100644
--- a/docker/buildbot-master/buildbot/buildbot.tac
+++ b/roles/buildbot-master/templates/buildbot.tac.j2
@@ -6,13 +6,13 @@ from twisted.python.log import ILogObserver
 
 from buildbot.master import BuildMaster
 
-basedir = '/buildbot'
+basedir = '{{ data_path }}'
 configfile = 'master.cfg'
 
 # note: this line is matched against to check that this is a buildmaster
 # directory; do not edit it.
 application = service.Application('buildmaster')
-# application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
+application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
 
 m = BuildMaster(basedir, configfile, umask=None)
 m.setServiceParent(application)
diff --git a/roles/buildbot-master/vars/main.yml b/roles/buildbot-master/vars/main.yml
new file mode 100644
index 00000000..eed3963e
--- /dev/null
+++ b/roles/buildbot-master/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for buildbot
