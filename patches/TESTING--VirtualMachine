Bottom: 7d186662a3ecdcf44a77317ec80f8bb3964b4f3f
Top:    f5278a91d0f82d38cc6d8b286a66d5a37231adf9
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-05-17 16:47:42 -0500

Add vmdaedalus inventory

Run ansible provisioning through Docker

Add 'restore' tag to tasks. By tagging the tasks, restoration can be skipped using --skip-tags
option to ansible-playbook. This is useful for testing ansible plays
on systems without tapedrives or established backups.

Add Vagrant configuration

Set docker container restart_policy to no for testing purposes

Add bacula-restores task to symlink backup files to bacula restore folder

Comment out restore file permission tasks:
- can't set permissions on symlinks

---
diff --git a/.gitignore b/.gitignore
index e69de29..c1a0118 100644
--- a/.gitignore
+++ b/.gitignore
@@ -0,0 +1 @@
+/.vagrant/
diff --git a/Vagrantfile b/Vagrantfile
new file mode 100644
index 0000000..af48105
--- /dev/null
+++ b/Vagrantfile
@@ -0,0 +1,31 @@
+Vagrant.configure("2") do |config|
+
+    config.vm.define "vmdaedalus.novatech-llc.com", primary: true do |main|
+        main.vm.box = "daedalus"
+        main.vm.box_url = "vmdaedalus/vmdaedalus-virtualbox.box"
+        main.vm.hostname = "vmdaedalus.novatech-llc.com"
+        main.vm.provider "virtualbox" do |vb|
+            vb.name = "vmdaedalus"
+            vb.memory = 4096
+            vb.cpus = 4
+        end
+    #    config.vm.network "public_network", ip: "192.168.0.100", netmask:"255.255.0.0", bridge: "enp0s31f6"
+        main.vm.network "private_network", ip: "192.168.0.100", netmask:"255.255.0.0"
+        main.vm.synced_folder "/mnt/vm/bacula-restores",
+            "/mnt/bacula-restores",
+            id: "bacula-restores",
+            owner: "root",
+            group: "root",
+            mount_options: ["ro"]
+    end
+
+    config.vm.define "buildbot-worker.novatech-llc.com" do |worker|
+        worker.vm.box = "centos/atomic-host"
+        worker.vm.hostname = "buildbot-worker.novatech-llc.com"
+        worker.vm.provider "virtualbox" do |vb|
+            vb.name = "bbworker"
+        end
+
+    end
+
+end
diff --git a/ansible-playbook/host_vars/vmdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml b/ansible-playbook/host_vars/vmdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
new file mode 100644
index 0000000..53b96f8
--- /dev/null
+++ b/ansible-playbook/host_vars/vmdaedalus.novatech-llc.com/docker-container_addr_map-and-container_port_map.yml
@@ -0,0 +1,33 @@
+---
+
+container_addr_map:
+  svn:
+    ip_addr: 192.168.0.101
+    hostname: svn.novatech-llc.com
+  git:
+    ip_addr: 192.168.0.102
+    hostname: git.novatech-llc.com
+  wiki:
+    ip_addr: 192.168.0.103
+    hostname: wiki.novatech-llc.com
+  mantisbt:
+    ip_addr: 192.168.0.104
+    hostname: mantis.novatech-llc.com
+  build:
+    ip_addr: 192.168.0.105
+    hostname: buildsystem.novatech-llc.com
+  testssh:
+    ip_addr: 192.168.0.106
+    hostname: testssh.novatech-llc.com
+  exim4:
+    ip_addr: 192.168.0.107
+    hostname: mail.novatech-llc.com
+  ldap:
+    ip_addr: 192.168.0.108
+    hostname: ldap.novatech-llc.com
+  phpldapadmin:
+    ip_addr: 192.168.0.108
+    hostname: ldap.novatech-llc.com
+  phpmyadmin:
+    ip_addr: 192.168.0.109
+    hostname: phpmyadmin.novatech-llc.com
diff --git a/ansible-playbook/site.yml b/ansible-playbook/site.yml
index 673e61b..4b2bc7f 100644
--- a/ansible-playbook/site.yml
+++ b/ansible-playbook/site.yml
@@ -1,6 +1,18 @@
 ---
 # This playbook deploys the whole application stack in this site.
 
+- name: Dump Variables
+  hosts: all
+  tags:
+    - debugging
+  tasks:
+  - template:
+      src: templates/dump_variables
+      dest: /tmp/ansible_variables
+  - fetch:
+      src: /tmp/ansible_variables
+      dest: "{{inventory_hostname}}_ansible_variables"
+
 - name: Bacula
   hosts: bacula
   remote_user: ansibleremote
@@ -25,6 +37,10 @@
   become_user: root
   become_method: sudo
   roles:
+  - name: Run bacula-restores symlinks
+    role: bacula-restores
+    tags:
+    - bacula_restores
   - name: Run common Docker tasks
     role: docker-common
     tags:
diff --git a/ansible-playbook/templates/dump_variables b/ansible-playbook/templates/dump_variables
new file mode 100644
index 0000000..3c11ab9
--- /dev/null
+++ b/ansible-playbook/templates/dump_variables
@@ -0,0 +1,7 @@
+HOSTVARS (ANSIBLE GATHERED, group_vars, host_vars) :
+
+{{ hostvars[inventory_hostname] | to_yaml }}
+
+PLAYBOOK VARS:
+
+{{ vars | to_yaml }}
diff --git a/ansible-runner/Dockerfile b/ansible-runner/Dockerfile
new file mode 100644
index 0000000..288b5ff
--- /dev/null
+++ b/ansible-runner/Dockerfile
@@ -0,0 +1,40 @@
+FROM ubuntu:latest
+
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive apt-get install \
+    -y \
+    curl \
+    git \
+    openssh-client \
+    python \
+    python-svn \
+    rsync \
+    sshpass \
+    subversion \
+    vim
+    
+# Install pip
+RUN curl -O https://bootstrap.pypa.io/get-pip.py \
+&&  python get-pip.py --no-cache-dir
+
+RUN pip --no-cache-dir install \
+    'ansible'
+
+ARG UID=1000
+ARG GID=1000
+
+RUN groupadd \
+    --gid ${GID} \
+    --system \
+    ansible \
+&&  useradd \
+    --comment "Ansible User" \
+    --create-home \
+    --gid ${GID} \
+    --uid ${UID} \
+    --system \
+    ansible
+
+WORKDIR /ansible
+VOLUME /ansible
+USER ansible
diff --git a/ansible-runner/build.sh b/ansible-runner/build.sh
new file mode 100755
index 0000000..96e80c6
--- /dev/null
+++ b/ansible-runner/build.sh
@@ -0,0 +1,12 @@
+#!/bin/bash
+
+PWD=$(readlink -f $(dirname $0))
+CONTEXT=$(readlink -f "$PWD/..")
+cd $PWD
+
+docker build \
+--build-arg UID="$(id -u)" \
+--build-arg GID="$(id -g)" \
+--pull \
+--tag "daedalus-provisioner:latest" \
+"$PWD"
diff --git a/ansible-runner/run.sh b/ansible-runner/run.sh
new file mode 100755
index 0000000..f80680f
--- /dev/null
+++ b/ansible-runner/run.sh
@@ -0,0 +1,19 @@
+#!/bin/bash
+
+PWD=$(readlink -f $(dirname $0))
+CONTEXT=$(readlink -f "$PWD/..")
+cd $PWD
+
+exec docker run \
+--env ANSIBLE_ROLES_PATH=/ansible \
+--init \
+--interactive \
+--mount type=bind,src="$CONTEXT",dst="/ansible" \
+--mount type=bind,src="$HOME/.ssh",dst="/home/ansible/.ssh" \
+--network=host \
+--rm \
+--tty \
+--user ansible \
+--workdir "/ansible/ansible-playbook" \
+daedalus-provisioner \
+"$@"
diff --git a/roles/bacula-catalog/tasks/main.yml b/roles/bacula-catalog/tasks/main.yml
index 2d22328..3deb3fa 100644
--- a/roles/bacula-catalog/tasks/main.yml
+++ b/roles/bacula-catalog/tasks/main.yml
@@ -4,3 +4,4 @@
   register: filecount
 - include_tasks: restore-catalog-with-bsr.yml
   when: filecount.stdout_lines[1] == "0"
+  tags: restore
diff --git a/roles/bacula-restores/README.md b/roles/bacula-restores/README.md
new file mode 100644
index 0000000..225dd44
--- /dev/null
+++ b/roles/bacula-restores/README.md
@@ -0,0 +1,38 @@
+Role Name
+=========
+
+A brief description of the role goes here.
+
+Requirements
+------------
+
+Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.
+
+Role Variables
+--------------
+
+A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.
+
+Dependencies
+------------
+
+A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.
+
+Example Playbook
+----------------
+
+Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:
+
+    - hosts: servers
+      roles:
+         - { role: username.rolename, x: 42 }
+
+License
+-------
+
+BSD
+
+Author Information
+------------------
+
+An optional section for the role authors to include contact information, or a website (HTML is not allowed).
diff --git a/roles/bacula-restores/defaults/main.yml b/roles/bacula-restores/defaults/main.yml
new file mode 100644
index 0000000..540bc12
--- /dev/null
+++ b/roles/bacula-restores/defaults/main.yml
@@ -0,0 +1,2 @@
+---
+# defaults file for bacula-restores
\ No newline at end of file
diff --git a/roles/bacula-restores/handlers/main.yml b/roles/bacula-restores/handlers/main.yml
new file mode 100644
index 0000000..66e6f98
--- /dev/null
+++ b/roles/bacula-restores/handlers/main.yml
@@ -0,0 +1,2 @@
+---
+# handlers file for bacula-restores
\ No newline at end of file
diff --git a/roles/bacula-restores/meta/main.yml b/roles/bacula-restores/meta/main.yml
new file mode 100644
index 0000000..7223799
--- /dev/null
+++ b/roles/bacula-restores/meta/main.yml
@@ -0,0 +1,57 @@
+galaxy_info:
+  author: your name
+  description: your description
+  company: your company (optional)
+
+  # If the issue tracker for your role is not on github, uncomment the
+  # next line and provide a value
+  # issue_tracker_url: http://example.com/issue/tracker
+
+  # Some suggested licenses:
+  # - BSD (default)
+  # - MIT
+  # - GPLv2
+  # - GPLv3
+  # - Apache
+  # - CC-BY
+  license: license (GPLv2, CC-BY, etc)
+
+  min_ansible_version: 1.2
+
+  # If this a Container Enabled role, provide the minimum Ansible Container version.
+  # min_ansible_container_version:
+
+  # Optionally specify the branch Galaxy will use when accessing the GitHub
+  # repo for this role. During role install, if no tags are available,
+  # Galaxy will use this branch. During import Galaxy will access files on
+  # this branch. If Travis integration is configured, only notifications for this
+  # branch will be accepted. Otherwise, in all cases, the repo's default branch
+  # (usually master) will be used.
+  #github_branch:
+
+  #
+  # platforms is a list of platforms, and each platform has a name and a list of versions.
+  #
+  # platforms:
+  # - name: Fedora
+  #   versions:
+  #   - all
+  #   - 25
+  # - name: SomePlatform
+  #   versions:
+  #   - all
+  #   - 1.0
+  #   - 7
+  #   - 99.99
+
+  galaxy_tags: []
+    # List tags for your role here, one per line. A tag is a keyword that describes
+    # and categorizes the role. Users find roles by searching for tags. Be sure to
+    # remove the '[]' above, if you add tags to this list.
+    #
+    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
+    #       Maximum 20 tags per role.
+
+dependencies: []
+  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
+  # if you add dependencies to this list.
\ No newline at end of file
diff --git a/roles/bacula-restores/tasks/main.yml b/roles/bacula-restores/tasks/main.yml
new file mode 100644
index 0000000..560f5ba
--- /dev/null
+++ b/roles/bacula-restores/tasks/main.yml
@@ -0,0 +1,26 @@
+---
+# tasks file for bacula-restores
+
+- name: List bacula-restores
+  find:
+    paths: /mnt/bacula-restores
+    file_type: file
+    recurse: yes
+  register: bacula_restores_list
+
+- name: Create bacula-restores symlinks
+  file:
+    path: '{{ item.path | replace("/mnt/bacula-restores","/tmp/bacula-restores") | dirname }}'
+    state: directory
+    force: yes
+    mode: 0777
+  with_items: '{{ bacula_restores_list.files }}'
+
+- name: Create bacula-restores directories
+  file:
+    src: '{{ item.path }}'
+    dest: '{{ item.path | replace("/mnt/bacula-restores","/tmp/bacula-restores") }}'
+    state: link
+    force: yes
+    mode: '{{ item.mode }}'
+  with_items: '{{ bacula_restores_list.files }}'
diff --git a/roles/bacula-restores/tests/inventory b/roles/bacula-restores/tests/inventory
new file mode 100644
index 0000000..878877b
--- /dev/null
+++ b/roles/bacula-restores/tests/inventory
@@ -0,0 +1,2 @@
+localhost
+
diff --git a/roles/bacula-restores/tests/test.yml b/roles/bacula-restores/tests/test.yml
new file mode 100644
index 0000000..3b1d784
--- /dev/null
+++ b/roles/bacula-restores/tests/test.yml
@@ -0,0 +1,5 @@
+---
+- hosts: localhost
+  remote_user: root
+  roles:
+    - bacula-restores
\ No newline at end of file
diff --git a/roles/bacula-restores/vars/main.yml b/roles/bacula-restores/vars/main.yml
new file mode 100644
index 0000000..393c567
--- /dev/null
+++ b/roles/bacula-restores/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for bacula-restores
\ No newline at end of file
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_database.yml b/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
index 1ab1133..6bd47d7 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_database.yml
@@ -27,6 +27,6 @@
     name: "{{ name_prefix }}TestStation_database_server"
     ports: "{{ container_addr_map.build.ip_addr }}:3306:3306"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: no
     volumes_from:
       - "{{ name_prefix }}TestStation_database_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_http.yml b/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
index 883d3f4..d07fff6 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_http.yml
@@ -16,7 +16,7 @@
     name: "{{ name_prefix }}TestStation_http_server"
     ports: "{{ container_addr_map.build.ip_addr }}:80:80"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: no
     volumes_from:
       - "{{ name_prefix }}TestStation_http_data_buildsystem"
 #      - "{{ name_prefix }}TestStation_http_data_ipkg"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml b/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
index 1e3333b..1113824 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_ssh.yml
@@ -21,7 +21,7 @@
     links: "{{ name_prefix }}TestStation_database_server:test_station_mysql_server"
     name: "{{ name_prefix }}TestStation_ssh_server"
     ports: "{{ container_addr_map.build.ip_addr }}:22:22"
-    restart_policy: always
+    restart_policy: no
     state: "{{ container_start_state_nondata }}"
     volumes_from:
       - "{{ name_prefix }}TestStation_database_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml b/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
index 6f95f9e..87cb714 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_ssh_prod.yml
@@ -33,4 +33,4 @@
     name: "{{ name_prefix }}TestStation_ssh_server_manualtest"
     ports: "{{ container_addr_map.testssh.ip_addr }}:22:22"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: no
diff --git a/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml b/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
index a6498fc..c036e3f 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/server_tftp.yml
@@ -15,6 +15,6 @@
     name: "{{ name_prefix }}TestStation_tftp_server"
     ports: "{{ container_addr_map.build.ip_addr }}:69:69/udp"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: no
     volumes_from:
       - "{{ name_prefix }}TestStation_tftp_data"
diff --git a/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml b/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
index 9424667..b692d16 100644
--- a/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
+++ b/roles/docker-buildsystem/tasks/docker_containers/service_cron.yml
@@ -14,6 +14,6 @@
     image: "{{ name_prefix }}teststation_cron_image"
     name: "{{ name_prefix }}TestStation_cron_service"
     state: "{{ container_start_state_nondata }}"
-    restart_policy: always
+    restart_policy: no
     volumes_from:
       - "{{ name_prefix }}TestStation_http_data_ncdiso"
diff --git a/roles/docker-buildsystem/tasks/main.yml b/roles/docker-buildsystem/tasks/main.yml
index b62739e..382a979 100644
--- a/roles/docker-buildsystem/tasks/main.yml
+++ b/roles/docker-buildsystem/tasks/main.yml
@@ -133,3 +133,4 @@
 
 - import_tasks: restore.yml
   when: st_buildsystem_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-buildsystem/tasks/restore.yml b/roles/docker-buildsystem/tasks/restore.yml
index be79a68..2676649 100644
--- a/roles/docker-buildsystem/tasks/restore.yml
+++ b/roles/docker-buildsystem/tasks/restore.yml
@@ -23,14 +23,14 @@
     path: '{{ restore_buildsystem_docker_dir }}'
   register: buildsystem_restore_files
 
-- name: File permissions
-  file:
-    path: '{{ restore_buildsystem_docker_dir }}/{{ item }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rwx,g=rwx,o='
-  with_items: '{{ buildsystem_restore_files.file_list | default([]) }}'
+# - name: File permissions
+#   file:
+#     path: '{{ restore_buildsystem_docker_dir }}/{{ item }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rwx,g=rwx,o='
+#   with_items: '{{ buildsystem_restore_files.file_list | default([]) }}'
 
 # *****************************************************************************
 # For old backups that included the mysql database.
diff --git a/roles/docker-exim4/tasks/main.yml b/roles/docker-exim4/tasks/main.yml
index 201ff7a..052ad8c 100644
--- a/roles/docker-exim4/tasks/main.yml
+++ b/roles/docker-exim4/tasks/main.yml
@@ -110,7 +110,7 @@
       - name: '{{ docker_network_frontend }}'
     ports: '{{ exim4_ports }}'
     image: '{{ exim4_image_name }}:{{ docker_image_tag }}'
-    restart_policy: always
+    restart_policy: no
     state: started
     volumes:
       - '{{ exim4_cv_name }}:/etc/exim4:z'
@@ -122,6 +122,7 @@
 
 - include_tasks: restore.yml
   when: st_exim4_restore.stat.exists == False
+  tags: restore
 
 # *****************************************************************************
 # Email accounts
diff --git a/roles/docker-exim4/tasks/restore.yml b/roles/docker-exim4/tasks/restore.yml
index a8ad81b..e863805 100644
--- a/roles/docker-exim4/tasks/restore.yml
+++ b/roles/docker-exim4/tasks/restore.yml
@@ -20,13 +20,13 @@
     path_to_restore: '{{ exim4_docker_backup_dir }}'
   when: st_exim4_backup_file.stat.exists == False
 
-- name: Set permissions for data-volume data
-  file:
-    path: '{{ host_exim4_docker_restore_dir }}{{ exim4_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
+# - name: Set permissions for data-volume data
+#   file:
+#     path: '{{ host_exim4_docker_restore_dir }}{{ exim4_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
 
 - name: exists - exim4 archive
   stat:
diff --git a/roles/docker-gitlab/tasks/main.yml b/roles/docker-gitlab/tasks/main.yml
index 50f71c6..ac5ffcc 100644
--- a/roles/docker-gitlab/tasks/main.yml
+++ b/roles/docker-gitlab/tasks/main.yml
@@ -128,7 +128,7 @@
   docker_container:
     name: '{{ gitlab_redis_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     image: '{{ redis_image_name }}:{{ docker_image_tag }}'
     networks:
       - name: '{{ docker_network_frontend }}'
@@ -137,7 +137,7 @@
   docker_container:
     name: '{{ gitlab_db_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     volumes_from: '{{ gitlab_db_dv_name }}'
     image: '{{ gitlab_db_image_name }}:{{ docker_image_tag }}'
     networks:
@@ -147,7 +147,7 @@
   docker_container:
     name: '{{ gitlab_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.git.hostname }}'
     ports: '{{ container_port_map.git.port_args }}'
     networks:
@@ -181,3 +181,4 @@
 
 - include_tasks: restore.yml
   when: st_gitlab_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-gitlab/tasks/restore.yml b/roles/docker-gitlab/tasks/restore.yml
index 6d40fff..90c7934 100644
--- a/roles/docker-gitlab/tasks/restore.yml
+++ b/roles/docker-gitlab/tasks/restore.yml
@@ -23,14 +23,14 @@
     path: '{{ host_gitlab_docker_restore_dir }}'
   register: gitlab_backup
 
-- name: File permissions
-  file:
-    path: '{{ host_gitlab_docker_restore_dir }}/{{ item }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rwx,g=rwx,o='
-  with_items: '{{ gitlab_backup.file_list | default([]) }}'
+# - name: File permissions
+#   file:
+#     path: '{{ host_gitlab_docker_restore_dir }}/{{ item }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rwx,g=rwx,o='
+#   with_items: '{{ gitlab_backup.file_list | default([]) }}'
 
 # *****************************************************************************
 # restore the gitlap backup
diff --git a/roles/docker-mantisbt/tasks/main.yml b/roles/docker-mantisbt/tasks/main.yml
index df44519..3ee9591 100644
--- a/roles/docker-mantisbt/tasks/main.yml
+++ b/roles/docker-mantisbt/tasks/main.yml
@@ -144,7 +144,7 @@
   docker_container:
     name: '{{ mantisbt_db_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     volumes_from:
       - '{{ mantisbt_db_dv_name }}'
     image: '{{ mantisbt_db_image_name }}:{{ docker_image_tag }}'
@@ -155,7 +155,7 @@
   docker_container:
     name: '{{ mantisbt_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.mantisbt.hostname }}'
     ports: '{{ container_port_map.mantisbt.port_args }}'
     networks:
@@ -186,3 +186,4 @@
 
 - include_tasks: restore.yml
   when: st_mantisbt_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-mantisbt/tasks/restore.yml b/roles/docker-mantisbt/tasks/restore.yml
index 19eeaa8..323c254 100644
--- a/roles/docker-mantisbt/tasks/restore.yml
+++ b/roles/docker-mantisbt/tasks/restore.yml
@@ -34,29 +34,29 @@
     path_to_restore: '{{ mantisbt_docker_backup_dir }}'
   when: st_mantisbt_static_archive.stat.exists == False or st_mantisbt_SQL_file.stat.exists == False or st_mantisbt_files_table_SQL_file.stat.exists == False
 
-- name: permissions - Static
-  file:
-    path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_static_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
-
-- name: permissions - SQL (files table)
-  file:
-    path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_database_files_table_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
-
-- name: permissions - SQL (remaining tables)
-  file:
-    path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_database_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
+# - name: permissions - Static
+#   file:
+#     path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_static_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
+
+# - name: permissions - SQL (files table)
+#   file:
+#     path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_database_files_table_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
+
+# - name: permissions - SQL (remaining tables)
+#   file:
+#     path: '{{ host_mantisbt_docker_restore_dir }}{{ mantisbt_database_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
 
 - name: exists - Static
   stat:
diff --git a/roles/docker-mediawiki/tasks/main.yml b/roles/docker-mediawiki/tasks/main.yml
index 251ba34..580c03f 100644
--- a/roles/docker-mediawiki/tasks/main.yml
+++ b/roles/docker-mediawiki/tasks/main.yml
@@ -118,7 +118,7 @@
   docker_container:
     name: '{{ wiki_db_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     volumes_from: '{{ wiki_db_dv_name }}'
     image: '{{ wiki_db_image_name }}:{{ docker_image_tag }}'
     networks:
@@ -128,7 +128,7 @@
   docker_container:
     name: '{{ wiki_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.wiki.hostname }}' 
     ports: '{{ container_port_map.wiki.port_args }}'
     networks:
@@ -147,3 +147,4 @@
 
 - include_tasks: restore.yml
   when: st_mediawiki_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-mediawiki/tasks/restore.yml b/roles/docker-mediawiki/tasks/restore.yml
index 0307d42..90b9b94 100644
--- a/roles/docker-mediawiki/tasks/restore.yml
+++ b/roles/docker-mediawiki/tasks/restore.yml
@@ -27,21 +27,21 @@
     path_to_restore: '{{ wiki_docker_backup_dir }}'
   when: st_wiki_static_archive.stat.exists == False or st_wiki_SQL_file.stat.exists == False
 
-- name: permissions - Static
-  file:
-    path: '{{ host_wiki_docker_restore_dir }}{{ wiki_static_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
+# - name: permissions - Static
+#   file:
+#     path: '{{ host_wiki_docker_restore_dir }}{{ wiki_static_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
 
-- name: permissions - SQL
-  file:
-    path: '{{ host_wiki_docker_restore_dir }}{{ wiki_database_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
+# - name: permissions - SQL
+#   file:
+#     path: '{{ host_wiki_docker_restore_dir }}{{ wiki_database_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
 
 - name: exists - Static
   stat:
diff --git a/roles/docker-openldap/tasks/main.yml b/roles/docker-openldap/tasks/main.yml
index 061770f..125fc4f 100644
--- a/roles/docker-openldap/tasks/main.yml
+++ b/roles/docker-openldap/tasks/main.yml
@@ -110,7 +110,7 @@
   docker_container:
     name: '{{ openldap_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.ldap.hostname }}'
     ports: '{{ container_port_map.ldap.port_args }}'
     volumes:
@@ -141,7 +141,7 @@
   docker_container:
     name: '{{ phpldapadmin_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.ldap.hostname }}'
     ports: '{{ container_port_map.phpldapadmin.port_args }}'
     volumes:
@@ -159,6 +159,7 @@
 
 - include_tasks: restore.yml
   when: st_openldap_restore.stat.exists == False
+  tags: restore
 
 # *****************************************************************************
 # Set the LDAP passwords
diff --git a/roles/docker-openldap/tasks/restore.yml b/roles/docker-openldap/tasks/restore.yml
index 8e4a335..34c83e2 100644
--- a/roles/docker-openldap/tasks/restore.yml
+++ b/roles/docker-openldap/tasks/restore.yml
@@ -18,14 +18,14 @@
     path_to_restore: '{{ openldap_docker_backup_dir }}'
   when: ldap_backup.file_list == []
 
-- name: Set permissions for data-volume data
-  file:
-    path: '{{ host_openldap_docker_restore_dir }}/{{ item.ldif_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
-  with_items: '{{ openldap_backup_files }}'
+# - name: Set permissions for data-volume data
+#   file:
+#     path: '{{ host_openldap_docker_restore_dir }}/{{ item.ldif_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
+#   with_items: '{{ openldap_backup_files }}'
 
 # *****************************************************************************
 # restore the openldap backup
diff --git a/roles/docker-openssl/tasks/main.yml b/roles/docker-openssl/tasks/main.yml
index 7bb3bf8..a3828f6 100644
--- a/roles/docker-openssl/tasks/main.yml
+++ b/roles/docker-openssl/tasks/main.yml
@@ -97,3 +97,4 @@
 
 - include_tasks: restore.yml
   when: st_openssl_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-openssl/tasks/restore.yml b/roles/docker-openssl/tasks/restore.yml
index 21628c8..7740ffa 100644
--- a/roles/docker-openssl/tasks/restore.yml
+++ b/roles/docker-openssl/tasks/restore.yml
@@ -20,13 +20,13 @@
     path_to_restore: '{{ openssl_docker_backup_dir }}'
   when: st_openssl_backup_file.stat.exists == False
 
-- name: Set permissions for data-volume data
-  file:
-    path: '{{ host_openssl_docker_restore_dir }}{{ openssl_backup_file }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rw,g=rw,o='
+# - name: Set permissions for data-volume data
+#   file:
+#     path: '{{ host_openssl_docker_restore_dir }}{{ openssl_backup_file }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rw,g=rw,o='
 
 - name: exists - openssl archive
   stat:
diff --git a/roles/docker-svn/tasks/main.yml b/roles/docker-svn/tasks/main.yml
index f87afb7..2fc8540 100644
--- a/roles/docker-svn/tasks/main.yml
+++ b/roles/docker-svn/tasks/main.yml
@@ -80,7 +80,7 @@
   docker_container:
     name: '{{ svn_container_name }}'
     detach: true
-    restart_policy: always
+    restart_policy: no
     hostname: '{{ container_addr_map.svn.hostname }}'
     ports: '{{ container_port_map.svn.port_args }}'
     networks:
@@ -98,3 +98,4 @@
 
 - include_tasks: restore.yml
   when: st_svn_restore.stat.exists == False
+  tags: restore
diff --git a/roles/docker-svn/tasks/restore.yml b/roles/docker-svn/tasks/restore.yml
index 34cee1e..f8bf2a2 100644
--- a/roles/docker-svn/tasks/restore.yml
+++ b/roles/docker-svn/tasks/restore.yml
@@ -23,14 +23,14 @@
     path: '{{ host_svn_docker_restore_dir }}'
   register: svn_repo_backup
 
-- name: File permissions
-  file:
-    path: '{{ host_svn_docker_restore_dir }}/{{ item }}'
-    state: touch
-    owner: root
-    group: root
-    mode: 'u=rwx,g=rwx,o='
-  with_items: '{{ svn_repo_backup.file_list | default([]) }}'
+# - name: File permissions
+#   file:
+#     path: '{{ host_svn_docker_restore_dir }}/{{ item }}'
+#     state: touch
+#     owner: root
+#     group: root
+#     mode: 'u=rwx,g=rwx,o='
+#   with_items: '{{ svn_repo_backup.file_list | default([]) }}'
 
 # *****************************************************************************
 # restore the svn backup
diff --git a/vmdaedalus/.gitignore b/vmdaedalus/.gitignore
new file mode 100644
index 0000000..c148b6f
--- /dev/null
+++ b/vmdaedalus/.gitignore
@@ -0,0 +1,2 @@
+bacula-restores/
+vmdaedalus-virtualbox.box
diff --git a/vmdaedalus/vmdaedalus.cfg b/vmdaedalus/vmdaedalus.cfg
new file mode 100644
index 0000000..5d5fdee
--- /dev/null
+++ b/vmdaedalus/vmdaedalus.cfg
@@ -0,0 +1,71 @@
+install
+text
+cdrom
+skipx
+lang en_US.UTF-8
+keyboard us
+timezone UTC
+rootpw vagrant
+user --name=vagrant --password=vagrant
+auth --enableshadow --passalgo=sha512 --kickstart
+firewall --disabled
+selinux --permissive
+bootloader --location=mbr
+zerombr
+clearpart --all --initlabel
+autopart
+firstboot --disable
+reboot
+repo --name=epel   --baseurl=http://download.fedoraproject.org/pub/epel/7/x86_64/
+repo --name=extras --baseurl=http://mirror.centos.org/centos/7/extras/x86_64/
+repo --name=docker --baseurl=http://download.docker.com/linux/centos/7/x86_64/stable/
+
+%packages --instLangs=en_US.utf8 --nobase --ignoremissing --excludedocs
+@base
+@core
+@hardware-monitoring
+@input-methods
+@performance
+@mariadb
+@mariadb-client
+epel-release
+bacula-client
+bacula-common
+bacula-console
+bacula-director
+bacula-libs
+bacula-libs-sql
+bacula-storage
+bacula-console-bat
+docker-ce
+git
+subversion
+pexpect
+yum-utils
+%end
+ 
+ 
+%post --log=/root/ks.log
+ 
+echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
+echo "Defaults:vagrant !requiretty" >> /etc/sudoers.d/vagrant
+chmod 0440 /etc/sudoers.d/vagrant
+mkdir -pm 700 /home/vagrant/.ssh
+#curl -o /home/vagrant/.ssh/authorized_keys https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub
+cat <<EOK >/home/vagrant/.ssh/authorized_keys
+ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8Y\
+Vr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdO\
+KLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7Pt\
+ixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmC\
+P3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcW\
+yLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
+EOK
+chmod 0600 /home/vagrant/.ssh/authorized_keys
+chown -R vagrant.vagrant /home/vagrant/.ssh
+yum -y update
+yum -y remove linux-firmware
+yum-config-manager \
+    --add-repo \
+    https://download.docker.com/linux/centos/docker-ce.repo
+
+%end
diff --git a/vmdaedalus/vmdaedalus.json b/vmdaedalus/vmdaedalus.json
new file mode 100644
index 0000000..2703db8
--- /dev/null
+++ b/vmdaedalus/vmdaedalus.json
@@ -0,0 +1,43 @@
+{
+    "variables": {
+    },
+    "builders": [{
+        "type": "virtualbox-iso",
+        "guest_os_type": "RedHat_64",
+        "iso_url": "/home/coopera/Downloads/CentOS-7-x86_64-DVD-1708/CentOS-7-x86_64-DVD-1708.iso",
+        "iso_checksum": "ec7500d4b006702af6af023b1f8f1b890b6c7ee54400bb98cef968b883cd6546",
+        "iso_checksum_type": "sha256",
+        "ssh_username": "vagrant",
+        "ssh_password": "vagrant",
+        "ssh_wait_timeout": "600s",
+        "vm_name": "vmdaedalus",
+        "http_directory": "./",
+        "boot_wait": "10s",
+        "boot_command": [
+            "<esc><wait>",
+            "linux ks=http://{{.HTTPIP}}:{{.HTTPPort}}/vmdaedalus.cfg",
+            "<enter><wait>"
+        ],
+        "shutdown_command": "echo 'vagrant' |sudo -S shutdown -P now",
+        "vboxmanage": [
+            ["modifyvm", "{{.Name}}", "--memory", "512"],
+            ["modifyvm", "{{.Name}}", "--usb", "off"],
+            ["modifyvm", "{{.Name}}", "--audio", "none"]
+        ],
+        "disk_size": "120000"
+    }],
+    "provisioners": [{
+        "type": "shell",
+        "inline": [
+            "sudo yum -y install gcc make bzip2 kernel-headers kernel-devel dkms",
+            "sudo yum clean all",
+            "sudo mount -o loop /home/vagrant/VBoxGuestAdditions.iso /mnt",
+            "sudo sh /mnt/VBoxLinuxAdditions.run",
+            "sudo umount /mnt"
+        ]
+    }],
+    "post-processors": [{
+        "type": "vagrant",
+        "output": "./vmdaedalus-{{.Provider}}.box"
+    }]
+}
