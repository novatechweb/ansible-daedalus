Bottom: 7513aef45f642a461275f0be4747cf94385edd96
Top:    04e31ad89e714a8f5fd0421d20767ed017427a95
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-05-10 14:04:14 -0500

Add buildbot NTEL worker Docker image

---
diff --git a/ansible-playbook/group_vars/all/buildbot.yml b/ansible-playbook/group_vars/all/buildbot.yml
index 6b06954..d5a1a44 100644
--- a/ansible-playbook/group_vars/all/buildbot.yml
+++ b/ansible-playbook/group_vars/all/buildbot.yml
@@ -1,3 +1,4 @@
 ---
 buildbot_version: 1.1.1
 buildbot_worker_port: 9989
+buildbot_worker_ntel: worker-ntel
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index 6e57f55..b20d919 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -18,3 +18,4 @@ buildsystem_database_root_password:  '{{ lookup("password", inventory_dir + "/cr
 buildsystem_database_build_password: '{{ lookup("password", inventory_dir + "/credentials/buildsystem.novatech-llc.com/database/readuser") }}'
 svn_username:                        '{{ lookup("file",     inventory_dir + "/personal_credentials/svn/username") }}'
 svn_password:                        '{{ lookup("file",     inventory_dir + "/personal_credentials/svn/password") }}'
+buildbot_worker_ntel_password:       '{{ lookup("password", inventory_dir + "/credentials/buildbot.novatech-llc.com/worker_ntel length=20") }}'
diff --git a/docker/buildbot-worker-ntel/Dockerfile b/docker/buildbot-worker-ntel/Dockerfile
new file mode 100644
index 0000000..11a726f
--- /dev/null
+++ b/docker/buildbot-worker-ntel/Dockerfile
@@ -0,0 +1,89 @@
+# buildbot/buildbot-worker
+
+# please follow docker best practices
+# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/
+
+# Provides a base Ubuntu (16.04) image with latest buildbot worker installed
+# the worker image is not optimized for size, but rather uses ubuntu for wider package availability
+
+FROM        krallin/ubuntu-tini:trusty
+MAINTAINER  Buildbot maintainers
+
+WORKDIR /buildbot
+
+# Install security updates and required packages
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+       alien \
+       build-essential \
+       chrpath \
+       cmake \
+       cpio \
+       curl \
+       diffstat \
+       docbook-xsl \
+       gawk \
+       git \
+       libffi-dev \
+       libssl-dev \
+       locales \
+       net-tools \
+       default-jre-headless \
+       python-dev \
+       python3 \
+       subversion \
+       texinfo \
+       wget \
+       xsltproc \
+&&  rm -rf /var/lib/apt/lists/*
+
+# Generate UTF-8 locale for python3
+# RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
+# &&  dpkg-reconfigure -f noninteractive locales \
+# &&  update-locale LANG=en_US.UTF-8
+
+# Generate UTF-8 locale for python3
+RUN echo "en_US.UTF-8 UTF-8" >> /var/lib/locales/supported.d/local \
+&&  dpkg-reconfigure -f noninteractive locales \
+&&  update-locale LANG=en_US.UTF-8
+
+# Set locale environment
+ENV LANG=en_US.UTF-8 \
+    LANGUAGE=en_US:en \
+    LC_ALL=en_US.UTF-8
+
+# Reset /bin/sh to bash instead of dash
+RUN echo "dash dash/sh boolean false" \
+|   debconf-set-selections -v \
+&&  dpkg-reconfigure -f noninteractive dash
+
+ARG BUILDBOT_VERSION
+# Install required python packages, and twisted
+RUN wget https://bootstrap.pypa.io/get-pip.py \
+&&  python get-pip.py --no-cache-dir \
+&&  pip --no-cache-dir install \
+    'twisted[tls]' \
+    buildbot-worker==${BUILDBOT_VERSION}
+
+# Install software for image signing
+RUN curl http://172.16.64.2/~georgem/610-009981-015_SW_PTK_5.3_Client_RevA.tar \
+|   tar -v -x -C /tmp \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/ptkc_sdk/PTKcpsdk-5.3.0-16.x86_64.rpm \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/ptkc_runtime/PTKcprt-5.3.0-15.x86_64.rpm \
+&&  alien --to-deb --install --scripts /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/SDKs/Linux64/network_hsm_access_provider/PTKnethsm-5.3.0-15.x86_64.rpm \
+&&  echo "ET_HSM_NETCLIENT_SERVERLIST=172.16.64.38" > /etc/default/et_hsm \
+&&  echo "/opt/safenet/protecttoolkit5/ptk/lib" > /etc/ld.so.conf.d/safenet_ptk.conf \
+&&  ldconfig -v \
+&&  rm -rf /tmp/610-009981-015_SW_PTK_5.3_Client_RevA/
+
+# Create buildbot user
+ARG BUILDBOT_UID=1000
+COPY buildbot/ /home/buildbot/
+RUN useradd --comment "Buildbot Server" --home-dir "/home/buildbot" --shell "/bin/bash" --uid ${BUILDBOT_UID} --user-group buildbot \
+&&  chown -v -R buildbot:buildbot "/buildbot" \
+&&  chown -v -R buildbot:buildbot "/home/buildbot"
+
+USER buildbot
+
+CMD ["/home/buildbot/start.sh"]
diff --git a/docker/buildbot-worker-ntel/buildbot/.gitconfig b/docker/buildbot-worker-ntel/buildbot/.gitconfig
new file mode 100644
index 0000000..efd988f
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/.gitconfig
@@ -0,0 +1,3 @@
+[user]
+	name = BuildBot
+	email = buildbot@novatechweb.com
diff --git a/docker/buildbot-worker-ntel/buildbot/buildbot.tac b/docker/buildbot-worker-ntel/buildbot/buildbot.tac
new file mode 100644
index 0000000..472f609
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/buildbot.tac
@@ -0,0 +1,38 @@
+import fnmatch
+import os
+import sys
+
+from twisted.application import service
+from twisted.python.log import FileLogObserver
+from twisted.python.log import ILogObserver
+
+from buildbot_worker.bot import Worker
+
+# setup worker
+basedir = os.path.abspath(os.path.dirname(__file__))
+application = service.Application('buildbot-worker')
+
+
+application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
+# and worker on the same process!
+buildmaster_host = os.environ.get("BUILDBOT_MASTER", 'localhost')
+port = int(os.environ.get("BUILDBOT_WORKER_PORT", 9989))
+workername = os.environ.get("BUILDBOT_WORKER_NTEL", 'docker')
+passwd = os.environ.get("BUILDBOT_WORKER_PASSWORD")
+
+# delete the password from the environ so that it is not leaked in the log
+blacklist = os.environ.get("BUILDBOT_ENVIRONMENT_BLACKLIST", "BUILDBOT_WORKER_PASSWORD").split(',')
+for name in list(os.environ.keys()):
+    for toremove in blacklist:
+        if fnmatch.fnmatch(name, toremove):
+            del os.environ[name]
+
+keepalive = 600
+umask = None
+maxdelay = 300
+allow_shutdown = None
+
+s = Worker(buildmaster_host, port, workername, passwd, basedir,
+           keepalive, umask=umask, maxdelay=maxdelay,
+           allow_shutdown=allow_shutdown)
+s.setServiceParent(application)
diff --git a/docker/buildbot-worker-ntel/buildbot/ci-archive.sh b/docker/buildbot-worker-ntel/buildbot/ci-archive.sh
new file mode 100755
index 0000000..52b8963
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/ci-archive.sh
@@ -0,0 +1,40 @@
+#!/bin/bash
+set -x
+MACHINE="$1";shift
+DESTDIR="$1";shift
+TIMESTAMP="$1";shift
+
+# Gather variables from bitbake
+bitbake_vars=$(mktemp)
+bitbake -e 2>&1 > $bitbake_vars
+eval $(grep '^TOPDIR=' $bitbake_vars)
+eval $(grep '^TMPDIR=' $bitbake_vars)
+eval $(grep '^DEPLOY_DIR=' $bitbake_vars)
+eval $(grep '^BUILDHISTORY_DIR=' $bitbake_vars)
+
+# Generate output filename and directory
+rootdir="${MACHINE}.${TIMESTAMP}"
+filename=${rootdir}.tar.gz
+archive="${DESTDIR}/${filename}"
+
+# Gather files to archive into a text file to feed to tar
+files_to_archive=$(mktemp)
+echo "${DEPLOY_DIR}" >> $files_to_archive
+echo "${BUILDHISTORY_DIR}" >> $files_to_archive
+find "${TMPDIR}" -type d -name "temp" >> $files_to_archive
+echo "$*" >> $files_to_archive
+
+mkdir -p "${DESTDIR}"
+
+# Remove leading and trailing slashes from TOPDIR
+TOPDIR=${TOPDIR#/}; TOPDIR=${TOPDIR%/}
+
+# Create the archive, substituting path prefixes of TOPDIR into rootdir
+tar --verbose --create --auto-compress \
+    --transform "s!^${TOPDIR}!${rootdir}!" \
+    --file "${archive}" \
+    --files-from="${files_to_archive}"
+
+# Clean up
+rm $bitbake_vars
+rm $files_to_archive
diff --git a/docker/buildbot-worker-ntel/buildbot/start.sh b/docker/buildbot-worker-ntel/buildbot/start.sh
new file mode 100755
index 0000000..23ce583
--- /dev/null
+++ b/docker/buildbot-worker-ntel/buildbot/start.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+mkdir -p $HOME/.ssh
+cp -R /run/secrets/ssh/* $HOME/.ssh
+chmod -R 600 $HOME/.ssh/*
+
+ln -v -s -f /home/buildbot/buildbot.tac /buildbot/buildbot.tac
+exec twistd --nodaemon --logfile=- --pidfile=/tmp/twistd.pid --python=buildbot.tac
diff --git a/roles/buildbot-worker-ntel/README.md b/roles/buildbot-worker-ntel/README.md
new file mode 100644
index 0000000..225dd44
--- /dev/null
+++ b/roles/buildbot-worker-ntel/README.md
@@ -0,0 +1,38 @@
+Role Name
+=========
+
+A brief description of the role goes here.
+
+Requirements
+------------
+
+Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.
+
+Role Variables
+--------------
+
+A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.
+
+Dependencies
+------------
+
+A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.
+
+Example Playbook
+----------------
+
+Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:
+
+    - hosts: servers
+      roles:
+         - { role: username.rolename, x: 42 }
+
+License
+-------
+
+BSD
+
+Author Information
+------------------
+
+An optional section for the role authors to include contact information, or a website (HTML is not allowed).
diff --git a/roles/buildbot-worker-ntel/defaults/main.yml b/roles/buildbot-worker-ntel/defaults/main.yml
new file mode 100644
index 0000000..e2a4a40
--- /dev/null
+++ b/roles/buildbot-worker-ntel/defaults/main.yml
@@ -0,0 +1,23 @@
+---
+# defaults file for buildbot-worker-ntel
+
+# The hostname passed as an envirnment variable into the container
+container_addr_map:
+  buildbot:
+    ip_addr: '127.0.0.1'
+    hostname: buildbot-worker-ntel.example.com
+
+# Network names
+docker_network_frontend: 'frontend'
+
+buildbot_worker_data_path: '/buildbot'
+
+# the name of the image being duilt and used for the container
+buildbot_image_repo: https://github.com/novatechweb/docker-buildbot-worker-ntel.git
+buildbot_image_name: '{{ docker_registry_username }}/buildbot-worker-ntel'
+
+# the name of the container being started
+buildbot_container_name: '{{ docker_name_prefix }}buildbot-worker-ntel'
+
+# the name of the data-volume used by the container
+buildbot_dv_name: '{{ docker_name_prefix }}buildbot-worker-ntel_DV'
diff --git a/roles/buildbot-worker-ntel/handlers/main.yml b/roles/buildbot-worker-ntel/handlers/main.yml
new file mode 100644
index 0000000..6347b70
--- /dev/null
+++ b/roles/buildbot-worker-ntel/handlers/main.yml
@@ -0,0 +1,2 @@
+---
+# handlers file for buildbot-worker-ntel
\ No newline at end of file
diff --git a/roles/buildbot-worker-ntel/meta/main.yml b/roles/buildbot-worker-ntel/meta/main.yml
new file mode 100644
index 0000000..7223799
--- /dev/null
+++ b/roles/buildbot-worker-ntel/meta/main.yml
@@ -0,0 +1,57 @@
+galaxy_info:
+  author: your name
+  description: your description
+  company: your company (optional)
+
+  # If the issue tracker for your role is not on github, uncomment the
+  # next line and provide a value
+  # issue_tracker_url: http://example.com/issue/tracker
+
+  # Some suggested licenses:
+  # - BSD (default)
+  # - MIT
+  # - GPLv2
+  # - GPLv3
+  # - Apache
+  # - CC-BY
+  license: license (GPLv2, CC-BY, etc)
+
+  min_ansible_version: 1.2
+
+  # If this a Container Enabled role, provide the minimum Ansible Container version.
+  # min_ansible_container_version:
+
+  # Optionally specify the branch Galaxy will use when accessing the GitHub
+  # repo for this role. During role install, if no tags are available,
+  # Galaxy will use this branch. During import Galaxy will access files on
+  # this branch. If Travis integration is configured, only notifications for this
+  # branch will be accepted. Otherwise, in all cases, the repo's default branch
+  # (usually master) will be used.
+  #github_branch:
+
+  #
+  # platforms is a list of platforms, and each platform has a name and a list of versions.
+  #
+  # platforms:
+  # - name: Fedora
+  #   versions:
+  #   - all
+  #   - 25
+  # - name: SomePlatform
+  #   versions:
+  #   - all
+  #   - 1.0
+  #   - 7
+  #   - 99.99
+
+  galaxy_tags: []
+    # List tags for your role here, one per line. A tag is a keyword that describes
+    # and categorizes the role. Users find roles by searching for tags. Be sure to
+    # remove the '[]' above, if you add tags to this list.
+    #
+    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
+    #       Maximum 20 tags per role.
+
+dependencies: []
+  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
+  # if you add dependencies to this list.
\ No newline at end of file
diff --git a/roles/buildbot-worker-ntel/tasks/bootstrap.sh b/roles/buildbot-worker-ntel/tasks/bootstrap.sh
new file mode 100755
index 0000000..8353ad9
--- /dev/null
+++ b/roles/buildbot-worker-ntel/tasks/bootstrap.sh
@@ -0,0 +1,17 @@
+#!/bin/sh
+
+DIRS="/cache \
+      /cache/ccache \
+      /cache/downloads \
+      /cache/images \
+      /cache/ipkg-repository \
+      /cache/mirrors \
+      /cache/releases \
+      /cache/sstate"
+
+for d in $DIRS
+do
+  mkdir -p $d
+  chown -c -R buildbot:buildbot $d
+  chmod -v 777 $d
+done
diff --git a/roles/buildbot-worker-ntel/tasks/main.yml b/roles/buildbot-worker-ntel/tasks/main.yml
new file mode 100644
index 0000000..5d3d8e3
--- /dev/null
+++ b/roles/buildbot-worker-ntel/tasks/main.yml
@@ -0,0 +1,2 @@
+---
+# tasks file for buildbot-worker-ntel
\ No newline at end of file
diff --git a/roles/buildbot-worker-ntel/tests/inventory b/roles/buildbot-worker-ntel/tests/inventory
new file mode 100644
index 0000000..878877b
--- /dev/null
+++ b/roles/buildbot-worker-ntel/tests/inventory
@@ -0,0 +1,2 @@
+localhost
+
diff --git a/roles/buildbot-worker-ntel/tests/test.yml b/roles/buildbot-worker-ntel/tests/test.yml
new file mode 100644
index 0000000..98df706
--- /dev/null
+++ b/roles/buildbot-worker-ntel/tests/test.yml
@@ -0,0 +1,5 @@
+---
+- hosts: localhost
+  remote_user: root
+  roles:
+    - buildbot-worker-ntel
\ No newline at end of file
diff --git a/roles/buildbot-worker-ntel/vars/main.yml b/roles/buildbot-worker-ntel/vars/main.yml
new file mode 100644
index 0000000..afdab38
--- /dev/null
+++ b/roles/buildbot-worker-ntel/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for buildbot-worker-ntel
\ No newline at end of file
