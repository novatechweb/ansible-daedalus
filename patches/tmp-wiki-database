Bottom: d7abcc9c98cd5bab6417e1fa4f2c16c37f7247bf
Top:    49403f4045a0bc812f063359ff33aea2fc7d9384
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-05-22 15:55:57 -0500

Fix wiki mysql database provision


---
diff --git a/roles/docker-mediawiki/defaults/main.yml b/roles/docker-mediawiki/defaults/main.yml
index 7b88908..6a87498 100644
--- a/roles/docker-mediawiki/defaults/main.yml
+++ b/roles/docker-mediawiki/defaults/main.yml
@@ -24,7 +24,8 @@ wiki_image_repo: https://github.com/novatechweb/docker-mediawiki.git
 
 # the name of the image being duilt and used for the container
 wiki_image_name: '{{ docker_registry_username }}/wiki'
-wiki_db_image_name: '{{ docker_registry_username }}/mysql'
+wiki_db_image_name: 'mysql'
+wiki_db_image_tag: '5'
 
 # the name of the container being started
 wiki_container_name: '{{ docker_name_prefix }}wiki'
diff --git a/roles/docker-mediawiki/tasks/main.yml b/roles/docker-mediawiki/tasks/main.yml
index f084ca6..c995553 100644
--- a/roles/docker-mediawiki/tasks/main.yml
+++ b/roles/docker-mediawiki/tasks/main.yml
@@ -9,7 +9,7 @@
 # *****************************************************************************
 # Setup the directory where the backup and restore is to take place
 
-- name: restore dir
+- name: restore dir (wiki)
   file:
     state: directory
     path: '{{ wiki_docker_restore_dir }}'
@@ -19,7 +19,7 @@
     recurse: no
     setype: svirt_sandbox_file_t
 
-- name: docker_container.conf dir
+- name: docker_container.conf dir (wiki)
   file:
     state: directory
     path: '{{ docker_restore_config_base_dir }}/{{ wiki_dv_name }}'
@@ -28,6 +28,15 @@
     mode: 'u=rwx,g=rx,o=rx'
     recurse: no
 
+- name: docker_container.conf dir (mysql)
+  file:
+    state: directory
+    path: '{{ docker_restore_config_base_dir }}/{{ wiki_db_dv_name }}'
+    owner: root
+    group: root
+    mode: 'u=rwx,g=rx,o=rx'
+    recurse: no
+
 # *****************************************************************************
 # backup script part
 
@@ -58,13 +67,20 @@
     group: tape
     mode: 'u=rw,g=r,o='
 
-- name: exists - state file
+- name: exists - state file (mediawiki)
   stat:
     path: '{{ docker_restore_config_base_dir }}/{{ wiki_dv_name }}/restore.date.txt'
     get_checksum: False
     get_md5: False
   register: st_mediawiki_restore
 
+- name: exists - state file (mysql)
+  stat:
+    path: '{{ docker_restore_config_base_dir }}/{{ wiki_db_dv_name }}/restore.date.txt'
+    get_checksum: False
+    get_md5: False
+  register: st_mediawiki_db_restore
+
 # *****************************************************************************
 # Update or make the image.
 
@@ -95,22 +111,47 @@
   docker_volume:
     name: '{{ wiki_db_dv_name }}'
 
-- name: stop prev container (mysql)
+# - name: initial populate (mysql)
+#   docker_db_init:
+#     image_name: '{{ wiki_db_image_name }}'
+#     image_tag: '{{ wiki_db_image_tag }}'
+#     container_name: '{{ wiki_db_dv_name }}_init_db'
+#     data_volume_container_name: '{{ wiki_db_dv_name }}'
+#     database_name: wikidb
+#     database_user: '{{ wiki_db_user }}'
+#     database_password: '{{ wiki_db_password | quote }}'
+#     database_root_password: '{{ wiki_db_root_password | quote }}'
+
+- name: initialize mysql container
+  when: st_mediawiki_db_restore.stat.exists == False
+  block:
+  - name: Start initialization of empty volume
+    docker_container:
+      name: '{{ wiki_db_dv_name}}_init_db'
+      image: '{{ wiki_db_image_name }}:{{ wiki_db_image_tag }}'
+      volumes:
+        - '{{ wiki_db_dv_name }}:/var/lib/mysql:z'
+      env:
+        MYSQL_DATABASE: 'wikidb'
+        MYSQL_ROOT_PASSWORD: '{{ wiki_db_root_password }}'
+        MYSQL_USER: '{{ wiki_db_user }}'
+        MYSQL_PASSWORD: '{{ wiki_db_password }}'
+  - name: wait for initialization to complete
+    shell: >
+        printf 'SHOW GLOBAL STATUS\n' | docker exec -i 
+        {{ wiki_db_dv_name}}_init_db 
+        mysql --host=localhost --user={{ wiki_db_user | quote }}
+        --password={{ wiki_db_password | quote }} wikidb
+    register: container_status
+    retries: 20
+    delay: 3
+    until: "container_status.rc == 0"
+  - name: remove initialization container
   docker_container:
-    image: '{{ wiki_db_image_name }}'
-    name: '{{ wiki_db_container_name }}'
+      name: '{{ wiki_db_dv_name}}_init_db'
     state: stopped
-
-- name: initial populate (mysql)
-  docker_db_init:
-    image_name: '{{ wiki_db_image_name }}'
-    image_tag: '{{ docker_image_tag }}'
-    container_name: '{{ wiki_db_dv_name }}_init_db'
-    data_volume_container_name: '{{ wiki_db_dv_name }}'
-    database_name: wikidb
-    database_user: '{{ wiki_db_user }}'
-    database_password: '{{ wiki_db_password | quote }}'
-    database_root_password: '{{ wiki_db_root_password | quote }}'
+  - name: State file
+    shell: 'date --rfc-3339=seconds > {{ docker_restore_config_base_dir }}/{{ wiki_db_dv_name }}/restore.date.txt'
 
 # *****************************************************************************
 # Start the data container running
@@ -120,8 +161,9 @@
     name: '{{ wiki_db_container_name }}'
     detach: true
     restart_policy: no
-    volumes_from: '{{ wiki_db_dv_name }}'
-    image: '{{ wiki_db_image_name }}:{{ docker_image_tag }}'
+    volumes:
+      - '{{ wiki_db_dv_name }}:/var/lib/mysql:z'
+    image: '{{ wiki_db_image_name }}:{{ wiki_db_image_tag }}'
     networks:
       - name: '{{ docker_network_frontend }}'
 
@@ -134,9 +176,9 @@
     ports: '{{ container_port_map.wiki.port_args }}'
     networks:
       - name: '{{ docker_network_frontend }}'
-    volumes-from: 
-      - '{{ openssl_dv_name }}'
-      - '{{ wiki_dv_name }}'
+    volumes: 
+      - '{{ openssl_dv_name }}:/etc/ssl/private:z'
+      - '{{ wiki_dv_name }}/var/www/html:z'
     env:
       WIKI_HOSTNAME: '{{ container_addr_map.wiki.hostname }}'
       WIKI_MAIL_USER: 'wiki'
