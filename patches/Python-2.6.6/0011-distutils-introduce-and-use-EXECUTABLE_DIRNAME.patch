From: Marc Kleine-Budde <mkl@pengutronix.de>
Date: Tue, 28 Apr 2009 18:05:33 +0200
Subject: [PATCH] distutils: introduce and use EXECUTABLE_DIRNAME

os.path.realpath(sys.executable) is used several times in
distutils.sysconfig. This patch introduces the variable
EXECUTABLE_DIRNAME which holds this information.

This makes it easier to overwrite this value in the cross compilation
scenario. (see later patch)

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
---
 Lib/distutils/sysconfig.py |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/Lib/distutils/sysconfig.py b/Lib/distutils/sysconfig.py
index 350e48c..83af687 100644
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -21,11 +21,12 @@ from distutils.errors import DistutilsPlatformError
 # These are needed in a couple of spots, so just compute them once.
 PREFIX = os.path.normpath(sys.prefix)
 EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
+EXECUTABLE_DIRNAME = os.path.dirname(os.path.realpath(sys.executable))
 
 # Path to the base directory of the project. On Windows the binary may
 # live in project/PCBuild9.  If we're dealing with an x64 Windows build,
 # it'll live in project/PCbuild/amd64.
-project_base = os.path.dirname(os.path.realpath(sys.executable))
+project_base = EXECUTABLE_DIRNAME
 if os.name == "nt" and "pcbuild" in project_base[-8:].lower():
     project_base = os.path.abspath(os.path.join(project_base, os.path.pardir))
 # PC/VS7.1
@@ -74,7 +75,7 @@ def get_python_inc(plat_specific=0, prefix=None):
 
     if os.name == "posix":
         if python_build:
-            buildir = os.path.dirname(os.path.realpath(sys.executable))
+            buildir = EXECUTABLE_DIRNAME
             if plat_specific:
                 # python.h is located in the buildir
                 inc_dir = buildir
@@ -222,7 +223,7 @@ def get_config_h_filename():
 def get_makefile_filename():
     """Return full pathname of installed Makefile from the Python build."""
     if python_build:
-        return os.path.join(os.path.dirname(os.path.realpath(sys.executable)),
+        return os.path.join(EXECUTABLE_DIRNAME,
                             "Makefile")
     lib_dir = get_python_lib(plat_specific=1, standard_lib=1)
     return os.path.join(lib_dir, "config", "Makefile")
