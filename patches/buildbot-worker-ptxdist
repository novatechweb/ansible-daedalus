Bottom: a6565cb8795fc3a18763e4304f05a4313d5c00e3
Top:    da09088d10677f8eab03c29f90e6a283dee134cf
Author: Andrew Cooper <andrew.cooper@novatechweb.com>
Date:   2018-05-10 14:07:09 -0500

Add buildbot PTXdist worker Docker image

---
diff --git a/ansible-playbook/group_vars/all/buildbot.yml b/ansible-playbook/group_vars/all/buildbot.yml
index d5a1a44..29d7c9f 100644
--- a/ansible-playbook/group_vars/all/buildbot.yml
+++ b/ansible-playbook/group_vars/all/buildbot.yml
@@ -2,3 +2,4 @@
 buildbot_version: 1.1.1
 buildbot_worker_port: 9989
 buildbot_worker_ntel: worker-ntel
+buildbot_worker_ptxdist: worker-ptxdist
diff --git a/ansible-playbook/group_vars/all/credentials.yml b/ansible-playbook/group_vars/all/credentials.yml
index b20d919..02a1cad 100644
--- a/ansible-playbook/group_vars/all/credentials.yml
+++ b/ansible-playbook/group_vars/all/credentials.yml
@@ -19,3 +19,4 @@ buildsystem_database_build_password: '{{ lookup("password", inventory_dir + "/cr
 svn_username:                        '{{ lookup("file",     inventory_dir + "/personal_credentials/svn/username") }}'
 svn_password:                        '{{ lookup("file",     inventory_dir + "/personal_credentials/svn/password") }}'
 buildbot_worker_ntel_password:       '{{ lookup("password", inventory_dir + "/credentials/buildbot.novatech-llc.com/worker_ntel length=20") }}'
+buildbot_worker_ptxdist_password:    '{{ lookup("password", inventory_dir + "/credentials/buildbot.novatech-llc.com/worker_ntel length=20") }}'
diff --git a/docker/buildbot-worker-ptxdist/Dockerfile b/docker/buildbot-worker-ptxdist/Dockerfile
new file mode 100644
index 0000000..69c1f47
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/Dockerfile
@@ -0,0 +1,88 @@
+FROM        krallin/ubuntu-tini:trusty
+MAINTAINER  Buildbot maintainers
+
+WORKDIR /buildbot
+
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install wget \
+&&  wget -qO /etc/apt/trusted.gpg.d/ptx-archive-key.gpg https://debian.pengutronix.de/debian/ptx-archive-key.gpg \
+&&  wget -qO /etc/apt/sources.list.d/pengutronix.list   https://debian.pengutronix.de/debian/pengutronix.list \
+&&  apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+        oselas.toolchain-2011.11.3-armeb-xscale-linux-gnueabi-gcc-4.6.2-glibc-2.14.1-binutils-2.21.1a-kernel-2.6.39-sanitized \
+        oselas.toolchain-2012.12.1-arm-cortexa8-linux-gnueabi-gcc-4.7.3-glibc-2.16.0-binutils-2.22-kernel-3.6-sanitized \
+        oselas.toolchain-2012.12.1-i686-atom-linux-gnu-gcc-4.7.2-glibc-2.16.0-binutils-2.22-kernel-3.6-sanitized \
+&&  rm -rf /var/lib/apt/lists/*
+
+# Install security updates and required packages
+RUN apt-get update \
+&&  DEBIAN_FRONTEND=noninteractive \
+    apt-get -y install -q \
+        autoconf \
+        bison \
+        build-essential \
+        ccache \
+        comerr-dev \
+        default-jre-headless \
+        docbook-xml \
+        docbook-xsl \
+        groff-base \
+        libgdk-pixbuf2.0-dev \
+        libgtk2.0-bin \
+        libicu-dev \
+        libncurses5 \
+        libncurses5-dev \
+        libswitch-perl \
+        libxml-simple-perl \
+        libxml2-utils \
+        lzop \
+        flex \
+        gawk \
+        gcc \
+        gconf2 \
+        gettext \
+        git \
+        libtool \
+        make \
+        python-dev \
+        python-libxml2 \
+        python-tdb \
+        ruby \
+        subversion \
+        ss-dev \
+        texinfo \
+        unzip \
+        wget \
+        xsltproc \
+        yasm \
+&&  rm -rf /var/lib/apt/lists/*
+
+ARG BUILDBOT_VERSION
+# Install required python packages, and twisted
+RUN wget https://bootstrap.pypa.io/get-pip.py \
+&&  python get-pip.py --no-cache-dir \
+&&  pip --no-cache-dir install \
+        'virtualenv' \
+        'twisted[tls]' \
+        buildbot-worker==${BUILDBOT_VERSION} \
+&&  rm -rf get-pip.py
+
+ARG BUILDBOT_UID=1000
+COPY buildbot/ /home/buildbot/
+RUN useradd --comment "Buildbot Server" --home-dir "/home/buildbot" --shell "/bin/bash" --uid ${BUILDBOT_UID} --user-group buildbot \
+&&  chown -v -R buildbot:buildbot "/buildbot" \
+&&  chown -v -R buildbot:buildbot "/home/buildbot" \
+&&  useradd --comment "Gnome Display Manager" --home-dir "/var/lib/gdm" --shell "/sbin/nologin" --user-group --system gdm
+
+# Install ptxdist, a build system
+COPY ptxdist/ /tmp/ptxdist/
+ARG PTXDIST_REPO="git@git.novatech-llc.com:andrew.cooper/ptxdist.git"
+ARG PTXDIST_COMMIT="libconfig"
+ARG SECRET_HOST_IP
+RUN "/tmp/ptxdist/install.sh"
+
+USER buildbot
+
+CMD ["/home/buildbot/start.sh"]
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf b/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf
new file mode 100644
index 0000000..150374b
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.ccache/ccache.conf
@@ -0,0 +1,8 @@
+# Set maximum cache size to 10 GB:
+max_size = 10G
+
+# Disable hard linking for shared cache
+hard_link = false
+
+# Place cache directory in common location
+cache_dir = /cache/ccache
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.gitconfig b/docker/buildbot-worker-ptxdist/buildbot/.gitconfig
new file mode 100644
index 0000000..efd988f
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.gitconfig
@@ -0,0 +1,3 @@
+[user]
+	name = BuildBot
+	email = buildbot@novatechweb.com
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git b/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git
new file mode 100644
index 0000000..7dbac6e
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.ptxdist/ptxdistrc-git
@@ -0,0 +1,75 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# PTXdist 2012.09.1-00373-gee9622f
+#
+
+#
+# PTXDIST Setup Menu
+#
+
+#
+# User
+#
+PTXCONF_SETUP_USER_NAME="NovaTech Buildbot"
+PTXCONF_SETUP_USER_EMAIL="buildbot@novatechweb.com"
+
+#
+# Proxies
+#
+PTXCONF_SETUP_FTP_PROXY=""
+PTXCONF_SETUP_HTTP_PROXY=""
+PTXCONF_SETUP_HTTPS_PROXY=""
+PTXCONF_SETUP_NO_PROXY=""
+
+#
+# Project Searchpath
+#
+PTXCONF_SETUP_PROJECTPATH="${PTXDIST_TOPDIR}/projects"
+
+#
+# Source Directories
+#
+PTXCONF_SETUP_SRCDIR="/cache/downloads"
+
+#
+# Source Download
+#
+# PTXCONF_SETUP_NO_DOWNLOAD is not set
+# PTXCONF_SETUP_PTXMIRROR_ONLY is not set
+PTXCONF_SETUP_PTXMIRROR="http://www.pengutronix.de/software/ptxdist/temporary-src"
+PTXCONF_SETUP_DEBMIRROR="http://ftp.uni-kl.de/debian"
+PTXCONF_SETUP_SFMIRROR="http://downloads.sourceforge.net/sourceforge"
+PTXCONF_SETUP_GNUMIRROR="http://ftp.uni-kl.de/pub/gnu"
+PTXCONF_SETUP_XORGMIRROR="http://xorg.mirrors.pair.com/pub/X11/ftp.x.org"
+PTXCONF_SETUP_KERNELMIRROR="http://www.kernel.org/pub/linux"
+# PTXCONF_SETUP_CHECK_ALWAYS is not set
+PTXCONF_SETUP_CHECK_NOTEMPTY=y
+# PTXCONF_SETUP_CHECK_NEVER is not set
+PTXCONF_SETUP_CHECK="notempty"
+
+#
+# IPKG Repository
+#
+PTXCONF_SETUP_IPKG_REPOSITORY="/cache/ipkg-repository"
+
+#
+# Java SDK
+#
+PTXCONF_SETUP_JAVA_SDK="/usr"
+
+#
+# Developer Options
+#
+# PTXCONF_SETUP_DISABLE_LOCAL_CHECK is not set
+PTXCONF_SETUP_ENV_WHITELIST=""
+# PTXCONF_SETUP_COMMON_CACHE is not set
+# PTXCONF_SETUP_GEN_DEP_TREE is not set
+# PTXCONF_SETUP_CHECK_EXIT_ON_ERROR is not set
+PTXCONF_SETUP_CCACHE=y
+PTXCONF_SETUP_PATCHIN_GIT=y
+# PTXCONF_SETUP_NFS_REL_SYMLINK is not set
+# PTXCONF_SETUP_DIRECT_CLEAN is not set
+PTXCONF_SETUP_HOST_CPP="cpp"
+PTXCONF_SETUP_HOST_CC="gcc"
+PTXCONF_SETUP_HOST_CXX="g++"
+PTXCONF_SETUP_HOST_MAKE="make"
diff --git a/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
new file mode 100644
index 0000000..8dc2a29
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/.pydistutils.cfg
@@ -0,0 +1,2 @@
+[easy_install]
+index-url=http://172.16.103.72/repository/PyPi_Proxy/simple
diff --git a/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac b/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac
new file mode 100644
index 0000000..f0b63bc
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/buildbot.tac
@@ -0,0 +1,38 @@
+import fnmatch
+import os
+import sys
+
+from twisted.application import service
+from twisted.python.log import FileLogObserver
+from twisted.python.log import ILogObserver
+
+from buildbot_worker.bot import Worker
+
+# setup worker
+basedir = os.path.abspath(os.path.dirname(__file__))
+application = service.Application('buildbot-worker')
+
+
+application.setComponent(ILogObserver, FileLogObserver(sys.stdout).emit)
+# and worker on the same process!
+buildmaster_host = os.environ.get("BUILDBOT_MASTER", 'localhost')
+port = int(os.environ.get("BUILDBOT_WORKER_PORT", 9989))
+workername = os.environ.get("BUILDBOT_WORKER_PTXDIST", 'docker')
+passwd = os.environ.get("BUILDBOT_WORKER_PASSWORD")
+
+# delete the password from the environ so that it is not leaked in the log
+blacklist = os.environ.get("BUILDBOT_ENVIRONMENT_BLACKLIST", "BUILDBOT_WORKER_PASSWORD").split(',')
+for name in list(os.environ.keys()):
+    for toremove in blacklist:
+        if fnmatch.fnmatch(name, toremove):
+            del os.environ[name]
+
+keepalive = 600
+umask = None
+maxdelay = 300
+allow_shutdown = None
+
+s = Worker(buildmaster_host, port, workername, passwd, basedir,
+           keepalive, umask=umask, maxdelay=maxdelay,
+           allow_shutdown=allow_shutdown)
+s.setServiceParent(application)
diff --git a/docker/buildbot-worker-ptxdist/buildbot/start.sh b/docker/buildbot-worker-ptxdist/buildbot/start.sh
new file mode 100755
index 0000000..23ce583
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/buildbot/start.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+mkdir -p $HOME/.ssh
+cp -R /run/secrets/ssh/* $HOME/.ssh
+chmod -R 600 $HOME/.ssh/*
+
+ln -v -s -f /home/buildbot/buildbot.tac /buildbot/buildbot.tac
+exec twistd --nodaemon --logfile=- --pidfile=/tmp/twistd.pid --python=buildbot.tac
diff --git a/docker/buildbot-worker-ptxdist/ptxdist/install.sh b/docker/buildbot-worker-ptxdist/ptxdist/install.sh
new file mode 100755
index 0000000..997188a
--- /dev/null
+++ b/docker/buildbot-worker-ptxdist/ptxdist/install.sh
@@ -0,0 +1,27 @@
+#!/bin/bash
+set -e
+set -x
+echo "Install ptxdist version '$PTXDIST_COMMIT'"
+
+chmod -R 700 "/tmp/ptxdist"
+
+echo "172.16.0.102	git.novatech-llc.com" >> /etc/hosts
+
+mkdir -p $HOME/.ssh/
+wget -O $HOME/.ssh/id_rsa http://$SECRET_HOST_IP/ssh/id_rsa
+wget -O $HOME/.ssh/known_hosts http://$SECRET_HOST_IP/ssh/known_hosts
+chmod -R 600 $HOME/.ssh
+
+git clone --branch "${PTXDIST_COMMIT}" --single-branch "${PTXDIST_REPO}" "/tmp/ptxdist/src"
+
+pushd "/tmp/ptxdist/src"
+
+./autogen.sh
+./configure
+make
+make install
+
+popd
+
+rm -rf "$HOME/.ssh"
+rm -rf "/tmp/ptxdist"
diff --git a/roles/buildbot-worker-ptxdist/README.md b/roles/buildbot-worker-ptxdist/README.md
new file mode 100644
index 0000000..225dd44
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/README.md
@@ -0,0 +1,38 @@
+Role Name
+=========
+
+A brief description of the role goes here.
+
+Requirements
+------------
+
+Any pre-requisites that may not be covered by Ansible itself or the role should be mentioned here. For instance, if the role uses the EC2 module, it may be a good idea to mention in this section that the boto package is required.
+
+Role Variables
+--------------
+
+A description of the settable variables for this role should go here, including any variables that are in defaults/main.yml, vars/main.yml, and any variables that can/should be set via parameters to the role. Any variables that are read from other roles and/or the global scope (ie. hostvars, group vars, etc.) should be mentioned here as well.
+
+Dependencies
+------------
+
+A list of other roles hosted on Galaxy should go here, plus any details in regards to parameters that may need to be set for other roles, or variables that are used from other roles.
+
+Example Playbook
+----------------
+
+Including an example of how to use your role (for instance, with variables passed in as parameters) is always nice for users too:
+
+    - hosts: servers
+      roles:
+         - { role: username.rolename, x: 42 }
+
+License
+-------
+
+BSD
+
+Author Information
+------------------
+
+An optional section for the role authors to include contact information, or a website (HTML is not allowed).
diff --git a/roles/buildbot-worker-ptxdist/defaults/main.yml b/roles/buildbot-worker-ptxdist/defaults/main.yml
new file mode 100644
index 0000000..9cdd8b6
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/defaults/main.yml
@@ -0,0 +1,23 @@
+---
+# defaults file for buildbot-worker-ptxdist
+
+# The hostname passed as an envirnment variable into the container
+container_addr_map:
+  buildbot:
+    ip_addr: '127.0.0.1'
+    hostname: buildbot-worker-ptxdist.example.com
+
+# Network names
+docker_network_frontend: 'frontend'
+
+buildbot_worker_ptxdist_data_path: '/buildbot'
+
+# the name of the image being duilt and used for the container
+buildbot_worker_ptxdist_image_repo: https://github.com/novatechweb/docker-buildbot-worker-ptxdist.git
+buildbot_worker_ptxdist_image_name: '{{ docker_registry_username }}/buildbot-worker-ptxdist'
+
+# the name of the container being started
+buildbot_worker_ptxdist_container_name: '{{ docker_name_prefix }}buildbot-worker-ptxdist'
+
+# the name of the data-volume used by the container
+buildbot_worker_ptxdist_dv_name: '{{ docker_name_prefix }}buildbot-worker-ptxdist_DV'
diff --git a/roles/buildbot-worker-ptxdist/handlers/main.yml b/roles/buildbot-worker-ptxdist/handlers/main.yml
new file mode 100644
index 0000000..78087ae
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/handlers/main.yml
@@ -0,0 +1,2 @@
+---
+# handlers file for buildbot-worker-ptxdist
\ No newline at end of file
diff --git a/roles/buildbot-worker-ptxdist/meta/main.yml b/roles/buildbot-worker-ptxdist/meta/main.yml
new file mode 100644
index 0000000..7223799
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/meta/main.yml
@@ -0,0 +1,57 @@
+galaxy_info:
+  author: your name
+  description: your description
+  company: your company (optional)
+
+  # If the issue tracker for your role is not on github, uncomment the
+  # next line and provide a value
+  # issue_tracker_url: http://example.com/issue/tracker
+
+  # Some suggested licenses:
+  # - BSD (default)
+  # - MIT
+  # - GPLv2
+  # - GPLv3
+  # - Apache
+  # - CC-BY
+  license: license (GPLv2, CC-BY, etc)
+
+  min_ansible_version: 1.2
+
+  # If this a Container Enabled role, provide the minimum Ansible Container version.
+  # min_ansible_container_version:
+
+  # Optionally specify the branch Galaxy will use when accessing the GitHub
+  # repo for this role. During role install, if no tags are available,
+  # Galaxy will use this branch. During import Galaxy will access files on
+  # this branch. If Travis integration is configured, only notifications for this
+  # branch will be accepted. Otherwise, in all cases, the repo's default branch
+  # (usually master) will be used.
+  #github_branch:
+
+  #
+  # platforms is a list of platforms, and each platform has a name and a list of versions.
+  #
+  # platforms:
+  # - name: Fedora
+  #   versions:
+  #   - all
+  #   - 25
+  # - name: SomePlatform
+  #   versions:
+  #   - all
+  #   - 1.0
+  #   - 7
+  #   - 99.99
+
+  galaxy_tags: []
+    # List tags for your role here, one per line. A tag is a keyword that describes
+    # and categorizes the role. Users find roles by searching for tags. Be sure to
+    # remove the '[]' above, if you add tags to this list.
+    #
+    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
+    #       Maximum 20 tags per role.
+
+dependencies: []
+  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
+  # if you add dependencies to this list.
\ No newline at end of file
diff --git a/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh b/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh
new file mode 100755
index 0000000..8353ad9
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tasks/bootstrap.sh
@@ -0,0 +1,17 @@
+#!/bin/sh
+
+DIRS="/cache \
+      /cache/ccache \
+      /cache/downloads \
+      /cache/images \
+      /cache/ipkg-repository \
+      /cache/mirrors \
+      /cache/releases \
+      /cache/sstate"
+
+for d in $DIRS
+do
+  mkdir -p $d
+  chown -c -R buildbot:buildbot $d
+  chmod -v 777 $d
+done
diff --git a/roles/buildbot-worker-ptxdist/tasks/main.yml b/roles/buildbot-worker-ptxdist/tasks/main.yml
new file mode 100644
index 0000000..9bc8c93
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tasks/main.yml
@@ -0,0 +1,30 @@
+---
+# tasks file for buildbot-worker-ptxdist
+
+# This will generate passwords for these accounts.
+- assert:
+    that:
+    - buildbot_worker_ptxdist_password is defined
+
+- name: Create buildbot data volume
+  docker_volume:
+    name: '{{ buildbot_dv_name }}'
+
+- name: Checkout image repo
+  git:
+    repo: '{{ buildbot_worker_ptxdist_image_repo }}'
+    version: master
+    dest: '{{ docker_projects_dir }}/buildbot-worker-ptxdist'
+
+- name: Create buildbot master image
+  docker_image:
+    name: '{{ buildbot_worker_ptxdist_image_name }}'
+    tag: '{{ docker_image_tag }}'
+    path: '{{ docker_projects_dir }}/buildbot-worker-ptxdist'
+
+- name: Start buildbot container
+  docker_container:
+    name: '{{ buildbot_worker_ptxdist_container_name }}'
+    image: '{{ buildbot_worker_ptxdist_image_name }}:{{ docker_image_tag }}'
+    volumes:
+      - '{{ buildbot_worker_ptxdist_dv_name }}:{{ buildbot_worker_ptxdist_data_path }}:z'
diff --git a/roles/buildbot-worker-ptxdist/tests/inventory b/roles/buildbot-worker-ptxdist/tests/inventory
new file mode 100644
index 0000000..878877b
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tests/inventory
@@ -0,0 +1,2 @@
+localhost
+
diff --git a/roles/buildbot-worker-ptxdist/tests/test.yml b/roles/buildbot-worker-ptxdist/tests/test.yml
new file mode 100644
index 0000000..2d00de4
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/tests/test.yml
@@ -0,0 +1,5 @@
+---
+- hosts: localhost
+  remote_user: root
+  roles:
+    - buildbot-worker-ptxdist
\ No newline at end of file
diff --git a/roles/buildbot-worker-ptxdist/vars/main.yml b/roles/buildbot-worker-ptxdist/vars/main.yml
new file mode 100644
index 0000000..ae5fa61
--- /dev/null
+++ b/roles/buildbot-worker-ptxdist/vars/main.yml
@@ -0,0 +1,2 @@
+---
+# vars file for buildbot-worker-ptxdist
\ No newline at end of file
