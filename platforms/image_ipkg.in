## SECTION=image

menu "ipkg options                  "

config IMAGE_IPKG_PUSH_TO_REPOSITORY
	bool
	prompt "make images: push packets to ipkg-repository"
	help
	  If this option is checked the packet files are pushed to
	  the ipkg-repository (to be specified in .ptxdistrc).
	  
	  Please note, that the ipkg-repository is currently a
	  local directory on your machine.  

config IMAGE_IPKG_FORCED_PUSH
	depends on IMAGE_IPKG_PUSH_TO_REPOSITORY
	bool
	prompt "force ipkg-push"
	help
	  Usually the script checks for some previous ipkg-push to
	  a 'dist' release and requires you to delete a previous
	  dist directory
	  
	  If this option is checked, this is done by default. This
	  is most useful for development purposes.

menuconfig IMAGE_IPKG_SIGN_OPENSSL
	depends on IMAGE_IPKG_PUSH_TO_REPOSITORY
	bool
	select HOST_OPENSSL
	prompt "sign ipkg-repository with openssl"
	help
	  Use openssl to to sign the Packages file in the package
	  repository.


if IMAGE_IPKG_SIGN_OPENSSL

config IMAGE_IPKG_SIGN_OPENSSL_SIGNER
	string
	default ""
	prompt "signer certificate file"
	help
	  signer certificate file to pass to openssl for signing.

config IMAGE_IPKG_SIGN_OPENSSL_KEY
	string
	default ""
	prompt "private key file"
	help
	  private key file to pass to openssl.

config IMAGE_IPKG_SIGN_OPENSSL_INDIVIDUAL
	bool
	prompt "also sign individual packages"
	help
	  In addition to signing the Packages file and creating 
	  Packages.sig, also sign each package individually each
	  with a separate .sig file.

	  The primary reason for selecting this option is if you
	  want to maintain a package pool of packages signed
	  with multiple signers and you want to be able to verify
	  which specific packages were signed by which signer.

	  You could for instance have a stable and an unstable
	  signing key.

	  Work flow:
	     1) Initial public release. Full ipkg-push
	     2) Customer requests a quick fix involving package-foo
	     3) Fix is made, package-foo is rebuilt.
	     4) Determination has been made that more testing is
	        required before package-foo can be considered stable.
	     5) package-foo is selectively pushed to repository, signed
	        with unstable key.
	     6) Higher priority problem is found in package-bar
	        further testing of package-foo is put on hold.
	     7) Fix is made, package-bar is rebuilt.
	     8) No further testing of package-bar is required.
	     9) package-bar is selectively pushed to repository, signed
	        with stable key
            10) stable flash image is created for manufacturing
	        from the repository. The highest versions of each
	        package signed with the stable key are used. 
	        The image will include the initial version of
	        package-foo.

endif

config IMAGE_INSTALL_FROM_IPKG_REPOSITORY
	bool
	select IMAGE_IPKG_PUSH_TO_REPOSITORY
	select IMAGE_IPKG_FORCED_PUSH
	prompt "make images: install packets from ipkg-repository"
	help
	  If this option is checked the packet files from the
	  ipkg-repository are used to create the images
	  
	  Please note, that the ipkg-repository is currently a
	  local directory on your machine.

config IMAGE_IPKG_INDEX
	bool "generate ipkg.index"
	default y
	help
	  Activating this option generates a ipkg index file
	  ("Packages") in your PKGDIR. If served by a web or ftp
	  server it allows ipkg on your target to access your ipkg and
	  install or update them.

config IMAGE_IPKG_EXTRA_ARGS
	string
	default ""
	prompt "extra arguments passed to ipkg-build"
	help
	  If needed you can add extra arguments for ipkg-build here
	  (e.g. -c if you want ipkg-build to use tar instead of ar.)

endmenu
