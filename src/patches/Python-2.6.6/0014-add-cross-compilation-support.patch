From: Marc Kleine-Budde <mkl@pengutronix.de>
Date: Mon, 4 May 2009 14:39:18 +0200
Subject: [PATCH] add cross compilation support

This patch adds preliminary cross compilation support to python.

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
---
 Lib/distutils/sysconfig.py |   11 +++++++++--
 Makefile.pre.in            |   12 ++++++++----
 configure.in               |   31 ++++++++++++++++++++++++++++---
 setup.py                   |    6 +++++-
 4 files changed, 50 insertions(+), 10 deletions(-)

diff --git a/Lib/distutils/sysconfig.py b/Lib/distutils/sysconfig.py
index 83af687..f583381 100644
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -19,9 +19,16 @@ import sys
 from distutils.errors import DistutilsPlatformError
 
 # These are needed in a couple of spots, so just compute them once.
-PREFIX = os.path.normpath(sys.prefix)
-EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
 EXECUTABLE_DIRNAME = os.path.dirname(os.path.realpath(sys.executable))
+if os.environ.get('CROSS_COMPILING') == 'yes':
+    _sysroot=os.environ.get('_python_sysroot')
+    PREFIX = os.path.normpath(_sysroot + os.environ.get('_python_prefix'))
+    EXEC_PREFIX = os.path.normpath(_sysroot + os.environ.get('_python_exec_prefix'))
+    if '_python_srcdir' in os.environ:
+        EXECUTABLE_DIRNAME = os.path.normpath(os.environ['_python_srcdir'])
+else:
+    PREFIX = os.path.normpath(sys.prefix)
+    EXEC_PREFIX = os.path.normpath(sys.exec_prefix)
 
 # Path to the base directory of the project. On Windows the binary may
 # live in project/PCBuild9.  If we're dealing with an x64 Windows build,
diff --git a/Makefile.pre.in b/Makefile.pre.in
index 78e9a60..8b6a6b4 100644
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -72,6 +72,10 @@ CFLAGSFORSHARED=@CFLAGSFORSHARED@
 # C flags used for building the interpreter object files
 PY_CFLAGS=	$(CFLAGS) $(CPPFLAGS) $(CFLAGSFORSHARED) -DPy_BUILD_CORE
 
+# cross compiler options
+ifndef DESTDIR
+sysroot=	@SYSROOT@
+endif
 
 # Machine-dependent subdirectories
 MACHDEP=	@MACHDEP@
@@ -87,11 +91,11 @@ datarootdir=    @datarootdir@
 
 # Expanded directories
 BINDIR=		@bindir@
-LIBDIR=		@libdir@
+LIBDIR=		$(sysroot)@libdir@
 MANDIR=		@mandir@
-INCLUDEDIR=	@includedir@
-CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+INCLUDEDIR=	$(sysroot)@includedir@
+CONFINCLUDEDIR=	$(sysroot)$(exec_prefix)/include
+SCRIPTDIR=	$(sysroot)$(prefix)/lib
 
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
diff --git a/configure.in b/configure.in
index 52de250..88462b3 100644
--- a/configure.in
+++ b/configure.in
@@ -12,6 +12,9 @@ AC_INIT(python, PYTHON_VERSION, http://www.python.org/python-bugs)
 AC_CONFIG_SRCDIR([Include/object.h])
 AC_CONFIG_HEADER(pyconfig.h)
 
+AC_CANONICAL_BUILD
+AC_CANONICAL_HOST
+
 dnl This is for stuff that absolutely must end up in pyconfig.h.
 dnl Please use pyport.h instead, if possible.
 AH_TOP([
@@ -795,9 +798,9 @@ fi
 
 AC_MSG_RESULT($LDLIBRARY)
 
-AC_PROG_RANLIB
-AC_SUBST(AR)
-AC_CHECK_PROGS(AR, ar aal, ar)
+# find tools while respecting --host setting
+AC_CHECK_TOOL(RANLIB,ranlib)
+AC_CHECK_TOOLS(AR,ar aal,ar)
 
 AC_SUBST(SVNVERSION)
 AC_CHECK_PROG(SVNVERSION, svnversion, found, not-found)
@@ -3910,6 +3913,28 @@ AC_SUBST(PYTHON_FOR_BUILD)
 AC_ARG_VAR(PYTHON_FOR_BUILD,[build system python (default: python)])
 
 
+#
+# Cross compiling
+#
+# special RUNSHARED
+if test "$cross_compiling" = "yes"; then
+    RUNSHARED="\
+		CROSS_COMPILING=yes \
+		_python_cross_host=${ac_cv_host} \
+		_python_sysroot=\"\$(sysroot)\" \
+		_python_srcdir=\"\$(srcdir)\" \
+		_python_prefix=\"\$(prefix)\" \
+		_python_exec_prefix=\"\$(exec_prefix)\""
+fi
+
+# sysroot
+AC_SUBST(SYSROOT)
+if test "$cross_compiling" = "yes"; then
+    AC_MSG_CHECKING([for SYSROOT])
+    AC_MSG_RESULT([$SYSROOT])
+fi
+
+
 # generate output files
 AC_CONFIG_FILES(Makefile.pre Modules/Setup.config)
 AC_OUTPUT
diff --git a/setup.py b/setup.py
index 01b0ffc..d3aac1b 100644
--- a/setup.py
+++ b/setup.py
@@ -1849,7 +1849,11 @@ class PyBuildExt(build_ext):
                                          ffi_configfile):
                 from distutils.dir_util import mkpath
                 mkpath(ffi_builddir)
-                config_args = []
+
+                if os.environ.get('CROSS_COMPILING') != 'yes':
+                    config_args = []
+                else:
+                    config_args = ['--host=%s' % os.environ["_python_cross_host"],]
 
                 # Pass empty CFLAGS because we'll just append the resulting
                 # CFLAGS to Python's; -g or -O2 is to be avoided.
