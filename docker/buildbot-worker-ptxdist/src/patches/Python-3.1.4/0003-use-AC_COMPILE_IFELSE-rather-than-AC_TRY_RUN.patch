From: Marc Kleine-Budde <mkl@pengutronix.de>
Date: Fri, 24 Apr 2009 18:35:19 +0200
Subject: [PATCH] use AC_COMPILE_IFELSE rather than AC_TRY_RUN

AC_TRY_RUN relys on executing the test, not working while cross
compiling. Thus a hard wired value for the cross compilation must and is
used.

Switching to AC_COMPILE_IFELSE just tries to compile the test program
which has the save effect and works even in the cross compiling
scenario.

This patch uses AC_COMPILE_IFELSE for these tests:
"--enable-profiling, enable C-level code profiling"
"whether $CC accepts -OPT:Olimit=0"
"whether $CC accepts -Olimit 1500"

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
---
 configure.in |    9 +++------
 1 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/configure.in b/configure.in
index 4fd2830..3fb4f38 100644
--- a/configure.in
+++ b/configure.in
@@ -665,9 +665,8 @@ AC_ARG_ENABLE(profiling,
               AC_HELP_STRING(--enable-profiling, enable C-level code profiling),
 [ac_save_cc="$CC"
  CC="$CC -pg"
- AC_TRY_RUN([int main() { return 0; }],
+ AC_COMPILE_IFELSE([int main() { return 0; }],
    ac_enable_profiling="yes",
-   ac_enable_profiling="no",
    ac_enable_profiling="no")
  CC="$ac_save_cc"])
 AC_MSG_RESULT($ac_enable_profiling)
@@ -1092,9 +1091,8 @@ AC_MSG_CHECKING(whether $CC accepts -OPT:Olimit=0)
 AC_CACHE_VAL(ac_cv_opt_olimit_ok,
 [ac_save_cc="$CC"
 CC="$CC -OPT:Olimit=0"
-AC_TRY_RUN([int main() { return 0; }],
+AC_COMPILE_IFELSE([int main() { return 0; }],
   ac_cv_opt_olimit_ok=yes,
-  ac_cv_opt_olimit_ok=no,
   ac_cv_opt_olimit_ok=no)
 CC="$ac_save_cc"])
 AC_MSG_RESULT($ac_cv_opt_olimit_ok)
@@ -1114,9 +1112,8 @@ else
   AC_CACHE_VAL(ac_cv_olimit_ok,
   [ac_save_cc="$CC"
   CC="$CC -Olimit 1500"
-  AC_TRY_RUN([int main() { return 0; }],
+  AC_COMPILE_IFELSE([int main() { return 0; }],
     ac_cv_olimit_ok=yes,
-    ac_cv_olimit_ok=no,
     ac_cv_olimit_ok=no)
   CC="$ac_save_cc"])
   AC_MSG_RESULT($ac_cv_olimit_ok)
